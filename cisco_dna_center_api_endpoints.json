{
  "Policy": {
    "AI Endpoint Analytics": [
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/profiling-rules/{ruleId}",
        "method": "GET",
        "operationId": "getDetailsOfASingleProfilingRule",
        "summary": "Get details of a single profiling rule",
        "description": "Fetches details of the profiling rule for the given 'ruleId'.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "ruleId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/profiling-rules/{ruleId}",
        "method": "PUT",
        "operationId": "updateAnExistingProfilingRule",
        "summary": "Update an existing profiling rule",
        "description": "Updates the profiling rule for the given 'ruleId'.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "ruleId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/profiling-rules/{ruleId}",
        "method": "DELETE",
        "operationId": "deleteAnExistingProfilingRule",
        "summary": "Delete an existing profiling rule",
        "description": "Deletes the profiling rule for the given 'ruleId'.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "ruleId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/endpoints/count",
        "method": "GET",
        "operationId": "fetchTheCountOfEndpoints",
        "summary": "Fetch the count of endpoints",
        "description": "Fetch the total count of endpoints that match the given filter criteria.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [
          "profilingStatus",
          "macAddress",
          "macAddresses",
          "ip",
          "deviceType",
          "hardwareManufacturer",
          "hardwareModel",
          "operatingSystem",
          "registered",
          "randomMac",
          "trustScore",
          "authMethod",
          "postureStatus",
          "aiSpoofingTrustLevel",
          "changedProfileTrustLevel",
          "natTrustLevel",
          "concurrentMacTrustLevel",
          "ipBlocklistDetected",
          "unauthPortDetected",
          "weakCredDetected",
          "ancPolicy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/profiling-rules",
        "method": "GET",
        "operationId": "getListOfProfilingRules",
        "summary": "Get list of profiling rules",
        "description": "This API fetches the list of profiling rules. It can be used to show profiling rules in client applications, or export those from an environment. 'POST /profiling-rules/bulk' API can be used to import such exported rules into another environment.\nIf this API is used to export rules to be imported into another Cisco DNA Center system, then ensure that 'includeDeleted' parameter is 'true', so that deleted rules get synchronized correctly.\nUse query parameters to filter the data, as required. If no filter is provided, then it will include only rules of type 'Custom Rule' in the response. By default, the response is limited to 500 records. Use 'limit' parameter to fetch higher number of records, if required. 'GET /profiling-rules/count' API can be used to find out the total number of rules in the system.\n",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [
          "ruleType",
          "includeDeleted",
          "limit",
          "offset",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/profiling-rules",
        "method": "POST",
        "operationId": "createAProfilingRule",
        "summary": "Create a profiling rule",
        "description": "Creates profiling rule from the request body.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/tasks/{taskId}",
        "method": "GET",
        "operationId": "getTaskDetails",
        "summary": "Get task details",
        "description": "Fetches the details of backend task. Task is typically created by making call to some other API that takes longer time to execute.\n",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "taskId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/profiling-rules/count",
        "method": "GET",
        "operationId": "getCountOfProfilingRules",
        "summary": "Get count of profiling rules",
        "description": "This API fetches the count of profiling rules based on the filter values provided in the query parameters. The filter parameters are same as that of 'GET /profiling-rules' API, excluding the pagination and sort parameters.\n",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [
          "ruleType",
          "includeDeleted"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/endpoints/{epId}",
        "method": "DELETE",
        "operationId": "deleteAnEndpoint",
        "summary": "Delete an endpoint",
        "description": "Deletes the endpoint for the given unique identifier 'epId'.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "epId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/endpoints/{epId}",
        "method": "GET",
        "operationId": "getEndpointDetails",
        "summary": "Get endpoint details",
        "description": "Fetches details of the endpoint for the given unique identifier 'epId'.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "epId"
        ],
        "query_parameters": [
          "include"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/endpoints/{epId}",
        "method": "PUT",
        "operationId": "updateARegisteredEndpoint",
        "summary": "Update a registered endpoint",
        "description": "Update attributes of a registered endpoint.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "epId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/endpoints/{epId}/anc-policy",
        "method": "PUT",
        "operationId": "applyANCPolicy",
        "summary": "Apply ANC Policy",
        "description": "Applies given ANC policy to the endpoint.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "epId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/endpoints/{epId}/anc-policy",
        "method": "DELETE",
        "operationId": "revokeANCPolicy",
        "summary": "Revoke ANC policy",
        "description": "Revokes given ANC policy from the endpoint.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [
          "epId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/endpoints",
        "method": "POST",
        "operationId": "registerAnEndpoint",
        "summary": "Register an endpoint",
        "description": "Register a new endpoint in the system.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/endpoints",
        "method": "GET",
        "operationId": "queryTheEndpoints",
        "summary": "Query the endpoints",
        "description": "Query the endpoints, optionally using various filter and pagination criteria. 'GET /endpoints/count' API can be used to find out the total number of endpoints matching the filter criteria.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [
          "profilingStatus",
          "macAddress",
          "macAddresses",
          "ip",
          "deviceType",
          "hardwareManufacturer",
          "hardwareModel",
          "operatingSystem",
          "registered",
          "randomMac",
          "trustScore",
          "authMethod",
          "postureStatus",
          "aiSpoofingTrustLevel",
          "changedProfileTrustLevel",
          "natTrustLevel",
          "concurrentMacTrustLevel",
          "ipBlocklistDetected",
          "unauthPortDetected",
          "weakCredDetected",
          "ancPolicy",
          "limit",
          "offset",
          "sortBy",
          "order",
          "include"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/profiling-rules/bulk",
        "method": "POST",
        "operationId": "importProfilingRulesInBulk",
        "summary": "Import profiling rules in bulk",
        "description": "This API imports the given list of profiling rules. For each record,\n1) If 'ruleType' for a record is not 'Custom Rule', then it is rejected.\n2) If 'ruleId' is provided in the input record,\n  2a) Record with same 'ruleId' exists in the system, then it is replaced with new data.\n  2b) Record with same 'ruleId' does not exist, then it is inserted in the database.\n3) If 'ruleId' is not provided in the input record, then new 'ruleId' is generated by the system, and record is inserted.\n",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/cmdb/endpoints",
        "method": "POST",
        "operationId": "processCMDBEndpoints",
        "summary": "Process CMDB endpoints",
        "description": "Processes incoming CMDB endpoints data and imports the same in AI Endpoint Analytics.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/dictionaries",
        "method": "GET",
        "operationId": "getAIEndpointAnalyticsAttributeDictionaries",
        "summary": "Get AI Endpoint Analytics attribute dictionaries",
        "description": "Fetches the list of attribute dictionaries.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [
          "includeAttributes"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/endpoint-analytics/anc-policies",
        "method": "GET",
        "operationId": "getANCPolicies",
        "summary": "Get ANC policies",
        "description": "Fetches the list of ANC policies available in ISE.",
        "tags": [
          "AI Endpoint Analytics"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Application Policy": [
      {
        "path": "/dna/intent/api/v1/applicationVisibility/networkDevices/enableAppTelemetry",
        "method": "POST",
        "operationId": "enableApplicationTelemetryFeatureOnMultipleNetworkDevices",
        "summary": "Enable application telemetry feature on multiple network devices",
        "description": "This API can be used to enable application telemetry feature on multiple network devices.\nRequest payload should include the list of network devices where application telemetry\nhas to be enabled. For wireless controllers, it also needs the WLAN modes / SSID details\nto be included for enablement.\n\nPlease note that this operation can be performed even if the feature is already enabled\non the network device. It would push the updated configurations to the network device.\n\nThis operation pushes configuration to the network devices, and is only permitted if\nthe provisioning settings do not mandate a config preview for application telemetry\nenablement. In cases where such settings are active, attempting to use this endpoint\nwill result in `422 Unprocessable Content` error.\n",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/app-policy-queuing-profile/{id}",
        "method": "DELETE",
        "operationId": "deleteApplicationPolicyQueuingProfile",
        "summary": "Delete Application Policy Queuing Profile",
        "description": "Delete existing custom application policy queuing profile by id",
        "tags": [
          "Application Policy"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/application-policy-application-set",
        "method": "GET",
        "operationId": "getApplicationSet/s",
        "summary": "Get Application Set/s",
        "description": "Get application set/s by offset/limit or by name",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "attributes",
          "name",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/application-policy-application-set",
        "method": "POST",
        "operationId": "createApplicationSet/s",
        "summary": "Create Application Set/s",
        "description": "Create new custom application set/s",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/app-policy-queuing-profile",
        "method": "GET",
        "operationId": "getApplicationPolicyQueuingProfile",
        "summary": "Get Application Policy Queuing Profile",
        "description": "Get all or by name, existing application policy queuing profiles",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/app-policy-queuing-profile",
        "method": "POST",
        "operationId": "createApplicationPolicyQueuingProfile",
        "summary": "Create Application Policy Queuing Profile",
        "description": "Create new custom application queuing profile",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/app-policy-queuing-profile",
        "method": "PUT",
        "operationId": "updateApplicationPolicyQueuingProfile",
        "summary": "Update Application Policy Queuing Profile",
        "description": "Update existing custom application queuing profile",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/app-policy-default",
        "method": "GET",
        "operationId": "getApplicationPolicyDefault",
        "summary": "Get Application Policy Default",
        "description": "Get default application policy",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/qosPolicySetting",
        "method": "GET",
        "operationId": "retrievesTheApplicationQoSPolicySetting",
        "summary": "Retrieves the application QoS policy setting",
        "description": "API to retrieve the application QoS policy setting.",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/qosPolicySetting",
        "method": "PUT",
        "operationId": "updatesTheApplicationQoSPolicySetting",
        "summary": "Updates the application QoS policy setting",
        "description": "API to update the application QoS policy setting.",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/qos-device-interface-info",
        "method": "POST",
        "operationId": "createQosDeviceInterfaceInfo",
        "summary": "Create Qos Device Interface Info",
        "description": "Create qos device interface infos associate with network device id to allow the user to mark specific interfaces as WAN, to associate WAN interfaces with specific SP Profile and to be able to define a shaper on WAN interfaces",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/qos-device-interface-info",
        "method": "GET",
        "operationId": "getQosDeviceInterfaceInfo",
        "summary": "Get Qos Device Interface Info",
        "description": "Get all or by network device id, existing qos device interface infos",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/qos-device-interface-info",
        "method": "PUT",
        "operationId": "updateQosDeviceInterfaceInfo",
        "summary": "Update Qos Device Interface Info",
        "description": "Update existing qos device interface infos associate with network device id",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/app-policy",
        "method": "GET",
        "operationId": "getApplicationPolicy",
        "summary": "Get Application Policy",
        "description": "Get all existing application policies",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "policyScope"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/qos-device-interface-info/{id}",
        "method": "DELETE",
        "operationId": "deleteQosDeviceInterfaceInfo",
        "summary": "Delete Qos Device Interface Info",
        "description": "Delete all qos device interface infos associate with network device id",
        "tags": [
          "Application Policy"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applicationVisibility/networkDevices/count",
        "method": "GET",
        "operationId": "retrieveTheCountOfNetworkDevicesForTheGivenApplicationVisibilityStatusFilters",
        "summary": "Retrieve the count of network devices for the given application visibility status filters",
        "description": "This API retrieves the count of network devices for the given application visibility status filters.\n",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "ids",
          "managementAddress",
          "hostname",
          "siteId",
          "appTelemetryDeploymentStatus",
          "appTelemetryReadinessStatus",
          "cbarDeploymentStatus",
          "cbarReadinessStatus",
          "protocolPackStatus",
          "protocolPackUpdateStatus",
          "applicationRegistrySyncStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applicationVisibility/networkDevices/enableCbar",
        "method": "POST",
        "operationId": "enableCBARFeatureOnMultipleNetworkDevices",
        "summary": "Enable CBAR feature on multiple network devices",
        "description": "This API can be used to enable CBAR feature on multiple network devices. Request payload\nshould include the list of network devices where CBAR has to be enabled. It can\noptionally include list of interfaces (wired) or WLAN modes (wireless) to be\nexcluded from CBAR enablement.\n\nPlease note that this operation can be performed even if the feature is already enabled\non the network device. It would push the updated configurations to the network device.\n\nThis operation is only permitted if the provisioning settings do not mandate a configuration\npreview for CBAR enablement. In cases where such settings are active, attempting to use this\nendpoint will result in `422 Unprocessable Content` error.\n",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/applications",
        "method": "PUT",
        "operationId": "editApplication/s",
        "summary": "Edit Application/s",
        "description": "Edit the attributes of an existing application",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/applications",
        "method": "GET",
        "operationId": "getApplication/s",
        "summary": "Get Application/s",
        "description": "Get application/s by offset/limit or by name",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "attributes",
          "name",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/applications",
        "method": "POST",
        "operationId": "createApplication/s",
        "summary": "Create Application/s",
        "description": "Create new custom application/s",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/qos-device-interface-info-count",
        "method": "GET",
        "operationId": "getQosDeviceInterfaceInfoCount",
        "summary": "Get Qos Device Interface Info Count",
        "description": "Get the number of all existing qos device interface infos group by network device id",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/application-policy-application-set-count",
        "method": "GET",
        "operationId": "getApplicationSetCount",
        "summary": "Get Application Set Count",
        "description": "Get the number of all existing application sets",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "scalableGroupType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/applications/{id}",
        "method": "DELETE",
        "operationId": "deleteApplication",
        "summary": "Delete Application",
        "description": "Delete existing custom application by id",
        "tags": [
          "Application Policy"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applicationVisibility/networkDevices/disableCbar",
        "method": "POST",
        "operationId": "disableCBARFeatureOnMultipleNetworkDevices",
        "summary": "Disable CBAR feature on multiple network devices",
        "description": "This API can be used to disable CBAR feature on multiple network devices.\nRequest payload should include the list of network devices where it has to be disabled.\n\nThis operation pushes configuration to the network devices, and is only permitted if\nthe provisioning settings do not mandate a config preview for CBAR disablement. In\ncases where such settings are active, attempting to use this endpoint will result in\n`422 Unprocessable Content` error.\n",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/application-policy-application-set/{id}",
        "method": "DELETE",
        "operationId": "deleteApplicationSet",
        "summary": "Delete Application Set",
        "description": "Delete existing custom application set by id",
        "tags": [
          "Application Policy"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/app-policy-intent",
        "method": "POST",
        "operationId": "applicationPolicyIntent",
        "summary": "Application Policy Intent",
        "description": "Create/Update/Delete application policy",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/applications-count",
        "method": "GET",
        "operationId": "getApplicationCount",
        "summary": "Get Application Count",
        "description": "Get the number of all existing applications",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "scalableGroupType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applicationVisibility/networkDevices",
        "method": "GET",
        "operationId": "retrieveTheListOfNetworkDevicesWithTheirApplicationVisibilityStatus",
        "summary": "Retrieve the list of network devices with their application visibility status",
        "description": "This API retrieves the list of network devices with their application visibility status. The list can be filtered using the query parameters. Multiple filters can be applied.\n",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "ids",
          "managementAddress",
          "hostname",
          "siteId",
          "appTelemetryDeploymentStatus",
          "appTelemetryReadinessStatus",
          "cbarDeploymentStatus",
          "cbarReadinessStatus",
          "protocolPackStatus",
          "protocolPackUpdateStatus",
          "applicationRegistrySyncStatus",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/app-policy-queuing-profile-count",
        "method": "GET",
        "operationId": "getApplicationPolicyQueuingProfileCount",
        "summary": "Get Application Policy Queuing Profile Count",
        "description": "Get the number of all existing  application policy queuing profile",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applicationVisibility/networkDevices/disableAppTelemetry",
        "method": "POST",
        "operationId": "disableApplicationTelemetryFeatureOnMultipleNetworkDevices",
        "summary": "Disable application telemetry feature on multiple network devices",
        "description": "This API can be used to disable application telemetry feature on multiple network devices.\nRequest payload should include the list of network devices where it has to be disabled.\n\nThis operation pushes configuration to the network devices, and is only permitted if\nthe provisioning settings do not mandate a config preview for application telemetry\ndisablement. In cases where such settings are active, attempting to use this endpoint\nwill result in `422 Unprocessable Content` error.\n",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applications-count",
        "method": "GET",
        "operationId": "getApplicationsCount",
        "summary": "Get Applications Count",
        "description": "Get the number of all existing applications",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applications",
        "method": "PUT",
        "operationId": "editApplication",
        "summary": "Edit Application",
        "description": "Edit the attributes of an existing application",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applications",
        "method": "DELETE",
        "operationId": "deleteApplication-2",
        "summary": "Delete Application",
        "description": "Delete existing application by its id",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "id"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applications",
        "method": "GET",
        "operationId": "getApplications",
        "summary": "Get Applications",
        "description": "Get applications by offset/limit or by name",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/applications",
        "method": "POST",
        "operationId": "createApplication",
        "summary": "Create Application",
        "description": "Create new Custom application",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/application-policy-application-set",
        "method": "POST",
        "operationId": "createApplicationSet",
        "summary": "Create Application Set",
        "description": "Create new custom application-set/s",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/application-policy-application-set",
        "method": "DELETE",
        "operationId": "deleteApplicationSet-2",
        "summary": "Delete Application Set",
        "description": "Delete existing application-set by it's id",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "id"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/application-policy-application-set",
        "method": "GET",
        "operationId": "getApplicationSets",
        "summary": "Get Application Sets",
        "description": "Get appllication-sets by offset/limit or by name",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/application-policy-application-set-count",
        "method": "GET",
        "operationId": "getApplicationSetsCount",
        "summary": "Get Application Sets Count",
        "description": "Get the number of existing application-sets ",
        "tags": [
          "Application Policy"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Know Your Network": {
    "Devices": [
      {
        "path": "/dna/intent/api/v1/security/rogue/additional/details/count",
        "method": "POST",
        "operationId": "rogueAdditionalDetailCount",
        "summary": "Rogue Additional Detail Count",
        "description": "This API returns the count for the Rogue Additional Details.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/rogue/allowed-list",
        "method": "GET",
        "operationId": "getAllowedMacAddress",
        "summary": "Get Allowed Mac Address",
        "description": "Intent API to fetch all the allowed mac addresses in the system.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/rogue/allowed-list",
        "method": "POST",
        "operationId": "addAllowedMacAddress",
        "summary": "Add Allowed Mac Address",
        "description": "Intent API to add the threat mac address to allowed list.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/rogue/wireless-containment/status/{macAddress}",
        "method": "GET",
        "operationId": "wirelessRogueAPContainmentStatus",
        "summary": "Wireless Rogue AP Containment Status",
        "description": "Intent API to check the wireless rogue access point containment status. The response includes all the details like containment status, contained by WLC, containment status of each BSSID etc. This API also includes the information of strongest detecting WLC for this rogue access point.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "macAddress"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/rogue/additional/details",
        "method": "POST",
        "operationId": "rogueAdditionalDetails",
        "summary": "Rogue Additional Details",
        "description": "This API provides additional information of the rogue threats with details at BSSID level. The additional information includes Switch Port details in case of Rogue on Wire, first time when the rogue is seen in the network etc.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/details/count",
        "method": "POST",
        "operationId": "threatDetailCount",
        "summary": "Threat Detail Count",
        "description": "The details count for the Rogue and aWIPS threats",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/rogue/allowed-list/{macAddress}",
        "method": "DELETE",
        "operationId": "removeAllowedMacAddress",
        "summary": "Remove Allowed Mac Address",
        "description": "Intent API to remove the threat mac address from allowed list.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "macAddress"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/summary",
        "method": "POST",
        "operationId": "threatSummary",
        "summary": "Threat Summary",
        "description": "The Threat Summary for the Rogues and aWIPS",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices/trendAnalytics",
        "method": "POST",
        "operationId": "getTrendAnalyticsDataOfAAAServicesForGivenSetOfComplexFilters.",
        "summary": "Get trend analytics data of AAA Services for given set of complex filters.",
        "description": "Gets the trend analytics data related to AAA Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/rogue/wireless-containment/start",
        "method": "POST",
        "operationId": "startWirelessRogueAPContainment",
        "summary": "Start Wireless Rogue AP Containment",
        "description": "Intent API to start the wireless rogue access point containment. This API will initiate the containment operation on the strongest detecting WLC for the given Rogue AP. This is a resource intensive operation which has legal implications since the rogue access point on whom it is triggered, might be a valid neighbor access point.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/rogue/allowed-list/count",
        "method": "GET",
        "operationId": "getAllowedMacAddressCount",
        "summary": "Get Allowed Mac Address Count",
        "description": "Intent API to fetch the count of allowed mac addresses in the system.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/level",
        "method": "GET",
        "operationId": "getThreatLevels",
        "summary": "Get Threat Levels",
        "description": "Intent API to fetch all threat levels defined.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceId}/chassis",
        "method": "GET",
        "operationId": "getChassisDetailsForDevice",
        "summary": "Get Chassis Details for Device",
        "description": "Returns chassis details for given device ID",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/type",
        "method": "GET",
        "operationId": "getThreatTypes",
        "summary": "Get Threat Types",
        "description": "Intent API to fetch all threat types defined.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/rogue/wireless-containment/stop",
        "method": "POST",
        "operationId": "stopWirelessRogueAPContainment",
        "summary": "Stop Wireless Rogue AP Containment",
        "description": "Intent API to stop the wireless rogue access point containment. This API will stop the containment through single WLC. The response includes the details like WLC and BSSID on which the stop containment has been initiated.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security/threats/details",
        "method": "POST",
        "operationId": "threatDetails",
        "summary": "Threat Details",
        "description": "The details for the Rogue and aWIPS threats",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices/{id}/trendAnalytics",
        "method": "POST",
        "operationId": "theTrendAnalyticsDataForTheNetworkDeviceInTheSpecifiedTimeRange",
        "summary": "The Trend analytics data for the network Device in the specified time range",
        "description": "The Trend analytics data for the network Device in the specified time range. The data is grouped based on the trend time Interval, other input parameters like attribute and aggregate attributes. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices/trendAnalytics",
        "method": "POST",
        "operationId": "getsTheTrendAnalyticsData.",
        "summary": "Gets the Trend analytics data.",
        "description": "Gets the Trend analytics Network device data for the given time range. The data will be grouped based on the given trend time Interval. The required property for this API is `trendInterval`. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/user-defined-field",
        "method": "GET",
        "operationId": "getAllUser-Defined-Fields",
        "summary": "Get All User-Defined-Fields",
        "description": "Gets existing global User Defined Fields. If no input is given, it fetches ALL the Global UDFs. Filter/search is supported by UDF Id(s) or UDF name(s) or both.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/user-defined-field",
        "method": "POST",
        "operationId": "createUser-Defined-Field",
        "summary": "Create User-Defined-Field",
        "description": "Creates a new global User Defined Field, which can be assigned to devices",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/module/{id}",
        "method": "GET",
        "operationId": "getModuleInfoById",
        "summary": "Get Module Info by Id",
        "description": "Returns Module info by 'module id'",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices",
        "method": "GET",
        "operationId": "retrievesTheListOfDNSServicesForGivenParameters.",
        "summary": "Retrieves the list of DNS Services for given parameters.",
        "description": "Retrieves the list of DNS Services and offers basic filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "serverIp",
          "deviceId",
          "deviceSiteHierarchyId",
          "deviceSiteId",
          "ssid"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/query",
        "method": "POST",
        "operationId": "queryNetworkDevicesWithFilters",
        "summary": "Query network devices with filters",
        "description": "Returns the list of network devices, determined by the filters.\nIt is possible to filter the network devices based on various parameters, such as device type, device role, software version, etc. The API returns a paginated response based on 'limit' and 'offset' parameters, allowing up to 500 records per page. 'limit' specifies the number of records, and 'offset' sets the starting point using 1-based indexing. Use '/dna/intent/api/v1/networkDevices/query/count' API to get the total record count. For data sets over 500 records, make multiple calls, adjusting 'limit' and 'offset' to retrieve all records incrementally.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceEvents/{id}",
        "method": "GET",
        "operationId": "getDetailsOfASingleAssuranceEvent",
        "summary": "Get details of a single assurance event",
        "description": "API to fetch the details of an assurance event using event `id`. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceEvents-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "attribute",
          "view"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{id}",
        "method": "DELETE",
        "operationId": "deleteDeviceById",
        "summary": "Delete Device by Id",
        "description": "This API allows any network device that is not currently provisioned to be removed from the inventory. Important: Devices currently provisioned cannot be deleted. To delete a provisioned device, the device must be first deprovisioned.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "cleanConfig"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{id}",
        "method": "GET",
        "operationId": "getDeviceByID",
        "summary": "Get Device by ID",
        "description": "Returns the network device details for the given device ID",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/healthScoreDefinitions/bulkUpdate",
        "method": "POST",
        "operationId": "updateHealthScoreDefinitions.",
        "summary": "Update health score definitions.",
        "description": "Update health thresholds, include status of overall health status for each metric.\n\nAnd also to synchronize with global profile issue thresholds of the definition for given metric. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml\n",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceMaintenanceSchedules",
        "method": "POST",
        "operationId": "createMaintenanceScheduleForNetworkDevices",
        "summary": "Create maintenance schedule for network devices",
        "description": "API to create maintenance schedule for network devices. The state of network device can be queried using API `GET /dna/intent/api/v1/networkDevices`. The `managementState` attribute of the network device will be updated to `UNDER_MAINTENANCE` when the maintenance window starts.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceMaintenanceSchedules",
        "method": "GET",
        "operationId": "retrieveScheduledMaintenanceWindowsForNetworkDevices",
        "summary": "Retrieve scheduled maintenance windows for network devices",
        "description": "This API retrieves a list of scheduled maintenance windows for network devices based on filter parameters. Each maintenance window is composed of a start schedule and end schedule, both of which have unique identifiers(`startId` and `endId`). These identifiers can be used to fetch the status of the start schedule and end schedule using the `GET /dna/intent/api/v1/activities/{id}` API. Completed maintenance schedules are automatically removed from the system after two weeks. The API returns a paginated response based on 'limit' and 'offset' parameters, allowing up to 500 records per page. 'limit' specifies the number of records, and 'offset' sets the starting point using 1-based indexing. Use '/dna/intent/api/v1/networkDeviceMaintenanceSchedules/count' API to get the total record count. For data sets over 500 records, make multiple calls, adjusting 'limit' and 'offset' to retrieve all records incrementally.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceIds",
          "status",
          "limit",
          "offset",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices/summaryAnalytics",
        "method": "POST",
        "operationId": "getSummaryAnalyticsDataOfAAAServicesForGivenSetOfComplexFilters.",
        "summary": "Get summary analytics data of AAA Services for given set of complex filters.",
        "description": "Gets the summary analytics data related to AAA Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceUuid}/equipment",
        "method": "GET",
        "operationId": "getTheDetailsOfPhysicalComponentsOfTheGivenDevice.",
        "summary": "Get the Details of Physical Components of the Given Device.",
        "description": "Return all types of equipment details like PowerSupply, Fan, Chassis, Backplane, Module, PROCESSOR, Other and SFP for the Given device.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceUuid"
        ],
        "query_parameters": [
          "type"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceEvents",
        "method": "GET",
        "operationId": "queryAssuranceEvents",
        "summary": "Query assurance events",
        "description": "Returns the list of events discovered by Catalyst Center, determined by the complex filters. Please refer to the 'API Support Documentation' section to understand which fields are supported. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceEvents-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceFamily",
          "startTime",
          "endTime",
          "messageType",
          "severity",
          "siteId",
          "siteHierarchyId",
          "networkDeviceName",
          "networkDeviceId",
          "apMac",
          "clientMac",
          "attribute",
          "view",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices/summaryAnalytics",
        "method": "POST",
        "operationId": "getsTheSummaryAnalyticsDataRelatedToNetworkDevices.",
        "summary": "Gets the summary analytics data related to network devices.",
        "description": "Gets the summary analytics data related to network devices based on the provided input data. This endpoint helps to obtain the consolidated insights into the performance and status of the monitored network devices. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device",
        "method": "GET",
        "operationId": "getDeviceList",
        "summary": "Get Device list",
        "description": "Returns list of network devices based on filter criteria such as management IP address, mac address, hostname, etc. You can use the .* in any value to conduct a wildcard search.\nFor example, to find all hostnames beginning with myhost in the IP address range 192.25.18.n, issue the following request:\nGET /dna/intent/api/v1/network-device?hostname=myhost.*&managementIpAddress=192.25.18..*\n\nIf id parameter is provided with comma separated ids, it will return the list of network-devices for the given ids and ignores the other request parameters. The API returns a paginated response based on 'limit' and 'offset' parameters, allowing up to 500 records per page. 'limit' specifies the number of records, and 'offset' sets the starting point using 1-based indexing. Use '/dna/intent/api/v1/network-device/count' to get the total record count. For data sets over 500 records, make multiple calls, adjusting 'limit' and 'offset' to retrieve all records incrementally.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "hostname",
          "managementIpAddress",
          "macAddress",
          "locationName",
          "serialNumber",
          "location",
          "family",
          "type",
          "series",
          "collectionStatus",
          "collectionInterval",
          "notSyncedForMinutes",
          "errorCode",
          "errorDescription",
          "softwareVersion",
          "softwareType",
          "platformId",
          "role",
          "reachabilityStatus",
          "upTime",
          "associatedWlcIp",
          "license.name",
          "license.type",
          "license.status",
          "module+name",
          "module+equpimenttype",
          "module+servicestate",
          "module+vendorequipmenttype",
          "module+partnumber",
          "module+operationstatecode",
          "id",
          "deviceSupportLevel",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device",
        "method": "POST",
        "operationId": "addDevice",
        "summary": "Add Device",
        "description": "Adds the device with given credential",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device",
        "method": "PUT",
        "operationId": "updateDeviceDetails",
        "summary": "Update Device Details",
        "description": "Update the credentials, management IP address of a given device (or a set of devices) in Catalyst Center and trigger an inventory sync.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceUuid}/interface/poe-detail",
        "method": "GET",
        "operationId": "returnsPOEInterfaceDetailsForTheDevice.",
        "summary": "Returns POE interface details for the device.",
        "description": "Returns POE interface details for the device, where deviceuuid is mandatory & accepts comma seperated interface names which is optional and returns information for that particular interfaces where(operStatus = operationalStatus)",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceUuid"
        ],
        "query_parameters": [
          "interfaceNameList"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/resyncIntervalSettings",
        "method": "PUT",
        "operationId": "updateGlobalResyncInterval",
        "summary": "Update global resync interval",
        "description": "Updates the resync interval (in minutes) globally for devices which do not have custom resync interval. To override this setting for all network devices refer to [/networkDevices/resyncIntervalSettings/override]",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/{interfaceUuid}/operation",
        "method": "POST",
        "operationId": "clearMac-AddressTable",
        "summary": "Clear Mac-Address table",
        "description": "Clear mac-address on an individual port. In request body, operation needs to be specified as 'ClearMacAddress'. In the future more possible operations will be added to this API",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "interfaceUuid"
        ],
        "query_parameters": [
          "deploymentMode"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices/query/count",
        "method": "POST",
        "operationId": "getsTheTotalNumberNetworkDevicesBasedOnTheProvidedComplexFiltersAndAggregationFunctions.",
        "summary": "Gets the total number Network Devices based on the provided complex filters and aggregation functions.",
        "description": "Gets the total number Network Devices based on the provided complex filters and aggregation functions. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml\n",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{id}/vlan",
        "method": "GET",
        "operationId": "getDeviceInterfaceVLANs",
        "summary": "Get Device Interface VLANs",
        "description": "Returns Device Interface VLANs. If parameter value is null or empty, it won't return any value in response.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "interfaceType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/{id}",
        "method": "GET",
        "operationId": "getDetailsOfASingleNetworkDevice",
        "summary": "Get details of a single network device",
        "description": "API to fetch the details of network device using the `id`. Use the `/dna/intent/api/v1/networkDevices/query` API for advanced filtering. The API supports views to fetch only the required fields. Refer features for more details.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "views"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceEvents/count",
        "method": "GET",
        "operationId": "countTheNumberOfEvents",
        "summary": "Count the number of events",
        "description": "API to fetch the count of assurance events that match the filter criteria. Please refer to the 'API Support Documentation' section to understand which fields are supported. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceEvents-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceFamily",
          "startTime",
          "endTime",
          "messageType",
          "severity",
          "siteId",
          "siteHierarchyId",
          "networkDeviceName",
          "networkDeviceId",
          "apMac",
          "clientMac"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices/{id}",
        "method": "GET",
        "operationId": "retrievesTheDetailsOfASpecificDHCPServiceMatchingTheIdOfTheService.",
        "summary": "Retrieves the details of a specific DHCP Service matching the id of the Service.",
        "description": "Retrieves the details of the DHCP Service matching the given id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/floors/{floorId}/planned-access-points",
        "method": "PUT",
        "operationId": "updatePlannedAccessPointForFloor",
        "summary": "Update Planned Access Point for Floor",
        "description": "Allows updating a planned access point on an existing floor map including its planned radio and antenna details.  Use the Get variant of this API to fetch the existing planned access points for the floor.  The payload to update a planned access point is in the same format, albeit a single object instead of a list, of that API.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/floors/{floorId}/planned-access-points",
        "method": "GET",
        "operationId": "getPlannedAccessPointsForFloor",
        "summary": "Get Planned Access Points for Floor",
        "description": "Provides a list of Planned Access Points for the Floor it is requested for",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [
          "limit",
          "offset",
          "radios"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/floors/{floorId}/planned-access-points",
        "method": "POST",
        "operationId": "createPlannedAccessPointForFloor",
        "summary": "Create Planned Access Point for Floor",
        "description": "Allows creation of a new planned access point on an existing floor map including its planned radio and antenna details.  Use the Get variant of this API to fetch any existing planned access points for the floor.  The payload to create a planned access point is in the same format, albeit a single object instead of a list, of that API.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices/{id}",
        "method": "GET",
        "operationId": "retrievesTheDetailsOfASpecificAAAServiceMatchingTheIdOfTheService.",
        "summary": "Retrieves the details of a specific AAA Service matching the id of the Service.",
        "description": "Retrieves the details of the AAA Service matching the given id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-health",
        "method": "GET",
        "operationId": "devices",
        "summary": "Devices",
        "description": "Intent API for accessing DNA Assurance Device object for generating reports, creating dashboards or creating additional value added services.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceRole",
          "siteId",
          "health",
          "startTime",
          "endTime",
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/collection-schedule/global",
        "method": "GET",
        "operationId": "getPollingIntervalForAllDevices",
        "summary": "Get Polling Interval for all devices",
        "description": "Returns polling interval of all devices",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/sync",
        "method": "PUT",
        "operationId": "syncDevices",
        "summary": "Sync Devices",
        "description": "Synchronizes the devices. If forceSync param is false (default) then the sync would run in normal priority thread. If forceSync param is true then the sync would run in high priority thread if available, else the sync will fail. Result can be seen in the child task of each device",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "forceSync"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/network-device/{deviceId}/{startIndex}/{recordsToReturn}",
        "method": "GET",
        "operationId": "getDeviceInterfacesBySpecifiedRange",
        "summary": "Get Device Interfaces by specified range",
        "description": "Returns the list of interfaces for the device for the specified range",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId",
          "startIndex",
          "recordsToReturn"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/interfaces/count",
        "method": "GET",
        "operationId": "getsTheTotalNetworkDeviceInterfaceCountsInTheSpecifiedTimeRange.WhenThereIsNoStartAndEndTimeSpecifiedReturnsTheLatestInterfacesTotalCount.",
        "summary": "Gets the total Network device interface counts in the specified time range. When there is no start and end time specified returns the latest interfaces total count.",
        "description": "Gets the total Network device interface counts. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-interfaces-2.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "siteHierarchy",
          "siteHierarchyId",
          "siteId",
          "networkDeviceId",
          "networkDeviceIpAddress",
          "networkDeviceMacAddress",
          "interfaceId",
          "interfaceName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/resyncIntervalSettings/override",
        "method": "POST",
        "operationId": "overrideResyncInterval",
        "summary": "Override resync interval",
        "description": "Overrides the global resync interval on all network devices. This essentially removes device specific intervals if set.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices/count",
        "method": "GET",
        "operationId": "retrievesTheTotalNumberOfDNSServicesForGivenParameters.",
        "summary": "Retrieves the total number of DNS Services for given parameters.",
        "description": "Retrieves the total number of DNS Services for given parameters. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "serverIp",
          "deviceId",
          "deviceSiteHierarchyId",
          "deviceSiteId",
          "ssid"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/count",
        "method": "GET",
        "operationId": "getDeviceInterfaceCountForMultipleDevices",
        "summary": "Get Device Interface Count for Multiple Devices",
        "description": "Returns the count of interfaces for all devices",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/interfaces/query",
        "method": "POST",
        "operationId": "getsTheListOfInterfacesAcrossTheNetworkDevicesBasedOnTheProvidedComplexFiltersAndAggregationFunctions",
        "summary": "Gets the list of interfaces across the Network Devices based on the provided complex filters and aggregation functions",
        "description": "Gets the list of interfaces across the Network Devices based on the provided complex filters and aggregation functions\n\nThe elements are grouped and sorted by deviceUuid first, and are then sorted by the given sort field, or by the default value: name.\n\nThe supported sorting options are: name, adminStatus, description, duplexConfig, duplexOper, interfaceIfIndex,interfaceType, macAddress,mediaType, operStatus, portChannelId, portMode, portType,speed, vlanId,pdPowerAdminMaxInWatt,pdPowerBudgetInWatt,pdPowerConsumedInWatt,pdPowerRemainingInWatt,pdMaxPowerDrawn. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-interfaces-2.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceUuid}/line-card",
        "method": "GET",
        "operationId": "getLinecardDetails",
        "summary": "Get Linecard details",
        "description": "Get line card detail for a given deviceuuid.  Response will contain serial no, part no, switch no and slot no.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/{id}/resyncIntervalSettings",
        "method": "GET",
        "operationId": "getResyncIntervalForTheNetworkDevice",
        "summary": "Get resync interval for the network device",
        "description": "Fetch the reysnc interval for the given network device id.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/{id}/resyncIntervalSettings",
        "method": "PUT",
        "operationId": "updateResyncIntervalForTheNetworkDevice",
        "summary": "Update resync interval for the network device",
        "description": "Update the resync interval (in minutes) for the given network device id.\n\nTo disable periodic resync, set interval as `0`.\n\nTo use global settings, set interval as `null`.\n",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/network-device/{deviceId}/interface-name",
        "method": "GET",
        "operationId": "getInterfaceDetailsByDeviceIdAndInterfaceName",
        "summary": "Get Interface details by device Id and interface name",
        "description": "Returns interface by specified device Id and interface name",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices/query/count",
        "method": "POST",
        "operationId": "retrievesTheTotalNumberOfDHCPServicesForGivenSetOfComplexFilters.",
        "summary": "Retrieves the total number of DHCP Services for given set of complex filters.",
        "description": "Retrieves the total number of DHCP Services and offers complex filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/deleteWithCleanup",
        "method": "POST",
        "operationId": "deleteNetworkDeviceWithConfigurationCleanup",
        "summary": "Delete network device with configuration cleanup",
        "description": "This API endpoint facilitates the deletion of a network device after performing configuration cleanup on the device.\n",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/networkDevices/count",
        "method": "GET",
        "operationId": "countDevicesEnergy",
        "summary": "Count devices energy",
        "description": "Retrieves the total count of network devices that provide energy data, filtered according to the specified query parameters. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "id",
          "siteId",
          "siteHierarchy",
          "siteHierarchyId",
          "deviceCategory",
          "deviceSubCategory"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/healthScoreDefinitions/count",
        "method": "GET",
        "operationId": "getTheCountOfHealthScoreDefinitionsBasedOnProvidedFilters.",
        "summary": "Get the count of health score definitions based on provided filters.",
        "description": "Get the count of health score definitions based on provided filters. Supported filters are id, name and overall health include status. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml\n",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceType",
          "id",
          "includeForOverallHealth"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices/topNAnalytics",
        "method": "POST",
        "operationId": "getsTheTop-NAnalyticsDataRelatedToNetworkDevices.",
        "summary": "Gets the Top-N analytics data related to network devices.",
        "description": "Gets the Top N analytics data related to network devices based on the provided input data. This endpoint is valuable to obtain the top-performing or most impacted network devices. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml\n\nThe required properties for this API are topN and groupBy",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/insight/{siteId}/device-link",
        "method": "GET",
        "operationId": "inventoryInsightDeviceLinkMismatchAPI",
        "summary": "Inventory Insight Device Link Mismatch API",
        "description": "Find all devices with link mismatch (speed /  vlan)",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [
          "offset",
          "limit",
          "category",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/count",
        "method": "GET",
        "operationId": "getDeviceCount",
        "summary": "Get Device Count",
        "description": "Returns the count of network devices based on the filter criteria by management IP address, mac address, hostname and location name",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "hostname",
          "managementIpAddress",
          "macAddress",
          "locationName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices/query",
        "method": "POST",
        "operationId": "retrievesTheListOfAAAServicesForGivenSetOfComplexFilters.",
        "summary": "Retrieves the list of AAA Services for given set of complex filters.",
        "description": "Retrieves the list of AAA Services and offers complex filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceMaintenanceSchedules/{id}",
        "method": "GET",
        "operationId": "retrievesTheMaintenanceScheduleInformation.",
        "summary": "Retrieves the maintenance schedule information.",
        "description": "API to retrieve the maintenance schedule information for the given id.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceMaintenanceSchedules/{id}",
        "method": "PUT",
        "operationId": "updatesTheMaintenanceScheduleInformation",
        "summary": "Updates the maintenance schedule information",
        "description": "API to update the maintenance schedule for the network devices. \nThe `maintenanceSchedule` can be updated only if the `status` value is `UPCOMING` or `IN_PROGRESS`. User can exit `IN_PROGRESS` maintenance window by setting the `endTime` to -1. This will update the endTime to the current time and exit the maintenance window immediately. When exiting the maintenance window, only the endTime will be updated while other parameters remain read-only.\n",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceMaintenanceSchedules/{id}",
        "method": "DELETE",
        "operationId": "deleteMaintenanceSchedule.",
        "summary": "Delete maintenance schedule.",
        "description": "API to delete maintenance schedule by id. Deletion is allowed if the maintenance window is in the `UPCOMING`, `COMPLETED`, or `FAILED` state. Deletion of maintenance schedule is not allowed if the maintenance window is currently `IN_PROGRESS`. To delete the maintenance schedule while it is `IN_PROGRESS`, first exit the current maintenance window using `PUT /dna/intent/api/v1/networkDeviceMaintenanceSchedules/{id}` API, and then proceed to delete the maintenance schedule.\n",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/network-device/{deviceId}/count",
        "method": "GET",
        "operationId": "getDeviceInterfaceCount",
        "summary": "Get Device Interface count",
        "description": "Returns the interface count for the given device",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices/{id}/trendAnalytics",
        "method": "POST",
        "operationId": "getTrendAnalyticsDataForAGivenDNSServiceMatchingTheIdOfTheService.",
        "summary": "Get trend analytics data for a given DNS Service matching the id of the Service.",
        "description": "Gets the trend analytics data related to a particular DNS Service matching the id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices/{id}",
        "method": "GET",
        "operationId": "getTheDeviceDataForTheGivenDeviceId(Uuid)",
        "summary": "Get the device data for the given device id (Uuid)",
        "description": "Returns the device data for the given device Uuid in the specified start and end time range. When there is no start and end time specified returns the latest available data for the given Id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceMaintenanceSchedules/count",
        "method": "GET",
        "operationId": "retrieveTheTotalNumberOfScheduledMaintenanceWindows",
        "summary": "Retrieve the total number of scheduled maintenance windows",
        "description": "Retrieve the total count of all scheduled maintenance windows for network devices.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceIds",
          "status"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/ospf",
        "method": "GET",
        "operationId": "getOSPFInterfaces",
        "summary": "Get OSPF interfaces",
        "description": "Returns the interfaces that has OSPF enabled",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/networkDevices",
        "method": "GET",
        "operationId": "getDevicesEnergy",
        "summary": "Get devices energy",
        "description": "Retrieves a list of network devices with energy data based on the specified query parameters. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "cursor",
          "sortBy",
          "order",
          "id",
          "siteId",
          "siteHierarchy",
          "siteHierarchyId",
          "deviceCategory",
          "deviceSubCategory",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices/summaryAnalytics",
        "method": "POST",
        "operationId": "getSummaryAnalyticsDataOfDNSServicesForGivenSetOfComplexFilters.",
        "summary": "Get summary analytics data of DNS Services for given set of complex filters.",
        "description": "Gets the summary analytics data related to DNS Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices/trendAnalytics",
        "method": "POST",
        "operationId": "getTrendAnalyticsDataOfDHCPServicesForGivenSetOfComplexFilters.",
        "summary": "Get trend analytics data of DHCP Services for given set of complex filters.",
        "description": "Gets the trend analytics data related to DHCP Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/networkDevices/{deviceId}/interfaces/query",
        "method": "POST",
        "operationId": "getDeviceInterfaceStatsInfo",
        "summary": "Get Device Interface Stats Info",
        "description": "This API returns the Interface Stats for the given Device Id. Please refer to the Feature tab for the Request Body usage and the API filtering support.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/user-defined-field/{id}",
        "method": "DELETE",
        "operationId": "deleteUser-Defined-Field",
        "summary": "Delete User-Defined-Field",
        "description": "Deletes an existing Global User-Defined-Field using it's id.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/user-defined-field/{id}",
        "method": "PUT",
        "operationId": "updateUser-Defined-Field",
        "summary": "Update User-Defined-Field",
        "description": "Updates an existing global User Defined Field, using it's id.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceId}/stack",
        "method": "GET",
        "operationId": "getStackDetailsForDevice",
        "summary": "Get Stack Details for Device",
        "description": "Retrieves complete stack details for given device ID",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices/topNAnalytics",
        "method": "POST",
        "operationId": "getTopNAnalyticsDataOfAAAServicesForGivenSetOfComplexFilters.",
        "summary": "Get Top N analytics data of AAA Services for given set of complex filters.",
        "description": "Gets the Top N analytics data related to AAA Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/floors/{floorId}/planned-access-points/{plannedAccessPointUuid}",
        "method": "DELETE",
        "operationId": "deletePlannedAccessPointForFloor",
        "summary": "Delete Planned Access Point for Floor",
        "description": "Allow to delete a planned access point from an existing floor map including its planned radio and antenna details.  Use the Get variant of this API to fetch the existing planned access points for the floor.  The instanceUUID listed in each of the planned access point attributes acts as the path param input to this API to delete that specific instance.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "floorId",
          "plannedAccessPointUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/functional-capability/{id}",
        "method": "GET",
        "operationId": "getFunctionalCapabilityById",
        "summary": "Get Functional Capability by Id",
        "description": "Returns functional capability with given Id",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/networkDevices/query",
        "method": "POST",
        "operationId": "queryDevicesEnergy.",
        "summary": "Query devices energy.",
        "description": "Retrieves a list of network devices along with their energy data for a specified time range, based on the filters provided in the request body. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/query/count",
        "method": "POST",
        "operationId": "countTheNumberOfNetworkDevicesWithFilters",
        "summary": "Count the number of network devices with filters",
        "description": "API to fetch the count of network devices for the given filter query.\n\n\n",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/isis",
        "method": "GET",
        "operationId": "getISISInterfaces",
        "summary": "Get ISIS interfaces",
        "description": "Returns the interfaces that has ISIS enabled",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices/summaryAnalytics",
        "method": "POST",
        "operationId": "getSummaryAnalyticsDataOfDHCPServicesForGivenSetOfComplexFilters.",
        "summary": "Get summary analytics data of DHCP Services for given set of complex filters.",
        "description": "Gets the summary analytics data related to DHCP Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/config/count",
        "method": "GET",
        "operationId": "getDeviceConfigCount",
        "summary": "Get Device Config Count",
        "description": "Returns the count of device configs",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceUuid}/poe",
        "method": "GET",
        "operationId": "pOEDetails",
        "summary": "POE details ",
        "description": "Returns POE details for device.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{id}/brief",
        "method": "GET",
        "operationId": "getDeviceSummary",
        "summary": "Get Device Summary",
        "description": "Returns brief summary of device info for the given device Id",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/module/count",
        "method": "GET",
        "operationId": "getModuleCount",
        "summary": "Get Module count",
        "description": "Returns Module Count",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceId",
          "nameList",
          "vendorEquipmentTypeList",
          "partNumberList",
          "operationalStateCodeList"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{networkDeviceId}/config",
        "method": "GET",
        "operationId": "getDeviceConfigById",
        "summary": "Get Device Config by Id",
        "description": "Returns the device config by specified device ID",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{id}/collection-schedule",
        "method": "GET",
        "operationId": "getPollingIntervalById",
        "summary": "Get Polling Interval by Id",
        "description": "Returns polling interval by device id",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/{interfaceUuid}",
        "method": "PUT",
        "operationId": "updateInterfaceDetails",
        "summary": "Update Interface details",
        "description": "Add/Update Interface description, VLAN membership, Voice VLAN and change Interface admin status ('UP'/'DOWN') from Request body.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "interfaceUuid"
        ],
        "query_parameters": [
          "deploymentMode"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices/count",
        "method": "GET",
        "operationId": "retrievesTheTotalNumberOfDHCPServicesForGivenParameters.",
        "summary": "Retrieves the total number of DHCP Services for given parameters.",
        "description": "Retrieves the total number of DHCP Services for given parameters. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "serverIp",
          "deviceId",
          "deviceName",
          "deviceSiteHierarchy",
          "deviceSiteHierarchyId",
          "deviceSiteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices/{id}",
        "method": "GET",
        "operationId": "retrievesTheDetailsOfASpecificDNSServiceMatchingTheIdOfTheService.",
        "summary": "Retrieves the details of a specific DNS Service matching the id of the Service.",
        "description": "Retrieves the details of the DNS Service matching the given id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{id}/meraki-organization",
        "method": "GET",
        "operationId": "getOrganizationListForMeraki",
        "summary": "Get Organization list for Meraki",
        "description": "Returns list of organizations for meraki dashboard",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/{interfaceUuid}/legit-operation",
        "method": "GET",
        "operationId": "legitOperationsForInterface",
        "summary": "Legit operations for interface",
        "description": "Get list of all properties & operations valid for an interface.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "interfaceUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceUuid}/supervisor-card",
        "method": "GET",
        "operationId": "getSupervisorCardDetail",
        "summary": "Get Supervisor card detail",
        "description": "Get supervisor card detail for a given deviceuuid. Response will contain serial no, part no, switch no and slot no.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices/query/count",
        "method": "POST",
        "operationId": "retrievesTheTotalNumberOfDNSServicesForGivenSetOfComplexFilters.",
        "summary": "Retrieves the total number of DNS Services for given set of complex filters.",
        "description": "Retrieves the total number of DNS Services and offers complex filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceId}/user-defined-field",
        "method": "DELETE",
        "operationId": "removeUser-Defined-FieldFromDevice",
        "summary": "Remove User-Defined-Field from device",
        "description": "Remove a User-Defined-Field from device. Name of UDF has to be passed as the query parameter. Please note that Global UDF will not be deleted by this operation.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceId}/user-defined-field",
        "method": "PUT",
        "operationId": "addUser-Defined-FieldToDevice",
        "summary": "Add User-Defined-Field to device",
        "description": "Assigns an existing Global User-Defined-Field to a device. If the UDF is already assigned to the specific device, then it updates the device UDF value accordingly. Please note that the assigning UDF 'name' must be an existing global UDF. Otherwise error shall be shown.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices",
        "method": "GET",
        "operationId": "retrieveNetworkDevices",
        "summary": "Retrieve network devices",
        "description": "API to fetch the list of network devices using basic filters. Use the `/dna/intent/api/v1/networkDevices/query` API for advanced filtering. Refer features for more details. The API returns a paginated response based on 'limit' and 'offset' parameters, allowing up to 500 records per page. 'limit' specifies the number of records, and 'offset' sets the starting point using 1-based indexing. Use /dna/intent/api/v1/networkDevices/count API to get the total record count. For data sets over 500 records, make multiple calls, adjusting 'limit' and 'offset' to retrieve all records incrementally.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "managementAddress",
          "serialNumber",
          "family",
          "stackDevice",
          "role",
          "status",
          "reachabilityStatus",
          "managementState",
          "views",
          "limit",
          "offset",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices/query",
        "method": "POST",
        "operationId": "retrievesTheListOfDHCPServicesForGivenSetOfComplexFilters.",
        "summary": "Retrieves the list of DHCP Services for given set of complex filters.",
        "description": "Retrieves the list of DHCP Services and offers complex filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/interfaces/query/count",
        "method": "POST",
        "operationId": "theTotalInterfacesCountAcrossTheNetworkDevices.",
        "summary": "The Total interfaces count across the Network devices.",
        "description": "Gets the total number of interfaces across the Network devices based on the provided complex filters and aggregation functions. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-interfaces-2.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices/topNAnalytics",
        "method": "POST",
        "operationId": "getTopNAnalyticsDataOfDNSServicesForGivenSetOfComplexFilters.",
        "summary": "Get Top N analytics data of DNS Services for given set of complex filters.",
        "description": "Gets the Top N analytics data related to DNS Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/deleteWithoutCleanup",
        "method": "POST",
        "operationId": "deleteANetworkDeviceWithoutConfigurationCleanup",
        "summary": "Delete a network device without configuration cleanup",
        "description": "This API endpoint facilitates the deletion of a network device without performing configuration cleanup on the device. To delete a device via API, you must have permission to provision the network device. Although the API operation does not change the device configuration, removing a device without cleaning up its configuration could lead to a network behaviour that is not consistent with the configurations that are known to the system.\n",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/healthScoreDefinitions/{id}",
        "method": "GET",
        "operationId": "getHealthScoreDefinitionForTheGivenId.",
        "summary": "Get health score definition for the given id.",
        "description": "Get health score defintion for the given id. Definition includes all properties from HealthScoreDefinition schema by default. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml\n",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/healthScoreDefinitions/{id}",
        "method": "PUT",
        "operationId": "updateHealthScoreDefinitionForTheGivenId.",
        "summary": "Update health score definition for the given id.",
        "description": "Update health threshold, include status of overall health status.\n\nAnd also to synchronize with global profile issue thresholds of the definition for given id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml\n",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/healthScoreDefinitions",
        "method": "GET",
        "operationId": "getAllHealthScoreDefinitionsForGivenFilters.",
        "summary": "Get all health score definitions for given filters.",
        "description": "Get all health score defintions.\n\nSupported filters are id, name and overall health include status. A health score definition can be different across device type. So, deviceType in the query param is important and default is all device types.\n\nBy default all supported attributes are listed in response. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml\n",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceType",
          "id",
          "includeForOverallHealth",
          "attribute",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/interfaces",
        "method": "GET",
        "operationId": "getsInterfacesAlongWithStatisticsAndPoeDataFromAllNetworkDevices.",
        "summary": "Gets interfaces along with statistics and poe data from all network devices.",
        "description": "        Retrieves the list of the interfaces from all network devices based on\n        the provided query parameters. The latest interfaces data in the\n        specified start and end time range will be returned. When there is no\n        start and end time specified returns the latest available data.\n        \n        \n        The elements are grouped and sorted by deviceUuid first, and are then\n        sorted by the given sort field, or by the default value: name.\n        \n\n        \n        The supported sorting options are: \n\n        name, adminStatus, description, duplexConfig, duplexOper,\n        interfaceIfIndex,interfaceType, macAddress,mediaType, operStatus,\n        portChannelId, portMode, portType,speed, vlanId\n        \n        \n\n        \n        This API can paginate up to 500,000 records, please narrow matching results with additional filters beyond that value.\nThe elements are grouped and sorted by deviceUuid first, and are then sorted by the given sort field, or by the default value: name.\n\n The supported sorting options are: name, adminStatus, description, duplexConfig, duplexOper,interfaceIfIndex,interfaceType, macAddress,mediaType, operStatus,portChannelId, portMode, portType,speed, vlanId,pdPowerAdminMaxInWatt,pdPowerBudgetInWatt,pdPowerConsumedInWatt,pdPowerRemainingInWatt,pdMaxPowerDrawn. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-interfaces-2.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "siteHierarchy",
          "siteHierarchyId",
          "siteId",
          "view",
          "attribute",
          "networkDeviceId",
          "networkDeviceIpAddress",
          "networkDeviceMacAddress",
          "interfaceId",
          "interfaceName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceUuid}/interface/{interfaceUuid}/neighbor",
        "method": "GET",
        "operationId": "getConnectedDeviceDetail",
        "summary": "Get connected device detail",
        "description": "Get connected device detail for given deviceUuid and interfaceUuid",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceUuid",
          "interfaceUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{deviceid}/management-address",
        "method": "PUT",
        "operationId": "updateDeviceManagementAddress",
        "summary": "Update Device Management Address",
        "description": "This is a simple PUT API to edit the management IP Address of the device.",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/config",
        "method": "GET",
        "operationId": "getDeviceConfigForAllDevices",
        "summary": "Get Device Config for all devices",
        "description": "Returns the config for all devices. This API has been deprecated and will not be available in a Cisco Catalyst Center release after Nov 1st 2024 23:59:59 GMT.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/brief",
        "method": "PUT",
        "operationId": "updateDeviceRole",
        "summary": "Update Device role",
        "description": "Updates the role of the device as access, core, distribution, border router",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/buildings/{buildingId}/planned-access-points",
        "method": "GET",
        "operationId": "getPlannedAccessPointsForBuilding",
        "summary": "Get Planned Access Points for Building",
        "description": "Provides a list of Planned Access Points for the Building it is requested for",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "buildingId"
        ],
        "query_parameters": [
          "limit",
          "offset",
          "radios"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/interfaces/{id}",
        "method": "GET",
        "operationId": "getTheInterfaceDataForTheGivenInterfaceId(instanceUuid)AlongWithTheStatisticsAndPoeData",
        "summary": "Get the interface data for the given interface id (instance Uuid) along with the statistics and poe data",
        "description": "Returns the interface data for the given interface instance Uuid along with the statistics data. The latest interface data in the specified start and end time range will be returned. When there is no start and end time specified returns the latest available data for the given interface Id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-interfaces-2.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/{id}",
        "method": "GET",
        "operationId": "getInterfaceById",
        "summary": "Get Interface by Id",
        "description": "Returns the interface for the given interface ID",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices",
        "method": "GET",
        "operationId": "getsTheNetworkDeviceDetailsBasedOnTheProvidedQueryParameters.",
        "summary": "Gets the Network Device details based on the provided query parameters.",
        "description": "Gets the Network Device details based on the provided query parameters.  When there is no start and end time specified returns the latest device details. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "siteHierarchy",
          "siteHierarchyId",
          "siteId",
          "id",
          "managementIpAddress",
          "macAddress",
          "family",
          "type",
          "role",
          "serialNumber",
          "maintenanceMode",
          "softwareVersion",
          "healthScore",
          "view",
          "attribute",
          "fabricSiteId",
          "l2Vn",
          "l3Vn",
          "transitNetworkId",
          "fabricRole"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices",
        "method": "GET",
        "operationId": "retrievesTheListOfAAAServicesForGivenParameters.",
        "summary": "Retrieves the list of AAA Services for given parameters.",
        "description": "Retrieves the list of AAA Services and offers basic filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "serverIp",
          "deviceId",
          "deviceName",
          "siteHierarchy",
          "deviceSiteHierarchyId",
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/network-device/{deviceId}",
        "method": "GET",
        "operationId": "getInterfaceInfoById",
        "summary": "Get Interface info by Id",
        "description": "Returns list of interfaces by specified device",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceEvents/query",
        "method": "POST",
        "operationId": "queryAssuranceEventsWithFilters",
        "summary": "Query assurance events with filters",
        "description": "Returns the list of events discovered by Catalyst Center, determined by the complex filters. Please refer to the 'API Support Documentation' section to understand which fields are supported. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceEvents-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/count",
        "method": "GET",
        "operationId": "countTheNumberOfNetworkDevices",
        "summary": "Count the number of network devices",
        "description": "API to fetch the count of network devices using basic filters. Use the `/dna/intent/api/v1/networkDevices/query/count` API if you need advanced filtering.\n",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "managementAddress",
          "serialNumber",
          "family",
          "stackDevice",
          "role",
          "status",
          "reachabilityStatus",
          "managementState"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface/ip-address/{ipAddress}",
        "method": "GET",
        "operationId": "getInterfaceByIP",
        "summary": "Get Interface by IP",
        "description": "Returns list of interfaces for specified device management IP address",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "ipAddress"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices",
        "method": "GET",
        "operationId": "retrievesTheListOfDHCPServicesForGivenParameters.",
        "summary": "Retrieves the list of DHCP Services for given parameters.",
        "description": "Retrieves the list of DHCP Services and offers basic filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "serverIp",
          "deviceId",
          "deviceName",
          "deviceSiteHierarchy",
          "deviceSiteHierarchyId",
          "deviceSiteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices/topNAnalytics",
        "method": "POST",
        "operationId": "getTopNAnalyticsDataOfDHCPServicesForGivenSetOfComplexFilters.",
        "summary": "Get Top N analytics data of DHCP Services for given set of complex filters.",
        "description": "Gets the Top N analytics data related to DHCP Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/functional-capability",
        "method": "GET",
        "operationId": "getFunctionalCapabilityForDevices",
        "summary": "Get Functional Capability for devices",
        "description": "Returns the functional-capability for given devices",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceId",
          "functionName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/networkDevices/query/count",
        "method": "POST",
        "operationId": "countDevicesEnergyFromQuery",
        "summary": "Count devices energy from query",
        "description": "Retrieves the total count of network devices based on the specified complex filters. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/serial-number/{serialNumber}",
        "method": "GET",
        "operationId": "getDeviceBySerialNumber",
        "summary": "Get Device by Serial number",
        "description": "Returns the network device with given serial number",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "serialNumber"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices/count",
        "method": "GET",
        "operationId": "retrievesTheTotalNumberOfAAAServicesForGivenParameters.",
        "summary": "Retrieves the total number of AAA Services for given parameters.",
        "description": "Retrieves the total number of AAA Services for given parameters. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "serverIp",
          "deviceId",
          "deviceName",
          "deviceSiteHierarchy",
          "deviceSiteHierarchyId",
          "deviceSiteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dhcpServices/{id}/trendAnalytics",
        "method": "POST",
        "operationId": "getTrendAnalyticsDataForAGivenDHCPServiceMatchingTheIdOfTheService.",
        "summary": "Get trend analytics data for a given DHCP Service matching the id of the Service.",
        "description": "Gets the trend analytics data related to a particular DHCP Service matching the id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DHCPServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices/query",
        "method": "POST",
        "operationId": "retrievesTheListOfDNSServicesForGivenSetOfComplexFilters.",
        "summary": "Retrieves the list of DNS Services for given set of complex filters.",
        "description": "Retrieves the list of DNS Services and offers complex filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/tenantinfo/macaddress",
        "method": "GET",
        "operationId": "getDevicesRegisteredForWSANotification",
        "summary": "Get Devices registered for WSA Notification",
        "description": "It fetches devices which are registered to receive WSA notifications. The device serial number and/or MAC address are required to be provided as query parameters.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "serialNumber",
          "macaddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/networkDevices/{id}",
        "method": "GET",
        "operationId": "getDeviceEnergyByID",
        "summary": "Get device energy by ID",
        "description": "Retrieves network device energy data for a specified time range based on the device ID. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-detail",
        "method": "GET",
        "operationId": "getDeviceDetail",
        "summary": "Get Device Detail",
        "description": "Returns detailed Network Device information retrieved by Mac Address, Device Name or UUID for any given point of time. ",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "timestamp",
          "identifier",
          "searchBy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/file",
        "method": "POST",
        "operationId": "exportDeviceList",
        "summary": "Export Device list",
        "description": "Exports the selected network device to a file",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/ip-address/{ipAddress}",
        "method": "GET",
        "operationId": "getNetworkDeviceByIP",
        "summary": "Get Network Device by IP",
        "description": "Returns the network device by specified IP address",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "ipAddress"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceEvents/query/count",
        "method": "POST",
        "operationId": "countTheNumberOfEventsWithFilters",
        "summary": "Count the number of events with filters",
        "description": "API to fetch the count of assurance events for the given complex query. Please refer to the 'API Support Documentation' section to understand which fields are supported. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceEvents-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceEvents/{id}/childEvents",
        "method": "GET",
        "operationId": "getListOfChildEventsForTheGivenWirelessClientEvent",
        "summary": "Get list of child events for the given wireless client event",
        "description": "Wireless client event could have child events and this API can be used to fetch the same using parent event `id` as the input. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceEvents-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/module",
        "method": "GET",
        "operationId": "getModules",
        "summary": "Get Modules",
        "description": "Returns modules by specified device id. The API returns a paginated response based on 'limit' and 'offset' parameters, allowing up to 500 records per page. 'limit' specifies the number of records, and 'offset' sets the starting point using 1-based indexing. Use /dna/intent/api/v1/network-device/module/count API to get the total record count. For data sets over 500 records, make multiple calls, adjusting 'limit' and 'offset' to retrieve all records incrementally.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceId",
          "limit",
          "offset",
          "nameList",
          "vendorEquipmentTypeList",
          "partNumberList",
          "operationalStateCodeList"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/interfaces/{id}/trendAnalytics",
        "method": "POST",
        "operationId": "theTrendAnalytcisDataForTheInterfacesInTheSpecifiedTimeRange",
        "summary": "The Trend analytcis data for the interfaces in the specified time range",
        "description": "The Trend analytcis data for the interface, identified by its instanceUuid, in the specified time range. The data is grouped based on the trend time Interval, other input parameters like attributes and aggregate attributes. The default time interval range is 3 hours when start and endTime is not provided.\n\nThe field trendIntervalInMinutes is requiered and either the attributes or the aggregateAttributes fields is also required. \n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-interfaces-2.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{id}/wireless-info",
        "method": "GET",
        "operationId": "getWirelessLanControllerDetailsById",
        "summary": "Get wireless lan controller details by Id",
        "description": "Returns the wireless lan controller info with given device ID",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices/query",
        "method": "POST",
        "operationId": "getsTheListOfNetworkDevicesBasedOnTheProvidedComplexFiltersAndAggregationFunctions.",
        "summary": "Gets the list of Network Devices based on the provided complex filters and aggregation functions.",
        "description": "Gets the list of Network Devices based on the provided complex filters and aggregation functions. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/dnsServices/trendAnalytics",
        "method": "POST",
        "operationId": "getTrendAnalyticsDataOfDNSServicesForGivenSetOfComplexFilters.",
        "summary": "Get trend analytics data of DNS Services for given set of complex filters.",
        "description": "Gets the trend analytics data related to DNS Services based on given filters and group by field. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-DNSServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkDevices/count",
        "method": "GET",
        "operationId": "getsTheTotalNetworkDeviceCountsBasedOnTheProvidedQueryParameters.",
        "summary": "Gets the total Network device counts based on the provided query parameters.",
        "description": "Gets the total Network device counts. When there is no start and end time specified returns the latest interfaces total count. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceNetworkDevices-2.0.1-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "id",
          "siteHierarchy",
          "siteHierarchyId",
          "siteId",
          "managementIpAddress",
          "macAddress",
          "family",
          "type",
          "role",
          "serialNumber",
          "maintenanceMode",
          "softwareVersion",
          "healthScore",
          "fabricSiteId",
          "l2Vn",
          "l3Vn",
          "transitNetworkId",
          "fabricRole"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices/{id}/trendAnalytics",
        "method": "POST",
        "operationId": "getTrendAnalyticsDataForAGivenAAAServiceMatchingTheIdOfTheService.",
        "summary": "Get trend analytics data for a given AAA Service matching the id of the Service.",
        "description": "Gets the trend analytics data related to a particular AAA Service matching the id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/{startIndex}/{recordsToReturn}",
        "method": "GET",
        "operationId": "getNetworkDeviceByPaginationRange",
        "summary": "Get Network Device by pagination range",
        "description": "Returns the list of network devices for the given pagination range. The maximum number of records that can be retrieved is 500",
        "tags": [
          "Devices"
        ],
        "parameters": [
          "startIndex",
          "recordsToReturn"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/aaaServices/query/count",
        "method": "POST",
        "operationId": "retrievesTheTotalNumberOfAAAServicesForGivenSetOfComplexFilters.",
        "summary": "Retrieves the total number of AAA Services for given set of complex filters.",
        "description": "Retrieves the total number of AAA Services and offers complex filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AAAServices-1.0.0-resolved.yaml",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/interface",
        "method": "GET",
        "operationId": "getAllInterfaces",
        "summary": "Get all interfaces",
        "description": "Returns all available interfaces. This endpoint can return a maximum of 500 interfaces. The API returns a paginated response based on 'limit' and 'offset' parameters, allowing up to 500 records per page. 'limit' specifies the number of records, and 'offset' sets the starting point using 1-based indexing. Use '/dna/intent/api/v1/interface/count' to get the total record count. For data sets over 500 records, make multiple calls, adjusting 'limit' and 'offset' to retrieve all records incrementally.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit",
          "lastInputTime",
          "lastOutputTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/autocomplete",
        "method": "GET",
        "operationId": "getDeviceValuesThatMatchFullyOrPartiallyAnAttribute",
        "summary": "Get Device Values that match fully or partially an Attribute",
        "description": "Returns the list of values of the first given required parameter. You can use the .* in any value to conduct a wildcard search.\nFor example, to get all the devices with the management IP address starting with 10.10. , issue the following request: GET /dna/intent/api/v1/network-device/autocomplete?managementIpAddress=10.10..*\nIt will return the device management IP addresses that match fully or partially the provided attribute. {[10.10.1.1, 10.10.20.2, \u2026]}. The API returns a paginated response based on 'limit' and 'offset' parameters, allowing up to 500 records per page. 'limit' specifies the number of records, and 'offset' sets the starting point using 1-based indexing. For data sets over 500 records, make multiple calls, adjusting 'limit' and 'offset' to retrieve all records incrementally.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [
          "vrfName",
          "managementIpAddress",
          "hostname",
          "macAddress",
          "family",
          "collectionStatus",
          "collectionInterval",
          "softwareVersion",
          "softwareType",
          "reachabilityStatus",
          "reachabilityFailureReason",
          "errorCode",
          "platformId",
          "series",
          "type",
          "serialNumber",
          "upTime",
          "role",
          "roleSource",
          "associatedWlcIp",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-enrichment-details",
        "method": "GET",
        "operationId": "getDeviceEnrichmentDetails",
        "summary": "Get Device Enrichment Details",
        "description": "Enriches a given network device context (device id or device Mac Address or device management IP address) with details about the device and neighbor topology",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Compliance": [
      {
        "path": "/dna/intent/api/v1/securityAdvisories/trials",
        "method": "POST",
        "operationId": "createsATrialForSecurityAdvisoriesDetectionOnNetworkDevices",
        "summary": "Creates a trial for security advisories detection on network devices",
        "description": "Creates a trial for security advisories detection on network devices. The consent to connect agreement must have been accepted in the UI for this to succeed. Please refer to the user guide at <https://www.cisco.com/c/en/us/support/cloud-systems-management/dna-center/products-user-guide-list.html> for more details on consent to connect.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/trials",
        "method": "GET",
        "operationId": "getTrialDetailsForSecurityAdvisoriesDetectionOnNetworkDevices",
        "summary": "Get trial details for security advisories detection on network devices",
        "description": "Get trial details for security advisories detection on network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/networkDevices/{networkDeviceId}/bugs",
        "method": "GET",
        "operationId": "getBugsAffectingTheNetworkDevice",
        "summary": "Get bugs affecting the network device",
        "description": "Get bugs affecting the network device",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "id",
          "severity",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/trials",
        "method": "GET",
        "operationId": "getTrialDetailsForBugsDetectionOnNetworkDevices",
        "summary": "Get trial details for bugs detection on network devices",
        "description": "Get trial details for bugs detection on network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/trials",
        "method": "POST",
        "operationId": "createsATrialForBugsDetectionOnNetworkDevices",
        "summary": "Creates a trial for bugs detection on network devices",
        "description": "Creates a trial for bugs detection on network devices. The consent to connect agreement must have been accepted in the UI for this to succeed. Please refer to the user guide at <https://www.cisco.com/c/en/us/support/cloud-systems-management/dna-center/products-user-guide-list.html> for more details on consent to connect.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/advisories/count",
        "method": "GET",
        "operationId": "getCountOfSecurityAdvisoriesAffectingTheNetworkDevices",
        "summary": "Get count of security advisories affecting the network devices",
        "description": "Get count of security advisories affecting the network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "deviceCount",
          "cvssBaseScore",
          "securityImpactRating"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/networkDevices/count",
        "method": "GET",
        "operationId": "getCountOfFieldNoticeNetworkDevices",
        "summary": "Get count of field notice network devices",
        "description": "Get count of field notice network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId",
          "scanStatus",
          "noticeCount"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/bugs/{id}/networkDevices/count",
        "method": "GET",
        "operationId": "getCountOfNetworkBugDevicesForTheBug",
        "summary": "Get count of network bug devices for the bug",
        "description": "Get count of network bug devices for the bug",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "networkDeviceId",
          "scanMode",
          "scanStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/advisories/{id}/networkDevices/{networkDeviceId}",
        "method": "GET",
        "operationId": "getSecurityAdvisoryNetworkDeviceForTheSecurityAdvisoryByNetworkDeviceId",
        "summary": "Get security advisory network device for the security advisory by network device id",
        "description": "Get security advisory network device for the security advisory by network device id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id",
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/networkDevices/{networkDeviceId}/advisories",
        "method": "GET",
        "operationId": "getSecurityAdvisoriesAffectingTheNetworkDevice",
        "summary": "Get security advisories affecting the network device",
        "description": "Get security advisories affecting the network device",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "id",
          "cvssBaseScore",
          "securityImpactRating",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/trials",
        "method": "POST",
        "operationId": "createsATrialForFieldNoticesDetectionOnNetworkDevices",
        "summary": "Creates a trial for field notices detection on network devices",
        "description": "Creates a trial for field notices detection on network devices. The consent to connect agreement must have been accepted in the UI for this to succeed. Please refer to the user guide at <https://www.cisco.com/c/en/us/support/cloud-systems-management/dna-center/products-user-guide-list.html> for more details on consent to connect.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/trials",
        "method": "GET",
        "operationId": "getTrialDetailsForFieldNoticesDetectionOnNetworkDevices",
        "summary": "Get trial details for field notices detection on network devices",
        "description": "Get trial details for field notices detection on network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/bugs",
        "method": "GET",
        "operationId": "getNetworkBugs",
        "summary": "Get network bugs",
        "description": "Get network bugs",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "deviceCount",
          "severity",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/compliance/detail/count",
        "method": "GET",
        "operationId": "getComplianceDetailCount",
        "summary": "Get Compliance Detail Count",
        "description": "Return  Compliance Count Detail",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "complianceType",
          "complianceStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/networkDevices/{networkDeviceId}",
        "method": "GET",
        "operationId": "getNetworkBugDeviceByDeviceId",
        "summary": "Get network bug device by device id",
        "description": "Get network bug device by device id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/bugs/count",
        "method": "GET",
        "operationId": "getCountOfNetworkBugs",
        "summary": "Get count of network bugs",
        "description": "Get count of network bugs",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "deviceCount",
          "severity"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/advisories/{id}",
        "method": "GET",
        "operationId": "getSecurityAdvisoryAffectingTheNetworkDevicesById",
        "summary": "Get security advisory affecting the network devices by Id",
        "description": "Get security advisory affecting the network devices by Id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/notices/{id}/networkDevices/count",
        "method": "GET",
        "operationId": "getCountOfFieldNoticeNetworkDevicesForTheNotice",
        "summary": "Get count of field notice network devices for the notice",
        "description": "Get count of field notice network devices for the notice",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "networkDeviceId",
          "scanStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/compliance/{deviceUuid}/detail",
        "method": "GET",
        "operationId": "complianceDetailsOfDevice",
        "summary": "Compliance Details of Device",
        "description": "Return compliance detailed report for a device.",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "deviceUuid"
        ],
        "query_parameters": [
          "category",
          "complianceType",
          "diffList",
          "status",
          "remediationSupported"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device-config/write-memory",
        "method": "POST",
        "operationId": "commitDeviceConfiguration",
        "summary": "Commit device configuration",
        "description": "This operation would commit device running configuration to startup by issuing \"write memory\" to device",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/networkDevices/{networkDeviceId}/notices/count",
        "method": "GET",
        "operationId": "getCountOfFieldNoticesAffectingTheNetworkDevice",
        "summary": "Get count of field notices affecting the network device",
        "description": "Get count of field notices affecting the network device",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "id",
          "type"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/triggerScan",
        "method": "POST",
        "operationId": "triggersABugsScanForTheSupportedNetworkDevices",
        "summary": "Triggers a bugs scan for the supported network devices",
        "description": "Triggers a bugs scan for the supported network devices. The supported devices are switches and routers. If a device is not supported, the NetworkBugsDevice scanStatus will be Failed with appropriate comments.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "failedDevicesOnly"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/resultsTrend/count",
        "method": "GET",
        "operationId": "getCountOfNetworkBugsResultsTrendOverTime",
        "summary": "Get count of network bugs results trend over time",
        "description": "Get count of network bugs results trend over time",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "scanTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/resultsTrend",
        "method": "GET",
        "operationId": "getNetworkBugsResultsTrendOverTime",
        "summary": "Get network bugs results trend over time",
        "description": "Get network bugs results trend over time. The default sort is by scan time descending.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "scanTime",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/resultsTrend",
        "method": "GET",
        "operationId": "getFieldNoticesResultsTrendOverTime",
        "summary": "Get field notices results trend over time",
        "description": "Get field notices results trend over time. The default sort is by scan time descending.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "scanTime",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/notices",
        "method": "GET",
        "operationId": "getFieldNotices",
        "summary": "Get field notices",
        "description": "Get field notices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "deviceCount",
          "type",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/compliance/networkDevices/{id}/issues/remediation/provision",
        "method": "POST",
        "operationId": "complianceRemediation",
        "summary": "Compliance Remediation",
        "description": "Remediates configuration compliance issues. Compliance issues related to 'Routing', 'HA Remediation', 'Software Image', 'Securities Advisories', 'SD-Access Unsupported Configuration', 'Workflow', etc. will not be addressed by this API.\n\nWarning: Fixing compliance mismatches could result in a possible network flap.",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device-config/task",
        "method": "GET",
        "operationId": "getConfigTaskDetails",
        "summary": "Get config task details",
        "description": "Returns a config task result details by specified id",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "parentTaskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/bugs/{id}/networkDevices/{networkDeviceId}",
        "method": "GET",
        "operationId": "getNetworkBugDeviceForTheBugByNetworkDeviceId",
        "summary": "Get network bug device for the bug by network device id",
        "description": "Get network bug device for the bug by network device id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id",
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/networkDevices/{networkDeviceId}/bugs/count",
        "method": "GET",
        "operationId": "getCountOfBugsAffectingTheNetworkDevice",
        "summary": "Get count of bugs affecting the network device",
        "description": "Get count of bugs affecting the network device",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "id",
          "severity"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/compliance/{deviceUuid}",
        "method": "GET",
        "operationId": "deviceComplianceStatus",
        "summary": "Device Compliance Status",
        "description": "Return compliance status of a device.",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "deviceUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/notices/{id}",
        "method": "GET",
        "operationId": "getFieldNoticeById",
        "summary": "Get field notice by Id",
        "description": "Get field notice by Id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/networkDevices/{networkDeviceId}/notices/{id}",
        "method": "GET",
        "operationId": "getFieldNoticeAffectingTheNetworkDeviceByDeviceIdAndNoticeId",
        "summary": "Get field notice affecting the network device by device Id and notice id",
        "description": "Get field notice affecting the network device by device Id and notice id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/networkDevices/count",
        "method": "GET",
        "operationId": "getCountOfSecurityAdvisoryNetworkDevices",
        "summary": "Get count of security advisory network devices",
        "description": "Get count of security advisory network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId",
          "scanMode",
          "scanStatus",
          "advisoryCount"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/triggerScan",
        "method": "POST",
        "operationId": "triggersASecurityAdvisoriesScanForTheSupportedNetworkDevices",
        "summary": "Triggers a security advisories scan for the supported network devices",
        "description": "Triggers a security advisories scan for the supported network devices. The supported devices are switches, routers and wireless controllers with IOS and IOS-XE. If a device is not supported, the SecurityAdvisoryNetworkDevice scanStatus will be Failed with appropriate comments.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "failedDevicesOnly"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/advisories/{id}/networkDevices/count",
        "method": "GET",
        "operationId": "getCountOfSecurityAdvisoryNetworkDevicesForTheSecurityAdvisory",
        "summary": "Get count of security advisory network devices for the security advisory",
        "description": "Get count of security advisory network devices for the security advisory",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "networkDeviceId",
          "scanMode",
          "scanStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/bugs/{id}/networkDevices",
        "method": "GET",
        "operationId": "getNetworkBugDevicesForTheBug",
        "summary": "Get network bug devices for the bug",
        "description": "Get network bug devices for the bug",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "networkDeviceId",
          "scanMode",
          "scanStatus",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/networkDevices/{networkDeviceId}",
        "method": "GET",
        "operationId": "getSecurityAdvisoryNetworkDeviceByNetworkDeviceId",
        "summary": "Get security advisory network device by network device id",
        "description": "Get security advisory network device by network device id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/resultsTrend/count",
        "method": "GET",
        "operationId": "getCountOfSecurityAdvisoriesResultsTrendOverTime",
        "summary": "Get count of security advisories results trend over time",
        "description": "Get count of security advisories results trend over time.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "scanTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/resultsTrend",
        "method": "GET",
        "operationId": "getSecurityAdvisoriesResultsTrendOverTime",
        "summary": "Get security advisories results trend over time",
        "description": "Get security advisories results trend over time. The default sort is by scan time descending.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "scanTime",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/networkDevices",
        "method": "GET",
        "operationId": "getSecurityAdvisoryNetworkDevices",
        "summary": "Get security advisory network devices",
        "description": "Get security advisory network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId",
          "scanMode",
          "scanStatus",
          "advisoryCount",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/notices/count",
        "method": "GET",
        "operationId": "getCountOfFieldNotices",
        "summary": "Get count of field notices",
        "description": "Get count of field notices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "deviceCount",
          "type"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/networkDevices/{networkDeviceId}/advisories/{id}",
        "method": "GET",
        "operationId": "getSecurityAdvisoryAffectingTheNetworkDeviceByDeviceIdAndAdvisoryId",
        "summary": "Get security advisory affecting the network device by device Id and advisory id",
        "description": "Get security advisory affecting the network device by device Id and advisory id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/triggerScan",
        "method": "POST",
        "operationId": "triggersAFieldNoticesScanForTheSupportedNetworkDevices",
        "summary": "Triggers a field notices scan for the supported network devices",
        "description": "Triggers a field notices scan for the supported network devices. The supported devices are switches, routers and wireless controllers. If a device is not supported, the FieldNoticeNetworkDevice scanStatus will be Failed with appropriate comments. The consent to connect agreement must have been accepted in the UI for this to succeed. Please refer to the user guide at <https://www.cisco.com/c/en/us/support/cloud-systems-management/dna-center/products-user-guide-list.html> for more details on consent to connect.",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "failedDevicesOnly"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/notices/{id}/networkDevices",
        "method": "GET",
        "operationId": "getFieldNoticeNetworkDevicesForTheNotice",
        "summary": "Get field notice network devices for the notice",
        "description": "Get field notice network devices for the notice",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "networkDeviceId",
          "scanStatus",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/compliance",
        "method": "GET",
        "operationId": "getComplianceStatus",
        "summary": "Get Compliance Status ",
        "description": "Return compliance status of device(s).",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "complianceStatus",
          "deviceUuid",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/resultsTrend/count",
        "method": "GET",
        "operationId": "getCountOfFieldNoticesResultsTrendOverTime",
        "summary": "Get count of field notices results trend over time",
        "description": "Get count of field notices results trend over time",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "scanTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/notices/{id}/networkDevices/{networkDeviceId}",
        "method": "GET",
        "operationId": "getFieldNoticeNetworkDeviceForTheNoticeByNetworkDeviceId",
        "summary": "Get field notice network device for the notice by network device id",
        "description": "Get field notice network device for the notice by network device id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id",
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/networkDevices/count",
        "method": "GET",
        "operationId": "getCountOfNetworkBugDevices",
        "summary": "Get count of network bug devices",
        "description": "Get count of network bug devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId",
          "scanMode",
          "scanStatus",
          "bugCount"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/compliance/count",
        "method": "GET",
        "operationId": "getComplianceStatusCount",
        "summary": "Get Compliance Status Count",
        "description": "Return Compliance Status Count",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "complianceStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/networkDevices",
        "method": "GET",
        "operationId": "getFieldNoticeNetworkDevices",
        "summary": "Get field notice network devices",
        "description": "Get field notice network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId",
          "scanStatus",
          "noticeCount",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/networkDevices/{networkDeviceId}/advisories/count",
        "method": "GET",
        "operationId": "getCountOfSecurityAdvisoriesAffectingTheNetworkDevice",
        "summary": "Get count of security advisories affecting the network device",
        "description": "Get count of security advisories affecting the network device",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "id",
          "cvssBaseScore",
          "securityImpactRating"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/compliance/detail",
        "method": "GET",
        "operationId": "getComplianceDetail",
        "summary": "Get Compliance Detail ",
        "description": "Return Compliance Detail ",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "complianceType",
          "complianceStatus",
          "deviceUuid",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/networkDevices/{networkDeviceId}/bugs/{id}",
        "method": "GET",
        "operationId": "getBugAffectingTheNetworkDeviceByDeviceIdAndBugId",
        "summary": "Get bug affecting the network device by device Id and bug id",
        "description": "Get bug affecting the network device by device Id and bug id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/networkDevices/{networkDeviceId}",
        "method": "GET",
        "operationId": "getFieldNoticeNetworkDeviceByDeviceId",
        "summary": "Get field notice network device by device id",
        "description": "Get field notice network device by device id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/advisories",
        "method": "GET",
        "operationId": "getSecurityAdvisoriesAffectingTheNetworkDevices",
        "summary": "Get security advisories affecting the network devices",
        "description": "Get security advisories affecting the network devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "deviceCount",
          "cvssBaseScore",
          "securityImpactRating",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/fieldNotices/results/networkDevices/{networkDeviceId}/notices",
        "method": "GET",
        "operationId": "getFieldNoticesAffectingTheNetworkDevice",
        "summary": "Get field notices affecting the network device",
        "description": "Get field notices affecting the network device",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "id",
          "type",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityAdvisories/results/advisories/{id}/networkDevices",
        "method": "GET",
        "operationId": "getSecurityAdvisoryNetworkDevicesForTheSecurityAdvisory",
        "summary": "Get security advisory network devices for the security advisory",
        "description": "Get security advisory network devices for the security advisory",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "networkDeviceId",
          "scanMode",
          "scanStatus",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/compliance/",
        "method": "POST",
        "operationId": "runCompliance",
        "summary": "Run Compliance",
        "description": "Run compliance check for device(s).",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/bugs/{id}",
        "method": "GET",
        "operationId": "getNetworkBugById",
        "summary": "Get network bug by Id",
        "description": "Get network bug by Id",
        "tags": [
          "Compliance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkBugs/results/networkDevices",
        "method": "GET",
        "operationId": "getNetworkBugDevices",
        "summary": "Get network bug devices",
        "description": "Get network bug devices",
        "tags": [
          "Compliance"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId",
          "scanMode",
          "scanStatus",
          "bugCount",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      }
    ],
    "Issues": [
      {
        "path": "/dna/data/api/v1/assuranceIssues/count",
        "method": "GET",
        "operationId": "getTheTotalNumberOfIssuesForGivenSetOfFilters",
        "summary": "Get the total number of issues for given set of filters",
        "description": "Returns the total number issues for given set of filters. If there is no start and/or end time, then end time will be defaulted to current time and start time will be defaulted to 24-hours ago from end time. https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesList-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "isGlobal",
          "priority",
          "severity",
          "status",
          "entityType",
          "category",
          "deviceType",
          "name",
          "issueId",
          "entityId",
          "updatedBy",
          "siteHierarchy",
          "siteHierarchyId",
          "siteName",
          "siteId",
          "fabricSiteId",
          "fabricVnName",
          "fabricTransitSiteId",
          "networkDeviceId",
          "networkDeviceIpAddress",
          "macAddress",
          "aiDriven",
          "fabricDriven",
          "fabricSiteDriven",
          "fabricVnDriven",
          "fabricTransitDriven"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/systemIssueDefinitions/{id}",
        "method": "PUT",
        "operationId": "issueTriggerDefinitionUpdate.",
        "summary": "Issue trigger definition update.",
        "description": "Update issue trigger threshold, priority for the given id.\n\nAlso enable or disable issue trigger for the given id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/systemIssueDefinitions/{id}",
        "method": "GET",
        "operationId": "getIssueTriggerDefinitionForGivenId.",
        "summary": "Get issue trigger definition for given id.",
        "description": "Get system issue defintion for the given id. Definition includes all properties from IssueTriggerDefinition schema by default. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/customIssueDefinitions",
        "method": "GET",
        "operationId": "getAllTheCustomIssueDefinitionsBasedOnTheGivenFilters.",
        "summary": "Get all the custom issue definitions based on the given filters.",
        "description": "Retrieve the existing syslog-based custom issue definitions. The supported filters are id, name, profileId,  definition enable status, priority, severity, facility and mnemonic. The issue definition configurations may vary across profiles, hence specifying the profile Id in the query parameter is important and the default profile is global.\n\n  The assurance profile definitions can be obtain via the API endpoint: /api/v1/siteprofile?namespace=assurance. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceUserDefinedIssueAPIs-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "profileId",
          "name",
          "priority",
          "isEnabled",
          "severity",
          "facility",
          "mnemonic",
          "limit",
          "offset",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/customIssueDefinitions",
        "method": "POST",
        "operationId": "createsANewUser-definedIssueDefinitions.",
        "summary": "Creates a new user-defined issue definitions.",
        "description": "Create a new custom issue definition using the provided input request data. The unique identifier for this issue definition is id. Please note that the issue names cannot be duplicated. The definition is based on the syslog. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceUserDefinedIssueAPIs-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceIssues/topNAnalytics",
        "method": "POST",
        "operationId": "getTopNAnalyticsDataOfIssues",
        "summary": "Get Top N analytics data of issues",
        "description": "Gets the Top N analytics data related to issues based on given filters and group by field. This data can be used to find top sites which has most issues or top device types with most issue etc,. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesList-1.0.1-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/systemIssueDefinitions",
        "method": "GET",
        "operationId": "returnsAllIssueTriggerDefinitionsForGivenFilters.",
        "summary": "Returns all issue trigger definitions for given filters.",
        "description": "Get all system issue defintions. The supported filters are id, name, profileId and definition enable status. An issue trigger definition can be different across the profile and device type. So, `profileId` and `deviceType` in the query param is important and default is global profile and all device type. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceType",
          "profileId",
          "id",
          "name",
          "priority",
          "issueEnabled",
          "attribute",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/assuranceIssues/ignore",
        "method": "POST",
        "operationId": "ignoreTheGivenListOfIssues",
        "summary": "Ignore the given list of issues",
        "description": "Ignores the given list of issues. The response contains the list of issues which were successfully ignored as well as the issues which are failed to ignore. After this API returns success response, it may take few seconds for the issue status to be updated if the system is heavily loaded. Please use `GET /dna/data/api/v1/assuranceIssues/{id}` API to fetch the details of a particular issue and verify `updatedTime`. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesLifecycle-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceIssues/query",
        "method": "POST",
        "operationId": "getTheDetailsOfIssuesForGivenSetOfFilters",
        "summary": "Get the details of issues for given set of filters",
        "description": "Returns all details of each issue along with suggested actions for given set of filters specified in request body. If there is no start and/or end time, then end time will be defaulted to current time and start time will be defaulted to 24-hours ago from end time. https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesList-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceIssues/{id}",
        "method": "GET",
        "operationId": "getAllTheDetailsAndSuggestedActionsOfAnIssueForTheGivenIssueId",
        "summary": "Get all the details and suggested actions of an issue for the given issue id",
        "description": " Returns all the details and suggested actions of an issue for the given issue id. https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesList-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/customIssueDefinitions/{id}",
        "method": "PUT",
        "operationId": "updatesAnExistingCustomIssueDefinitionBasedOnTheProvidedId.",
        "summary": "Updates an existing custom issue definition based on the provided Id.",
        "description": "Updates an existing custom issue definition based on the provided Id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceUserDefinedIssueAPIs-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/customIssueDefinitions/{id}",
        "method": "GET",
        "operationId": "getTheCustomIssueDefinitionForTheGivenCustomIssueDefinitionId.",
        "summary": "Get the custom issue definition for the given custom issue definition Id.",
        "description": "Get the custom issue definition for the given custom issue definition Id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceUserDefinedIssueAPIs-1.0.0-resolved.yaml\n",
        "tags": [
          "Issues"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/customIssueDefinitions/{id}",
        "method": "DELETE",
        "operationId": "deletesAnExistingCustomIssueDefinition.",
        "summary": "Deletes an existing custom issue definition.",
        "description": "Deletes an existing custom issue definition based on the Id. Only the Global profile issue has the access to delete the issue definition, so no profile id is required. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceUserDefinedIssueAPIs-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/customIssueDefinitions/count",
        "method": "GET",
        "operationId": "getTheTotalCustomIssueDefinitionsCountBasedOnTheProvidedFilters.",
        "summary": "Get the total custom issue definitions count based on the provided filters.",
        "description": "Get the total number of Custom issue definitions count based on the provided filters. The supported filters are id, name, profileId and definition enable status, severity, facility and mnemonic. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceUserDefinedIssueAPIs-1.0.0-resolved.yaml\n",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "profileId",
          "name",
          "priority",
          "isEnabled",
          "severity",
          "facility",
          "mnemonic"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/systemIssueDefinitions/count",
        "method": "GET",
        "operationId": "getTheCountOfSystemDefinedIssueDefinitionsBasedOnProvidedFilters.",
        "summary": "Get the count of system defined issue definitions based on provided filters.",
        "description": "Get the count of system defined issue definitions based on provided filters. Supported filters are id, name, profileId and definition enable status. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-issueAndHealthDefinitions-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceType",
          "profileId",
          "id",
          "name",
          "priority",
          "issueEnabled"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceIssues",
        "method": "GET",
        "operationId": "getTheDetailsOfIssuesForGivenSetOfFilters-2",
        "summary": "Get the details of issues for given set of filters",
        "description": "Returns all details of each issue along with suggested actions for given set of filters specified in query parameters. If there is no start and/or end time, then end time will be defaulted to current time and start time will be defaulted to 24-hours ago from end time. All string type query parameters support wildcard search (using *). For example: siteHierarchy=Global/San Jose/* returns issues under all sites whole siteHierarchy starts with \"Global/San Jose/\". https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesList-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "isGlobal",
          "priority",
          "severity",
          "status",
          "entityType",
          "category",
          "deviceType",
          "name",
          "issueId",
          "entityId",
          "updatedBy",
          "siteHierarchy",
          "siteHierarchyId",
          "siteName",
          "siteId",
          "fabricSiteId",
          "fabricVnName",
          "fabricTransitSiteId",
          "networkDeviceId",
          "networkDeviceIpAddress",
          "macAddress",
          "view",
          "attribute",
          "aiDriven",
          "fabricDriven",
          "fabricSiteDriven",
          "fabricVnDriven",
          "fabricTransitDriven"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceIssues/query/count",
        "method": "POST",
        "operationId": "getTheTotalNumberOfIssuesForGivenSetOfFilters-2",
        "summary": "Get the total number of issues for given set of filters",
        "description": "Returns the total number issues for given set of filters. If there is no start and/or end time, then end time will be defaulted to current time and start time will be defaulted to 24-hours ago from end time. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesList-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/assuranceIssues/{id}/update",
        "method": "POST",
        "operationId": "updateTheGivenIssueByUpdatingSelectedFields",
        "summary": "Update the given issue by updating selected fields",
        "description": "Updates selected fields in the given issue. Currently the only field that can be updated is 'notes' field. After this API returns success response, it may take few seconds for the issue details to be updated if the system is heavily loaded. Please use `GET /dna/data/api/v1/assuranceIssues/{id}` API to fetch the details of a particular issue and verify `updatedTime`. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesLifecycle-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceIssues/summaryAnalytics",
        "method": "POST",
        "operationId": "getSummaryAnalyticsDataOfIssues",
        "summary": "Get summary analytics data of issues",
        "description": "Gets the summary analytics data related to issues based on given filters and group by field. This data can be used to find issue counts grouped by different keys. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesList-1.0.1-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/assuranceIssues/resolve",
        "method": "POST",
        "operationId": "resolveTheGivenListsOfIssues",
        "summary": "Resolve the given lists of issues",
        "description": "Resolves the given list of issues. The response contains the list of issues which were successfully resolved as well as the issues which are failed to resolve. After this API returns success response, it may take few seconds for the issue status to be updated if the system is heavily loaded. Please use `GET /dna/data/api/v1/assuranceIssues/{id}` API to fetch the details of a particular issue and verify `updatedTime`. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesLifecycle-1.0.0-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/issues",
        "method": "GET",
        "operationId": "issues",
        "summary": "Issues",
        "description": "Intent API to get a list of global issues, issues for a specific device, or issue for a specific client device's MAC address.",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "siteId",
          "deviceId",
          "macAddress",
          "priority",
          "issueStatus",
          "aiDriven"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceIssues/trendAnalytics",
        "method": "POST",
        "operationId": "getTrendAnalyticsDataOfIssues",
        "summary": "Get trend analytics data of issues",
        "description": "Gets the trend analytics data related to issues based on given filters and group by field. This data can be used to find issue counts in different intervals over a period of time. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-IssuesList-1.0.1-resolved.yaml",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/issue-enrichment-details",
        "method": "GET",
        "operationId": "getIssueEnrichmentDetails",
        "summary": "Get Issue Enrichment Details",
        "description": "Enriches a given network issue context (an issue id or end user\u2019s Mac Address) with details about the issue(s), impacted hosts and suggested actions for remediation",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/execute-suggested-actions-commands",
        "method": "POST",
        "operationId": "executeSuggestedActionsCommands",
        "summary": "Execute Suggested Actions Commands",
        "description": "This API fetches the issue details and suggested actions for an issue, given the Issue Id, executes the commands associated with the suggested actions to remediate the issue",
        "tags": [
          "Issues"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Sensors": [
      {
        "path": "/dna/intent/api/v1/icapSettings/configurationModels/{previewActivityId}",
        "method": "DELETE",
        "operationId": "discardsTheICAPConfigurationIntentByActivityID.",
        "summary": "Discards the ICAP configuration intent by activity ID.",
        "description": "Discard the ICAP configuration intent by activity ID, which was returned in TaskResponse's property \"taskId\" at the beginning of the preview-approve workflow.  Discarding the intent can only be applied to intent activities that have not been deployed.\n\nNote that ICAP type FULL, ONBOARDING, OTA, and SPECTRUM for the scheduled-disabled task cannot be discarded or cancelled because they have already deployed.  The feature can only be disabled by sending in a direct-deploy DELETE with API /dna/intent/api/v1/icapSettings/deploy/deployedId/{icapDeployedId}\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "previewActivityId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config",
        "method": "GET",
        "operationId": "retrievesTheDevice'sCLIsOfTheICAPIntent.",
        "summary": "Retrieves the device's CLIs of the ICAP intent.",
        "description": "Returns the device's CLIs of the ICAP intent. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "previewActivityId",
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config",
        "method": "POST",
        "operationId": "generatesTheDevice'sCLIsOfTheICAPConfigurationIntent.",
        "summary": "Generates the device's CLIs of the ICAP configuration intent.",
        "description": "Generates the device's CLIs of the ICAP intent for preview and approve prior to deploying the ICAP configuration intent to the device.  After deploying the configuration intent, generating intent CLIs will not be available for preview. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "previewActivityId",
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/count",
        "method": "GET",
        "operationId": "retrievesTheCountOfDeployedICAPConfigurationsWhileSupportingBasicFiltering.",
        "summary": "Retrieves the count of deployed ICAP configurations while supporting basic filtering.",
        "description": "Retrieves the count of deployed ICAP configurations while supporting basic filtering. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "captureType",
          "captureStatus",
          "clientMac",
          "apId",
          "wlcId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/icap/captureFiles/{id}/download",
        "method": "GET",
        "operationId": "downloadsASpecificICAPPacketCaptureFile",
        "summary": "Downloads a specific ICAP packet capture file",
        "description": "Downloads a specific ICAP packet capture file. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-icap-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/icap/captureFiles/count",
        "method": "GET",
        "operationId": "retrievesTheTotalNumberOfPacketCaptureFilesMatchingSpecifiedCriteria",
        "summary": "Retrieves the total number of packet capture files matching specified criteria",
        "description": "Retrieves the total number of packet capture files matching the specified criteria. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-icap-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "type",
          "clientMac",
          "apMac",
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/configurationModels/{previewActivityId}/networkDeviceStatusDetails",
        "method": "GET",
        "operationId": "getICAPConfigurationStatusPerNetworkDevice.",
        "summary": "Get ICAP configuration status per network device.",
        "description": "Get ICAP configuration status per network device using the activity ID, which was returned in property \"taskId\" of the TaskResponse of the POST. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "previewActivityId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/deviceDeployments",
        "method": "GET",
        "operationId": "getDeviceDeploymentStatus.",
        "summary": "Get device deployment status.",
        "description": "Retrieves ICAP configuration deployment status(s) per device based on filter criteria. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "deployActivityId",
          "networkDeviceIds",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/deviceDeployments/count",
        "method": "GET",
        "operationId": "getDeviceDeploymentStatusCount.",
        "summary": "Get device deployment status count.",
        "description": "Returns the count of device deployment status(s) based on filter criteria. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "deployActivityId",
          "networkDeviceIds"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/deploy",
        "method": "POST",
        "operationId": "deploysTheGivenICAPConfigurationIntentWithoutPreviewAndApprove.",
        "summary": "Deploys the given ICAP configuration intent without preview and approve.",
        "description": "Deploys the given ICAP intent without preview and approval. The response body contains a task object with a taskId and a URL for more information about the task. The deployment status of this ICAP intent can be found in the output of the URL.  For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml\n\n",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "previewDescription"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/deploy/{id}/deleteDeploy",
        "method": "POST",
        "operationId": "removeTheICAPConfigurationOnTheDeviceWithoutPreview",
        "summary": "Remove the ICAP configuration on the device without preview",
        "description": "Remove the ICAP configuration from the device by *id* without preview-deploy. The path parameter *id* can be retrieved from the **GET /dna/intent/api/v1/icapSettings** API. The response body contains a task object with a taskId and a URL. Use the URL to check the task status. ICAP FULL, ONBOARDING, OTA, and SPECTRUM configurations have a durationInMins field. A disable task is scheduled to remove the configuration from the device. Removing the ICAP intent should be done after the pre-scheduled disable task has been deployed. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml\n",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/icap/spectrumInterferenceDeviceReports",
        "method": "GET",
        "operationId": "retrievesTheSpectrumInterferenceDevicesReportsSentByWLCForProvidedAPMac",
        "summary": "Retrieves the spectrum interference devices reports sent by WLC for provided AP Mac",
        "description": "Retrieves the spectrum interference devices reports sent by WLC for provided AP Mac. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-icap-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "apMac",
          "limit",
          "offset",
          "timeSortOrder"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/icap/captureFiles/{id}",
        "method": "GET",
        "operationId": "retrievesDetailsOfASpecificICAPPacketCaptureFile",
        "summary": "Retrieves details of a specific ICAP packet capture file",
        "description": "Retrieves details of a specific ICAP packet capture file. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-icap-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/icap/radios/{id}/stats",
        "method": "POST",
        "operationId": "retrievesSpecificRadioStatisticsOverSpecifiedPeriodOfTime.",
        "summary": "Retrieves specific radio statistics over specified period of time.",
        "description": "Retrieves the time series statistics of a specific radio by applying complex filters. If startTime and endTime are not provided, the API defaults to the last 24 hours. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-icap-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/icap/clients/{id}/stats",
        "method": "POST",
        "operationId": "retrievesSpecificClientStatisticsOverSpecifiedPeriodOfTime.",
        "summary": "Retrieves specific client statistics over specified period of time.",
        "description": "Retrieves the time series statistics of a specific client by applying complex filters. If startTime and endTime are not provided, the API defaults to the last 24 hours. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-icap-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/icap/captureFiles",
        "method": "GET",
        "operationId": "listsICAPPacketCaptureFilesMatchingSpecifiedCriteria",
        "summary": "Lists ICAP packet capture files matching specified criteria",
        "description": "Lists the ICAP packet capture (pcap) files matching the specified criteria. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-icap-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "type",
          "clientMac",
          "apMac",
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/configurationModels",
        "method": "POST",
        "operationId": "createsAnICAPConfigurationIntentForPreview-approve.",
        "summary": "Creates an ICAP configuration intent for preview-approve.",
        "description": "This creates an ICAP configuration intent for preview approval. The intent is not deployed to the device until further preview-approve APIs are applied. This API is the first step in the preview-approve workflow, which consists of several APIs. Skipping any API in the process is not recommended for a complete preview-approve use case. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "previewDescription"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings",
        "method": "GET",
        "operationId": "retrievesDeployedICAPConfigurationsWhileSupportingBasicFiltering.",
        "summary": "Retrieves deployed ICAP configurations while supporting basic filtering.",
        "description": "Retrieves deployed ICAP configurations while supporting basic filtering. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "captureStatus",
          "captureType",
          "clientMac",
          "apId",
          "wlcId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/configurationModels/{id}/deleteDeploy",
        "method": "POST",
        "operationId": "createsAICAPConfigurationWorkflowForICAPIntentToRemoveTheICAPConfigurationOnTheDevice.",
        "summary": "Creates a ICAP configuration workflow for ICAP intent to remove the ICAP configuration on the device.",
        "description": "Creates a ICAP configuration intent to remove the ICAP RFSTATS or ANOMALY configuration from the device. The task has not been applied to the device yet. Subsequent preview-approve workflow APIs must be used to complete the preview-approve process.  The path parameter 'id' can be retrieved from **GET /dna/intent/api/v1/icapSettings** API. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/icapSettings/configurationModels/{previewActivityId}/deploy",
        "method": "POST",
        "operationId": "deploysTheICAPConfigurationIntentByActivityID.",
        "summary": "Deploys the ICAP configuration intent by activity ID.",
        "description": "Deploys the ICAP configuration intent by activity ID, which was returned in property \"taskId\" of the TaskResponse of the POST.  POST'ing the intent prior to generating the intent CLI for preview-approve has the same effect as direct-deploy'ing the intent to the device.\n\nGenerating of device's CLIs for preview-approve is not available for this activity ID after using this POST API. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-ICAP_APIs-1.0.0-resolved.yaml\n",
        "tags": [
          "Sensors"
        ],
        "parameters": [
          "previewActivityId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/icap/spectrumSensorReports",
        "method": "GET",
        "operationId": "retrievesTheSpectrumSensorReportsSentByWLCForProvidedAPMac",
        "summary": "Retrieves the spectrum sensor reports sent by WLC for provided AP Mac",
        "description": "Retrieves the spectrum sensor reports sent by WLC for provided AP Mac. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-icap-1.0.0-resolved.yaml",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "apMac",
          "dataType",
          "limit",
          "offset",
          "timeSortOrder"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sensor",
        "method": "POST",
        "operationId": "createSensorTestTemplate",
        "summary": "Create sensor test template",
        "description": "Intent API to create a SENSOR test template with a new SSID, existing SSID, or both new and existing SSID",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sensor",
        "method": "GET",
        "operationId": "sensors",
        "summary": "Sensors",
        "description": "Intent API to get a list of SENSOR devices",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sensor",
        "method": "DELETE",
        "operationId": "deleteSensorTest",
        "summary": "Delete sensor test",
        "description": "Intent API to delete an existing SENSOR test template",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [
          "templateName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sensorTestTemplate",
        "method": "PUT",
        "operationId": "duplicateSensorTestTemplate",
        "summary": "Duplicate sensor test template",
        "description": "Intent API to duplicate an existing SENSOR test template",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/AssuranceScheduleSensorTest",
        "method": "PUT",
        "operationId": "editSensorTestTemplate",
        "summary": "Edit sensor test template",
        "description": "Intent API to deploy, schedule, or edit and existing SENSOR test template",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sensor-run-now",
        "method": "PUT",
        "operationId": "runNowSensorTest",
        "summary": "Run now sensor test",
        "description": "Intent API to run a deployed SENSOR test",
        "tags": [
          "Sensors"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Applications": [
      {
        "path": "/dna/data/api/v1/networkApplications",
        "method": "GET",
        "operationId": "retrievesTheListOfNetworkApplicationsAlongWithExperienceAndHealthMetrics",
        "summary": "Retrieves the list of network applications along with experience and health metrics",
        "description": "Retrieves the list of network applications along with experience and health metrics. If startTime and endTime are not provided, the API defaults to the last 24 hours. `siteId` is mandatory. `siteId` must be a site UUID of a building. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-NetworkApplications-1.0.0-resolved.yaml",
        "tags": [
          "Applications"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "siteId",
          "ssid",
          "applicationName",
          "businessRelevance",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/thousandEyesTestResults/trendAnalytics",
        "method": "GET",
        "operationId": "theTrendAnalyticsDataForThousandEyesTestResultsInTheSpecifiedTimeRange",
        "summary": "The trend analytics data for ThousandEyes test results in the specified time range",
        "description": "Get trend time series for ThousandEyes test results.\n\nThe data will be grouped based on the specified trend time interval. If `startTime` and `endTime` are not provided, the API defaults to the last 24 hours.\n\nBy default the number of records returned will be 100 and the records will be sorted by time in ascending (`asc`) order\n.  For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-thousandEyesTestResults-1.0.0-resolved.yaml",
        "tags": [
          "Applications"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "startTime",
          "endTime",
          "trendInterval",
          "testId",
          "testName",
          "testType",
          "agentId",
          "networkDeviceName",
          "limit",
          "offset",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkApplications/trendAnalytics",
        "method": "POST",
        "operationId": "retrievesTheTrendAnalyticsDataRelatedToNetworkApplications.",
        "summary": "Retrieves the Trend analytics data related to network applications.",
        "description": "Retrieves the trend analytics of applications experience data for the specified time range. The data will be grouped based on the given trend time interval. This API facilitates obtaining consolidated insights into the performance and status of the network applications over the specified start and end time. If startTime and endTime are not provided, the API defaults to the last 24 hours. `siteId` and `trendInterval` are mandatory. `siteId` must be a site UUID of a building. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-NetworkApplications-1.0.0-resolved.yaml",
        "tags": [
          "Applications"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/thousandEyesTestResults",
        "method": "GET",
        "operationId": "retrievesTheListOfThousandEyesTestResultsAlongWithRelatedMetrics",
        "summary": "Retrieves the list of ThousandEyes test results along with related metrics",
        "description": "Retrieves the list of ThousandEyes test results along with related metrics. If `startTime` and `endTime` are not provided, the API defaults to the last 24 hours.\n\nPlease note that `siteId` filter (if used) should be using only site UUIDs of buildings.\n  For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-thousandEyesTestResults-1.0.0-resolved.yaml",
        "tags": [
          "Applications"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "startTime",
          "endTime",
          "testId",
          "testName",
          "testType",
          "agentId",
          "networkDeviceName",
          "attribute",
          "limit",
          "offset",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/thousandEyesTestResults/count",
        "method": "GET",
        "operationId": "retrievesTheTotalCountOfThousandEyesTestResults",
        "summary": "Retrieves the total count of ThousandEyes test results",
        "description": "Retrieves the total count of ThousandEyes test results for the given filters. If `startTime` and `endTime` are not provided, the API defaults to the last 24 hours.  For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-thousandEyesTestResults-1.0.0-resolved.yaml",
        "tags": [
          "Applications"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "startTime",
          "endTime",
          "testId",
          "testName",
          "testType",
          "agentId",
          "networkDeviceName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkApplications/{id}/trendAnalytics",
        "method": "POST",
        "operationId": "retrievesTheTrendAnalyticsRelatedToSpecificNetworkApplication.",
        "summary": "Retrieves the Trend analytics related to specific network application.",
        "description": "Retrieves the trend analytics of applications experience data to specific network application for the specified time range. The data will be grouped based on the given trend time interval. This API facilitates obtaining consolidated insights into the performance and status of the network applications over the specified start and end time. If startTime and endTime are not provided, the API defaults to the last 24 hours.`siteId` and `trendInterval` are mandatory. `siteId` must be a site UUID of a building.For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-NetworkApplications-1.0.1-resolved.yaml",
        "tags": [
          "Applications"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkApplications/count",
        "method": "GET",
        "operationId": "retrievesTheTotalCountOfNetworkApplicationsByApplyingBasicFiltering",
        "summary": "Retrieves the total count of network applications by applying basic filtering",
        "description": "Retrieves the number of network applications by applying basic filtering. If startTime and endTime are not provided, the API defaults to the last 24 hours. `siteId` is mandatory. `siteId` must be a site UUID of a building. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-NetworkApplications-1.0.0-resolved.yaml",
        "tags": [
          "Applications"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "siteId",
          "ssid",
          "applicationName",
          "businessRelevance"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/networkApplications/summaryAnalytics",
        "method": "POST",
        "operationId": "retrievesSummaryAnalyticsDataRelatedToNetworkApplicationsAlongWithHealthMetrics.",
        "summary": "Retrieves summary analytics data related to network applications along with health metrics.",
        "description": "Retrieves summary analytics data related to network applications while applying complex filtering, aggregate functions, and grouping.  This API facilitates obtaining consolidated insights into the performance and status of the network applications. If startTime and endTime are not provided, the API defaults to the last 24 hours. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-NetworkApplications-1.0.1-resolved.yaml",
        "tags": [
          "Applications"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/application-health",
        "method": "GET",
        "operationId": "applications",
        "summary": "Applications",
        "description": "Intent API to get a list of applications for a specific site, a device, or a client device's MAC address. For a combination of a specific application with site and/or device the API gets list of issues/devices/endpoints.",
        "tags": [
          "Applications"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "deviceId",
          "macAddress",
          "startTime",
          "endTime",
          "applicationHealth",
          "offset",
          "limit",
          "applicationName"
        ],
        "version": "1.0.0"
      }
    ],
    "Sites": [
      {
        "path": "/dna/data/api/v1/energy/sites/query/count",
        "method": "POST",
        "operationId": "submitRequestToCountSitesEnergyFromQuery",
        "summary": "Submit request to count sites energy from query",
        "description": "Submits a request to retrieve the total count of sites that provide energy data, filtered according to the specified query parameters. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-sitesEnergy-1.0.1-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/sites/query/count",
        "method": "GET",
        "operationId": "countSitesEnergyForTheGivenTaskID",
        "summary": "Count sites energy for the given task ID",
        "description": "Gets count sites energy task result for the given task ID. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-sitesEnergy-1.0.1-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/site-health",
        "method": "GET",
        "operationId": "getSiteHealth",
        "summary": "Get Site Health",
        "description": "Returns Overall Health information for all sites",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "siteType",
          "offset",
          "limit",
          "timestamp"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteHealthSummaries/summaryAnalytics",
        "method": "POST",
        "operationId": "queryAnAggregatedSummaryOfSiteHealthData.",
        "summary": "Query an aggregated summary of site health data.",
        "description": "Query an aggregated summary of all site health\nThis API provides the latest health data from a given `endTime`\nIf data is not ready for the provided endTime, the request will fail, and the error message will indicate the recommended endTime to use to retrieve a complete data set.\nThis behavior may occur if the provided endTime=currentTime, since we are not a real time system.\nWhen `endTime` is not provided, the API returns the latest data.\nThis API also provides issue data. The `startTime` query param can be used to specify the beginning point of time range to retrieve the active issue counts in. When this param is not provided, the default `startTime` will be 24 hours before endTime.\n\n Aggregated response data will NOT have unique identifier data populated.\n\n List of unique identifier data: [`id`, `siteHierarchy`,\n`siteHierarchyId`, `siteType`, `latitude`, `longitude`]\nPlease refer to the 'API Support Documentation' section to understand which fields are supported. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-siteHealthSummaries-1.0.3-resolved.yaml\n",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "siteHierarchy",
          "siteHierarchyId",
          "siteType",
          "id"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteHealthSummaries/summaryAnalytics",
        "method": "GET",
        "operationId": "readAnAggregatedSummaryOfSiteHealthData.",
        "summary": "Read an aggregated summary of site health data.",
        "description": "Get an aggregated summary of all site health or use the query params to get an aggregated summary of health for a subset of sites.\nThis API provides the latest health data from a given `endTime`\nIf data is not ready for the provided endTime, the request will fail, and the error message will indicate the recommended endTime to use to retrieve a complete data set.\nThis behavior may occur if the provided endTime=currentTime, since we are not a real time system.\nWhen `endTime` is not provided, the API returns the latest data.\nThis API also provides issue data. The `startTime` query param can be used to specify the beginning point of time range to retrieve the active issue counts in. When this param is not provided, the default `startTime` will be 24 hours before endTime.\nAggregated response data will NOT have unique identifier data populated.\nList of unique identifier data: [`id`, `siteHierarchy`, `siteHierarchyId`, `siteType`, `latitude`, `longitude`]. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-siteHealthSummaries-1.0.3-resolved.yaml\n",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "siteHierarchy",
          "siteHierarchyId",
          "siteType",
          "id",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/trendAnalytics",
        "method": "POST",
        "operationId": "submitRequestForSiteAnalyticsTrendData",
        "summary": "Submit request for site analytics trend data",
        "description": "Submits the task to get site analytics trend data for a given site. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/trendAnalytics",
        "method": "GET",
        "operationId": "getSiteAnalyticsTrendDataForTheGivenTaskId",
        "summary": "Get site analytics trend data for the given task id",
        "description": "Gets site analytics trend data for the given task id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/site/count",
        "method": "GET",
        "operationId": "getSiteCountV2",
        "summary": "Get Site Count V2",
        "description": "Get the site count of the specified site's sub-hierarchy (inclusive of the provided site)",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "id"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/query",
        "method": "POST",
        "operationId": "getSiteAnalyticsForTheChildSitesOfGivenParentSiteAndOtherFilters.",
        "summary": "Get site analytics for the child sites of given parent site and other filters.",
        "description": "Returns site analytics for all child sites of given parent site. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteHealthSummaries/{id}",
        "method": "GET",
        "operationId": "readSiteHealthSummaryDataBySiteId.",
        "summary": "Read site health summary data by site id.",
        "description": "Get a health summary for a specific site by providing the unique site id in the url path.\nThis API provides the latest health data from a given `endTime`\nIf data is not ready for the provided endTime, the request will fail, and the error message will indicate the recommended endTime to use to retrieve a complete data set.\nThis behavior may occur if the provided endTime=currentTime, since we are not a real time system.\nWhen `endTime` is not provided, the API returns the latest data.\nThis API also provides issue data. The `startTime` query param can be used to specify the beginning point of time range to retrieve the active issue counts in. When this param is not provided, the default `startTime` will be 24 hours before endTime. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-siteHealthSummaries-1.0.3-resolved.yaml\n",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/topNAnalytics",
        "method": "POST",
        "operationId": "submitRequestForTopNEntitiesRelatedToSiteAnalytics",
        "summary": "Submit request for Top N entities related to site analytics",
        "description": "Gets the Top N entites related based on site analytics for a given kpi type. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/topNAnalytics",
        "method": "GET",
        "operationId": "getTopNEntitiesRelatedToSiteAnalyticsForTheGivenTaskId",
        "summary": "Get Top N entities related to site analytics for the given task id",
        "description": "Gets the topN analytics data for a given taskId. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/sites",
        "method": "GET",
        "operationId": "getSitesEnergy",
        "summary": "Get sites energy",
        "description": "Retrieves a list of sites with energy data based on the specified query parameters. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-sitesEnergy-1.0.1-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "siteHierarchy",
          "siteHierarchyId",
          "siteName",
          "siteType",
          "deviceCategory",
          "siteId",
          "views",
          "attribute",
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/maps/import/{importContextUuid}/perform",
        "method": "POST",
        "operationId": "importMapArchive-PerformImport",
        "summary": "Import Map Archive - Perform Import",
        "description": "For a previously initatied import, approves the import to be performed, accepting that data loss may occur.  A Map import will fully replace existing Maps data for the site(s) defined in the archive. The Map Archive Import Status API /maps/import/${contextUuid}/status should always be checked to validate the pre-import validation output prior to performing the import.",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "importContextUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/maps/import/{importContextUuid}",
        "method": "DELETE",
        "operationId": "importMapArchive-CancelAnImport",
        "summary": "Import Map Archive - Cancel an Import",
        "description": "Cancels a previously initatied import, allowing the system to cleanup cached resources about that import data, and ensures the import cannot accidentally be performed / approved at a later time.",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "importContextUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/{id}",
        "method": "GET",
        "operationId": "getSiteAnalyticsForOneSite.",
        "summary": "Get site analytics for one site.",
        "description": "Returns site analytics for the given site. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "taskId",
          "startTime",
          "endTime",
          "ssid",
          "band",
          "failureCategory",
          "failureReason",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/site",
        "method": "GET",
        "operationId": "getSiteV2",
        "summary": "Get Site V2",
        "description": "API to get site(s) by site-name-hierarchy or siteId or type. List all sites if these parameters  are not given as an input.",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "groupNameHierarchy",
          "id",
          "type",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/sites/{id}",
        "method": "GET",
        "operationId": "getSiteEnergyByID",
        "summary": "Get site energy by ID",
        "description": "Retrieve the energy summary data for a specific site based on the site ID. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-sitesEnergy-1.0.1-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "views",
          "attribute",
          "deviceCategory",
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteHealthSummaries/trendAnalytics",
        "method": "GET",
        "operationId": "readTrendAnalyticsDataForAGroupingOfSitesInYourNetwork",
        "summary": "Read trend analytics data for a grouping of sites in your network",
        "description": "Retrieves the time series information of health and issue data for sites specified by query parameters, or all sites. The data will be grouped based on the specified trend time interval.\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-siteHealthSummaries-2.0.0-resolved.yaml\n",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "siteHierarchy",
          "siteHierarchyId",
          "siteType",
          "id",
          "trendInterval",
          "limit",
          "offset",
          "timeSortOrder",
          "attribute",
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/sites/query",
        "method": "POST",
        "operationId": "submitRequestToQuerySitesEnergy",
        "summary": "Submit request to query sites energy",
        "description": "Submits a request to retrieve a list of sites along with their energy data for a specified time range, based on the filters provided in the request body. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-sitesEnergy-1.0.1-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/sites/query",
        "method": "GET",
        "operationId": "querySitesEnergyForTheGivenTaskID",
        "summary": "Query sites energy for the given task ID",
        "description": "Gets query sites energy task result for the given task ID. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-sitesEnergy-1.0.1-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/maps/supported-access-points",
        "method": "GET",
        "operationId": "mapsSupportedAccessPoints",
        "summary": "Maps Supported Access Points",
        "description": "Gets the list of supported access point types as well as valid antenna pattern names that can be used for each.",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/summaryAnalytics",
        "method": "GET",
        "operationId": "getSiteAnalyticsSummaryDataForTheGivenTaskId",
        "summary": "Get site analytics summary data for the given task id",
        "description": "Get site analytics summary data for the given task id. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/summaryAnalytics",
        "method": "POST",
        "operationId": "submitRequestForSiteAnalyticsSummaryData",
        "summary": "Submit request for site analytics summary data",
        "description": "Submits the task to get summary analytics data for a given site. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/site-member/{id}/member",
        "method": "GET",
        "operationId": "getDevicesThatAreAssignedToASite",
        "summary": "Get devices that are assigned to a site",
        "description": "API to get devices that are assigned to a site.",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "offset",
          "limit",
          "memberType",
          "level"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/maps/import/start",
        "method": "POST",
        "operationId": "importMapArchive-StartImport",
        "summary": "Import Map Archive - Start Import",
        "description": "Initiates a map archive import of a tar.gz file.  The archive must consist of one xmlDir/MapsImportExport.xml map descriptor file, and 1 or more images for the map areas nested under /images folder.",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteHealthSummaries/count",
        "method": "GET",
        "operationId": "readSiteCount.",
        "summary": "Read site count.",
        "description": "Get a count of sites. Use the available query parameters to get the count of a subset of sites.\nThis API provides the latest data from a given `endTime`\nIf data is not ready for the provided endTime, the request will fail, and the error message will indicate the recommended endTime to use to retrieve a complete data set.\nThis behavior may occur if the provided endTime=currentTime, since we are not a real time system.\nWhen `endTime` is not provided, the API returns the latest data. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-siteHealthSummaries-1.0.3-resolved.yaml\n",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "endTime",
          "siteHierarchy",
          "siteHierarchyId",
          "siteType",
          "id"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/count",
        "method": "GET",
        "operationId": "getTheTotalNumberOfSiteAnalyticsRecordsAvailableForForGivenSetOfQueryParameters.",
        "summary": "Get the total number of site analytics records available for for given set of query parameters.",
        "description": "Returns the total number of site analytics records available for for given set of query parameters. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "siteHierarchy",
          "siteHierarchyId",
          "siteId",
          "siteType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/sites/count",
        "method": "GET",
        "operationId": "countSitesEnergy",
        "summary": "Count sites energy",
        "description": "Retrieves the total count of sites that provide energy data, filtered according to the specified query parameters. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-sitesEnergy-1.0.1-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "siteHierarchy",
          "siteHierarchyId",
          "siteName",
          "siteType",
          "deviceCategory",
          "siteId",
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/maps/import/{importContextUuid}/status",
        "method": "GET",
        "operationId": "importMapArchive-ImportStatus",
        "summary": "Import Map Archive - Import Status",
        "description": "Gets the status of a map archive import operation. For a map archive import that has just been initiated, will provide the result of validation of the archive and a pre-import preview of what will be performed if the import is performed.  Once an import is requested to be performed, this API will give the status of the import and upon completion a post-import summary of what was performed by the operation.",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "importContextUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteHealthSummaries/{id}/trendAnalytics",
        "method": "GET",
        "operationId": "readTrendAnalyticsDataForASpecificSiteInYourNetwork",
        "summary": "Read trend analytics data for a specific site in your network",
        "description": "Retrieves the time series information of health and issue data for a site specified by the path parameter. The data will be grouped based on the specified trend time interval.\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-siteHealthSummaries-2.0.0-resolved.yaml\n",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "trendInterval",
          "limit",
          "offset",
          "timeSortOrder",
          "attribute",
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteHealthSummaries",
        "method": "GET",
        "operationId": "readListOfSiteHealthSummaries.",
        "summary": "Read list of site health summaries.",
        "description": "Get a paginated list of site health summaries. Use the available query parameters to identify a subset of sites you want health summaries for.\nThis API provides the latest health data from a given `endTime`\nIf data is not ready for the provided endTime, the request will fail, and the error message will indicate the recommended endTime to use to retrieve a complete data set.\nThis behavior may occur if the provided endTime=currentTime, since we are not a real time system.\nWhen `endTime` is not provided, the API returns the latest data.\nThis API also provides issue data. The `startTime` query param can be used to specify the beginning point of time range to retrieve the active issue counts in. When this param is not provided, the default `startTime` will be 24 hours before endTime.\nValid values for `sortBy` param in this API are limited to the attributes provided in the `site` view.\nDefault sortBy is 'siteHierarchy' in order 'asc' (ascending). For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-siteHealthSummaries-1.0.3-resolved.yaml\n",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "siteHierarchy",
          "siteHierarchyId",
          "siteType",
          "id",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries",
        "method": "GET",
        "operationId": "getSiteAnalyticsForTheChildSitesOfGivenParentSiteAndOtherQueryParameters.",
        "summary": "Get site analytics for the child sites of given parent site and other query parameters.",
        "description": "Returns site analytics for all child sites of given parent site. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId",
          "startTime",
          "endTime",
          "siteHierarchy",
          "siteHierarchyId",
          "siteId",
          "siteType",
          "ssid",
          "band",
          "failureCategory",
          "failureReason",
          "view",
          "attribute",
          "limit",
          "offset",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/siteKpiSummaries/query/count",
        "method": "POST",
        "operationId": "getTheTotalNumberOfSiteAnalyticsRecordsAvailableForForGivenSetOfFilters.",
        "summary": "Get the total number of site analytics records available for for given set of filters.",
        "description": "Returns the total number of site analytics records available for for given set of filters. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-SiteKpiSummaries-1.0.0-resolved.yaml",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/maps/export/{siteHierarchyUuid}",
        "method": "POST",
        "operationId": "exportMapArchive",
        "summary": "Export Map Archive",
        "description": "Allows exporting a Map archive in an XML interchange format along with the associated images. ",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "siteHierarchyUuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/assign-device-to-site/{siteId}/device",
        "method": "POST",
        "operationId": "assignDevicesToSite",
        "summary": "Assign Devices To Site",
        "description": "Assigns unassigned devices to a site. This API does not move assigned devices to other sites.",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/site",
        "method": "POST",
        "operationId": "createSite",
        "summary": "Create Site",
        "description": "Creates site with area/building/floor with specified hierarchy.",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/site",
        "method": "GET",
        "operationId": "getSite",
        "summary": "Get Site",
        "description": "Get site(s) by site-name-hierarchy or siteId or type. List all sites if these parameters are not given as an input.",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "siteId",
          "type",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/site/{siteId}",
        "method": "DELETE",
        "operationId": "deleteSite",
        "summary": "Delete Site",
        "description": "Delete site with area/building/floor by siteId.",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/site/{siteId}",
        "method": "PUT",
        "operationId": "updateSite",
        "summary": "Update Site",
        "description": "Update site area/building/floor with specified hierarchy and new values",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/site/count",
        "method": "GET",
        "operationId": "getSiteCount",
        "summary": "Get Site Count",
        "description": "Get the site count of the specified site's sub-hierarchy (inclusive of the provided site)",
        "tags": [
          "Sites"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/membership/{siteId}",
        "method": "GET",
        "operationId": "getMembership",
        "summary": "Get Membership",
        "description": "Getting the site children details and device details.",
        "tags": [
          "Sites"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [
          "offset",
          "limit",
          "deviceFamily",
          "serialNumber"
        ],
        "version": "1.0.0"
      }
    ],
    "Clients": [
      {
        "path": "/dna/intent/api/v1/client-detail",
        "method": "GET",
        "operationId": "getClientDetail",
        "summary": "Get Client Detail",
        "description": "Returns detailed Client information retrieved by Mac Address for any given point of time. ",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [
          "macAddress",
          "timestamp"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/clients/query",
        "method": "POST",
        "operationId": "queryClientsEnergy",
        "summary": "Query clients energy",
        "description": "Retrieves a list of client devices along with their energy data for a specified time range, based on the filters provided in the request body. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/client-health",
        "method": "GET",
        "operationId": "getOverallClientHealth",
        "summary": "Get Overall Client Health",
        "description": "Returns Overall Client Health information by Client type (Wired and Wireless) for any given point of time",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [
          "timestamp"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/clients/query/count",
        "method": "POST",
        "operationId": "countClientsEnergyFromQuery",
        "summary": "Count clients energy from query",
        "description": "Retrieves the total count of client devices based on the specified complex filters. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients/trendAnalytics",
        "method": "POST",
        "operationId": "retrievesTheTrendAnalyticsDataRelatedToClients.",
        "summary": "Retrieves the Trend analytics data related to clients.",
        "description": "Retrieves the trend analytics of client data for the specified time range. The data will be grouped based on the given trend time interval. This API facilitates obtaining consolidated insights into the performance and status of the clients over the specified start and end time. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients/{id}",
        "method": "GET",
        "operationId": "retrievesSpecificClientInformationMatchingTheMACAddress.",
        "summary": "Retrieves specific client information matching the MAC address.",
        "description": "Retrieves specific client information matching the MAC address. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/clients",
        "method": "GET",
        "operationId": "getClientsEnergy",
        "summary": "Get clients energy",
        "description": "Retrieves a list of client devices with energy data based on the specified query parameters. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "cursor",
          "sortBy",
          "order",
          "id",
          "siteId",
          "siteHierarchy",
          "siteHierarchyId",
          "deviceCategory",
          "deviceSubCategory",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients/count",
        "method": "GET",
        "operationId": "retrievesTheTotalCountOfClientsByApplyingBasicFiltering",
        "summary": "Retrieves the total count of clients by applying basic filtering",
        "description": "Retrieves the number of clients by applying basic filtering. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "type",
          "osType",
          "osVersion",
          "siteHierarchy",
          "siteHierarchyId",
          "siteId",
          "ipv4Address",
          "ipv6Address",
          "macAddress",
          "wlcName",
          "connectedNetworkDeviceName",
          "ssid",
          "band"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/clients/count",
        "method": "GET",
        "operationId": "countClientsEnergy",
        "summary": "Count clients energy",
        "description": "Retrieves the total count of client devices that provide energy data, filtered according to the specified query parameters. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "id",
          "siteId",
          "siteHierarchy",
          "siteHierarchyId",
          "deviceCategory",
          "deviceSubCategory"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/clients/{id}",
        "method": "GET",
        "operationId": "getClientEnergyByID",
        "summary": "Get client energy by ID",
        "description": "Retrieves client device energy data for a specified time range based on the client ID. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients/query/count",
        "method": "POST",
        "operationId": "retrievesTheNumberOfClientsByApplyingComplexFilters.",
        "summary": "Retrieves the number of clients by applying complex filters.",
        "description": "Retrieves the number of clients by applying complex filters. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients/{id}/trendAnalytics",
        "method": "POST",
        "operationId": "retrievesSpecificClientInformationOverASpecifiedPeriodOfTime.",
        "summary": "Retrieves specific client information over a specified period of time.",
        "description": "Retrieves the time series information of a specific client by applying complex filters, aggregate functions, and grouping. The data will be grouped based on the specified trend time interval. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients/summaryAnalytics",
        "method": "POST",
        "operationId": "retrievesSummaryAnalyticsDataRelatedToClients.",
        "summary": "Retrieves summary analytics data related to clients.",
        "description": "Retrieves summary analytics data related to clients while applying complex filtering, aggregate functions, and grouping. This API facilitates obtaining consolidated insights into the performance and status of the clients. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients/topNAnalytics",
        "method": "POST",
        "operationId": "retrievesTheTop-NAnalyticsDataRelatedToClients.",
        "summary": "Retrieves the Top-N analytics data related to clients.",
        "description": " Retrieves the top N analytics data related to clients based on the provided input data. This API facilitates obtaining insights into the top-performing or most impacted clients. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients/query",
        "method": "POST",
        "operationId": "retrievesTheListOfClientsByApplyingComplexFiltersWhileAlsoSupportingAggregateAttributes.",
        "summary": "Retrieves the list of clients by applying complex filters while also supporting aggregate attributes.",
        "description": "Retrieves the list of clients by applying complex filters while also supporting aggregate attributes. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/clients",
        "method": "GET",
        "operationId": "retrievesTheListOfClients,WhileAlsoOfferingBasicFilteringAndSortingCapabilities.",
        "summary": "Retrieves the list of clients, while also offering basic filtering and sorting capabilities.",
        "description": "Retrieves the list of clients, while also offering basic filtering and sorting capabilities. For detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-clients1-1.0.0-resolved.yaml",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "type",
          "osType",
          "osVersion",
          "siteHierarchy",
          "siteHierarchyId",
          "siteId",
          "ipv4Address",
          "ipv6Address",
          "macAddress",
          "wlcName",
          "connectedNetworkDeviceName",
          "ssid",
          "band",
          "view",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/client-proximity",
        "method": "GET",
        "operationId": "clientProximity",
        "summary": "Client Proximity",
        "description": "This intent API will provide client proximity information for a specific wireless user. Proximity is defined as presence on the same floor at the same time as the specified wireless user. The Proximity workflow requires the subscription to the following event (via the Event Notification workflow) prior to making this API call: NETWORK-CLIENTS-3-506 - Client Proximity Report.",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [
          "username",
          "number_days",
          "time_resolution"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/client-enrichment-details",
        "method": "GET",
        "operationId": "getClientEnrichmentDetails",
        "summary": "Get Client Enrichment Details",
        "description": "Enriches a given network End User context (a network user-id or end user\u2019s device Mac Address) with details about the user, the devices that the user is connected to and the assurance issues that the user is impacted by",
        "tags": [
          "Clients"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "EoX": [
      {
        "path": "/dna/intent/api/v1/eox-status/device",
        "method": "GET",
        "operationId": "getEoXStatusForAllDevices",
        "summary": "Get EoX Status For All Devices",
        "description": "Retrieves EoX status for all devices in the network",
        "tags": [
          "EoX"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/eox-status/device/{deviceId}",
        "method": "GET",
        "operationId": "getEoXDetailsPerDevice",
        "summary": "Get EoX Details Per Device",
        "description": "Retrieves EoX details for a device ",
        "tags": [
          "EoX"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/eox-status/summary",
        "method": "GET",
        "operationId": "getEoXSummary",
        "summary": "Get EoX Summary",
        "description": "Retrieves EoX summary for all devices in the network",
        "tags": [
          "EoX"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Security Advisories": [
      {
        "path": "/dna/intent/api/v1/security-advisory/device/{deviceId}/advisory",
        "method": "GET",
        "operationId": "getAdvisoriesPerDevice",
        "summary": "Get Advisories Per Device",
        "description": "Retrieves list of advisories for a device",
        "tags": [
          "Security Advisories"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security-advisory/advisory/aggregate",
        "method": "GET",
        "operationId": "getAdvisoriesSummary",
        "summary": "Get Advisories Summary",
        "description": "Retrieves summary of advisories on the network.",
        "tags": [
          "Security Advisories"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security-advisory/advisory",
        "method": "GET",
        "operationId": "getAdvisoriesList",
        "summary": "Get Advisories List",
        "description": "Retrieves list of advisories on the network",
        "tags": [
          "Security Advisories"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security-advisory/device/{deviceId}",
        "method": "GET",
        "operationId": "getAdvisoryDeviceDetail",
        "summary": "Get Advisory Device Detail",
        "description": "Retrieves advisory device details for a device",
        "tags": [
          "Security Advisories"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/security-advisory/advisory/{advisoryId}/device",
        "method": "GET",
        "operationId": "getDevicesPerAdvisory",
        "summary": "Get Devices Per Advisory",
        "description": "Retrieves list of devices for an advisory",
        "tags": [
          "Security Advisories"
        ],
        "parameters": [
          "advisoryId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Topology": [
      {
        "path": "/dna/intent/api/v1/topology/vlan/vlan-names",
        "method": "GET",
        "operationId": "getVLANDetails",
        "summary": "Get VLAN details",
        "description": "Returns the list of VLAN names that are involved in a loop as identified by the Spanning Tree Protocol",
        "tags": [
          "Topology"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-health",
        "method": "GET",
        "operationId": "getOverallNetworkHealth",
        "summary": "Get Overall Network Health",
        "description": "Returns Overall Network Health information by Device category (Access, Distribution, Core, Router, Wireless) for any given point of time",
        "tags": [
          "Topology"
        ],
        "parameters": [],
        "query_parameters": [
          "timestamp"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/topology/site-topology",
        "method": "GET",
        "operationId": "getSiteTopology",
        "summary": "Get Site Topology",
        "description": "Returns site topology",
        "tags": [
          "Topology"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/topology/physical-topology",
        "method": "GET",
        "operationId": "getPhysicalTopology",
        "summary": "Get Physical Topology",
        "description": "Returns the raw physical topology by specified criteria of nodeType",
        "tags": [
          "Topology"
        ],
        "parameters": [],
        "query_parameters": [
          "nodeType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/topology/l2/{vlanID}",
        "method": "GET",
        "operationId": "getTopologyDetails",
        "summary": "Get topology details",
        "description": "Returns Layer 2 network topology by specified VLAN ID",
        "tags": [
          "Topology"
        ],
        "parameters": [
          "vlanID"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/topology/l3/{topologyType}",
        "method": "GET",
        "operationId": "getL3TopologyDetails",
        "summary": "Get L3 Topology Details",
        "description": "Returns the Layer 3 network topology by routing protocol",
        "tags": [
          "Topology"
        ],
        "parameters": [
          "topologyType"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "": [
      {
        "path": "/dna/data/api/v1/energy/trendAnalytics",
        "method": "POST",
        "operationId": "getEnergyTrendAnalytics",
        "summary": "Get energy trend analytics",
        "description": "Retrieve the energy trend analytics data related to device energy consumption for all devices, including network devices and clients assigned to specific sites. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Know Your Network"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/energy/summaryAnalytics",
        "method": "POST",
        "operationId": "getEnergySummaryAnalytics",
        "summary": "Get energy summary analytics",
        "description": "Retrieve the summary analytics data related to device energy consumption for all devices, including network devices and clients assigned to specific sites. For detailed information about the usage of the API, please refer to the Open API specification document -\u00a0https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-deviceEnergy_1.0-1.0.1-resolved.yaml",
        "tags": [
          "Know Your Network"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Users": [
      {
        "path": "/dna/intent/api/v1/user-enrichment-details",
        "method": "GET",
        "operationId": "getUserEnrichmentDetails",
        "summary": "Get User Enrichment Details",
        "description": "Enriches a given network End User context (a network user-id or end user\u2019s device Mac Address) with details about the user and devices that the user is connected to",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Cisco DNA Center System": {
    "Disaster Recovery": [
      {
        "path": "/dna/intent/api/v1/disasterrecovery/system/operationstatus",
        "method": "GET",
        "operationId": "disasterRecoveryOperationalStatus",
        "summary": "Disaster Recovery Operational Status",
        "description": "Returns the status of Disaster Recovery operation performed on the system.",
        "tags": [
          "Disaster Recovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/disasterrecovery/system/status",
        "method": "GET",
        "operationId": "disasterRecoveryStatus",
        "summary": "Disaster Recovery Status",
        "description": "Detailed and Summarized status of DR components (Active, Standby and Witness system's health). ",
        "tags": [
          "Disaster Recovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Health and Performance": [
      {
        "path": "/dna/intent/api/v1/diagnosticValidationWorkflows",
        "method": "GET",
        "operationId": "retrievesTheListOfValidationWorkflows",
        "summary": "Retrieves the list of validation workflows",
        "description": "Retrieves the workflows that have been successfully submitted and are currently available. This is sorted by `submitTime`",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "runStatus",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnosticValidationWorkflows",
        "method": "POST",
        "operationId": "submitsTheWorkflowForExecutingValidations",
        "summary": "Submits the workflow for executing validations",
        "description": "Submits the workflow for executing the validations for the given validation specifications\n",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnosticValidationSets",
        "method": "GET",
        "operationId": "retrievesAllTheValidationSets",
        "summary": "Retrieves all the validation sets",
        "description": "Retrieves all the validation sets and optionally the contained validations",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [],
        "query_parameters": [
          "view"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnosticValidationSets/{id}",
        "method": "GET",
        "operationId": "retrievesValidationDetailsForAValidationSet",
        "summary": "Retrieves validation details for a validation set",
        "description": "Retrieves validation details for the given validation set id\n",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnostics/system/health/count",
        "method": "GET",
        "operationId": "systemHealthCountAPI",
        "summary": "System Health Count API",
        "description": "This API gives the count of the latest system events",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [],
        "query_parameters": [
          "domain",
          "subdomain"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnosticValidationWorkflows/count",
        "method": "GET",
        "operationId": "retrievesTheCountOfValidationWorkflows",
        "summary": "Retrieves the count of validation workflows",
        "description": "Retrieves the count of workflows that have been successfully submitted and are currently available. \n",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "runStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnostics/system/health",
        "method": "GET",
        "operationId": "systemHealthAPI",
        "summary": "System Health API",
        "description": "This API retrieves the latest system events ",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [],
        "query_parameters": [
          "summary",
          "domain",
          "subdomain",
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnostics/system/performance/history",
        "method": "GET",
        "operationId": "systemPerformanceHistoricalAPI",
        "summary": "System Performance Historical API",
        "description": "Retrieves the average values of cluster key performance indicators (KPIs), like CPU utilization, memory utilization or network rates grouped by time intervals within a specified time range. The data will be available from the past 24 hours.",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [],
        "query_parameters": [
          "kpi",
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnosticValidationWorkflows/{id}",
        "method": "DELETE",
        "operationId": "deletesAValidationWorkflow",
        "summary": "Deletes a validation workflow",
        "description": "Deletes the workflow for the given id\n",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnosticValidationWorkflows/{id}",
        "method": "GET",
        "operationId": "retrievesValidationWorkflowDetails",
        "summary": "Retrieves validation workflow details",
        "description": "Retrieves workflow details for a workflow id\n",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnostics/system/performance",
        "method": "GET",
        "operationId": "systemPerformanceAPI",
        "summary": "System Performance API",
        "description": "Retrieves the aggregated metrics (total, average or maximum) of cluster key performance indicators (KPIs), such as CPU utilization, memory utilization or network rates recorded within a specified time period. The data will be available from the past 24 hours.",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [],
        "query_parameters": [
          "kpi",
          "function",
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      }
    ],
    "Licenses": [
      {
        "path": "/dna/intent/api/v1/connectionModeSetting",
        "method": "GET",
        "operationId": "retrievesCSSMConnectionMode",
        "summary": "Retrieves CSSM Connection Mode",
        "description": "Retrieves Cisco Smart Software Manager (CSSM) connection mode setting.",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/connectionModeSetting",
        "method": "PUT",
        "operationId": "updateCSSMConnectionMode",
        "summary": "Update CSSM Connection Mode",
        "description": "Update Cisco Smart Software Manager (CSSM) connection mode for the system.",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/license/lastOperationStatus",
        "method": "GET",
        "operationId": "systemLicensingLastOperationStatus",
        "summary": "System Licensing Last Operation Status",
        "description": "Retrieves the status of the last system licensing operation.",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/usage/smartAccount/{smart_account_id}/virtualAccount/{virtual_account_name}",
        "method": "GET",
        "operationId": "licenseUsageDetails",
        "summary": "License Usage Details",
        "description": "Get count of purchased and in use Cisco DNA and Network licenses.",
        "tags": [
          "Licenses"
        ],
        "parameters": [
          "smart_account_id",
          "virtual_account_name"
        ],
        "query_parameters": [
          "device_type"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/device/summary",
        "method": "GET",
        "operationId": "deviceLicenseSummary",
        "summary": "Device License Summary",
        "description": "Show license summary of device(s).",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [
          "page_number",
          "order",
          "sort_by",
          "dna_level",
          "device_type",
          "limit",
          "registration_status",
          "virtual_account_name",
          "smart_account_id",
          "device_uuid"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/license/status",
        "method": "GET",
        "operationId": "systemLicensingStatus",
        "summary": "System Licensing Status",
        "description": "Fetches registration status, authorization status and entitlements of the system with Cisco Smart Software Manage (CSSM).",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/license/deregister",
        "method": "POST",
        "operationId": "smartLicensingDeregistration",
        "summary": "Smart Licensing Deregistration",
        "description": "Deregisters the system with Cisco Smart Software Manager (CSSM)",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/smartAccount/{smart_account_id}/virtualAccounts",
        "method": "GET",
        "operationId": "virtualAccountDetails",
        "summary": "Virtual Account Details",
        "description": "Get virtual account details of a smart account.",
        "tags": [
          "Licenses"
        ],
        "parameters": [
          "smart_account_id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/device/count",
        "method": "GET",
        "operationId": "deviceCountDetails",
        "summary": "Device Count Details",
        "description": "Get total number of managed device(s).",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [
          "device_type",
          "registration_status",
          "dna_level",
          "virtual_account_name",
          "smart_account_id"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenseSetting",
        "method": "PUT",
        "operationId": "updateLicenseSetting",
        "summary": "Update license setting",
        "description": "Update license setting - Configure default smart account id  and/or virtual account id for auto registration of devices for smart license flow. Virtual account should be part of default smart account. Default smart account id cannot be set to 'null'. Auto registration of devices for smart license flow is applicable only for direct or on-prem SSM connection mode.",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenseSetting",
        "method": "GET",
        "operationId": "retrieveLicenseSetting",
        "summary": "Retrieve license setting",
        "description": "Retrieves license setting - Default smart account id and virtual account id for auto registration of devices for smart license flow. If default smart account is not configured, 'defaultSmartAccountId' is 'null'. Similarly, if auto registration of devices for smart license flow is not enabled, 'autoRegistrationVirtualAccountId' is 'null'. For smart proxy connection mode, 'autoRegistrationVirtualAccountId' is always 'null'.",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/smartAccount/virtualAccount/deregister",
        "method": "PUT",
        "operationId": "deviceDeregistration",
        "summary": "Device Deregistration",
        "description": "Deregister device(s) from CSSM(Cisco Smart Software Manager).",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/smartAccount/virtualAccount/{virtual_account_name}/register",
        "method": "PUT",
        "operationId": "deviceRegistration",
        "summary": "Device Registration",
        "description": "Register device(s) in CSSM(Cisco Smart Software Manager).",
        "tags": [
          "Licenses"
        ],
        "parameters": [
          "virtual_account_name"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/smartAccount/{smart_account_id}/virtualAccount/{virtual_account_name}/device/transfer",
        "method": "POST",
        "operationId": "changeVirtualAccount",
        "summary": "Change Virtual Account",
        "description": "Transfer device(s) from one virtual account to another within same smart account.",
        "tags": [
          "Licenses"
        ],
        "parameters": [
          "smart_account_id",
          "virtual_account_name"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/smartAccounts",
        "method": "GET",
        "operationId": "smartAccountDetails",
        "summary": "Smart Account Details",
        "description": "Retrieve details of all smart accounts.",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/license/renew",
        "method": "POST",
        "operationId": "smartLicensingRenewOperation",
        "summary": "Smart Licensing Renew Operation",
        "description": "Renews license registration and authorization status of the system with Cisco Smart Software Manager (CSSM)",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/license/register",
        "method": "POST",
        "operationId": "systemLicensingRegistration",
        "summary": "System Licensing Registration",
        "description": "Registers the system with Cisco Smart Software Manager (CSSM)",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/device/{device_uuid}/details",
        "method": "GET",
        "operationId": "deviceLicenseDetails",
        "summary": "Device License Details",
        "description": "Get detailed license information of a device.",
        "tags": [
          "Licenses"
        ],
        "parameters": [
          "device_uuid"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/licenses/term/smartAccount/{smart_account_id}/virtualAccount/{virtual_account_name}",
        "method": "GET",
        "operationId": "licenseTermDetails",
        "summary": "License Term Details",
        "description": "Get license term details.",
        "tags": [
          "Licenses"
        ],
        "parameters": [
          "smart_account_id",
          "virtual_account_name"
        ],
        "query_parameters": [
          "device_type"
        ],
        "version": "1.0.0"
      }
    ],
    "Platform": [
      {
        "path": "/dna/intent/api/v1/dnac-release",
        "method": "GET",
        "operationId": "ciscoDNACenterReleaseSummary",
        "summary": "Cisco DNA Center Release Summary",
        "description": "Provides information such as API version, mandatory core packages for installation or upgrade, optional packages, Cisco DNA Center name and version, supported direct updates, and tenant ID. ",
        "tags": [
          "Platform"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/nodes-config",
        "method": "GET",
        "operationId": "ciscoDNACenterNodesConfigurationSummary",
        "summary": "Cisco DNA Center Nodes Configuration Summary",
        "description": "Provides details about the current Cisco DNA Center node configuration, such as API version, node name, NTP server, intracluster link, LACP mode, network static routes, DNS server, subnet mask, host IP, default gateway, and interface information. ",
        "tags": [
          "Platform"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/dnac-packages",
        "method": "GET",
        "operationId": "ciscoDNACenterPackagesSummary",
        "summary": "Cisco DNA Center Packages Summary",
        "description": "Provides information such as name, version of packages installed on the DNA center.",
        "tags": [
          "Platform"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Connectivity": {
    "Wireless": [
      {
        "path": "/dna/intent/api/v1/wireless/accesspoint-configuration",
        "method": "POST",
        "operationId": "configureAccessPointsV1",
        "summary": "Configure Access Points V1",
        "description": "User can configure multiple access points with required options using this intent API.\nThis API does not support configuration of CleanAir or SI for IOS-XE devices with version greater than or equal to 17.9",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apAuthorizationLists/{id}",
        "method": "GET",
        "operationId": "getAPAuthorizationListByID",
        "summary": "Get AP Authorization List by ID",
        "description": "This API allows the user to get an AP Authorization List by AP Authorization List ID that captured in wireless settings design.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apAuthorizationLists/{id}",
        "method": "PUT",
        "operationId": "updateAPAuthorizationList",
        "summary": "Update AP Authorization List",
        "description": "This API allows the user to update an AP Authorization List.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apAuthorizationLists/{id}",
        "method": "DELETE",
        "operationId": "deleteAPAuthorizationList",
        "summary": "Delete AP Authorization List",
        "description": "This API allows the user to delete an AP Authorization List.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/interfaces/{id}",
        "method": "DELETE",
        "operationId": "deleteInterface",
        "summary": "Delete Interface",
        "description": "This API allows the user to delete an interface by ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/interfaces/{id}",
        "method": "PUT",
        "operationId": "updateInterface",
        "summary": "Update Interface",
        "description": "This API allows the user to update an interface by ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/interfaces/{id}",
        "method": "GET",
        "operationId": "getInterfaceByID",
        "summary": "Get Interface by ID",
        "description": "This API allows the user to get an interface by ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/powerProfiles/{id}",
        "method": "DELETE",
        "operationId": "deletePowerProfileByID",
        "summary": "Delete Power Profile by ID",
        "description": "This API allows the user to delete an Power Profile by specifying the Power Profile ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/powerProfiles/{id}",
        "method": "GET",
        "operationId": "getPowerProfileByID",
        "summary": "Get Power Profile by ID",
        "description": "This API allows the user to get a Power Profile by Power Profile ID that captured in wireless settings design",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/powerProfiles/{id}",
        "method": "PUT",
        "operationId": "updatePowerProfileByID",
        "summary": "Update Power Profile by ID",
        "description": "This API allows the user to update a custom power Profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/eventDrivenRRMConfigurations",
        "method": "POST",
        "operationId": "createEventDrivenRRMConfigurationFeatureTemplate",
        "summary": "Create Event Driven RRM Configuration Feature Template",
        "description": "This API allows users to create a Event Driven RRM configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/rfProfiles",
        "method": "GET",
        "operationId": "getRFProfiles",
        "summary": "Get RF Profiles",
        "description": "This API allows the user to get all RF Profiles",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "rfProfileName",
          "enableRadioTypeA",
          "enableRadioTypeB",
          "enableRadioType6GHz"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/rfProfiles",
        "method": "POST",
        "operationId": "createRFProfile",
        "summary": "Create RF Profile",
        "description": "This API allows the user to create a custom RF Profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/ssids",
        "method": "POST",
        "operationId": "createSSID",
        "summary": "Create SSID",
        "description": "This API allows the user to create an SSID (Service Set Identifier) at the Global site",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/ssids",
        "method": "GET",
        "operationId": "getSSIDBySite",
        "summary": "Get SSID by Site",
        "description": "This API allows the user to get all SSIDs (Service Set Identifier) at the given site",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [
          "limit",
          "offset",
          "ssid",
          "wlanType",
          "authType",
          "l3authType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/anchorGroups/{id}",
        "method": "GET",
        "operationId": "getAnchorGroupByID",
        "summary": "Get AnchorGroup by ID",
        "description": "This API allows the user to get an AnchorGroup by AnchorGroup ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/anchorGroups/{id}",
        "method": "PUT",
        "operationId": "updateAnchorGroup",
        "summary": "Update AnchorGroup",
        "description": "This API allows the user to update an AnchorGroup",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/anchorGroups/{id}",
        "method": "DELETE",
        "operationId": "deleteAnchorGroupByID",
        "summary": "Delete AnchorGroup by ID",
        "description": "This API allows the user to delete an AnchorGroup  by specifying the AnchorGroup ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/flexConnectConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateFlexConnectConfigurationFeatureTemplate",
        "summary": "Update Flex Connect Configuration Feature Template",
        "description": "This API allows users to update the details of a specific Flex Connect configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/flexConnectConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteFlexConnectConfigurationFeatureTemplate",
        "summary": "Delete Flex Connect Configuration Feature Template",
        "description": "This API allows users to delete a specific Flex Connect configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/flexConnectConfigurations/{id}",
        "method": "GET",
        "operationId": "getFlexConnectConfigurationFeatureTemplate",
        "summary": "Get Flex Connect Configuration Feature Template",
        "description": "This API allows users to retrieve a specific Flex Connect configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/accesspoint-configuration/count",
        "method": "GET",
        "operationId": "getAccessPointConfigurationCount",
        "summary": "Get Access Point Configuration Count",
        "description": "Get Access Point Configuration Count",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "wlcIpAddress",
          "apMode",
          "apModel",
          "meshRole",
          "provisioned"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/siteTags/{siteTagId}",
        "method": "GET",
        "operationId": "retrieveASpecificSiteTagForAWirelessProfile",
        "summary": "Retrieve a specific Site Tag for a Wireless Profile",
        "description": "This endpoint retrieves the details of a specific `Site Tag` associated with a given `Wireless Profile`. This API requires the `id` of the `Wireless Profile` and the `siteTagId` of the `Site Tag`.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id",
          "siteTagId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/siteTags/{siteTagId}",
        "method": "PUT",
        "operationId": "updateASpecificSiteTagForAWirelessProfile",
        "summary": "Update a specific Site Tag for a Wireless Profile",
        "description": "This endpoint allows updating the details of a specific `Site Tag` associated with a given `Wireless Profile`. The `id` of the `Wireless Profile` and the `siteTagId` of the Site Tag must be provided as path parameters, and the request body should contain the updated `Site Tag` details.  The `siteTagName` cannot be modified through this endpoint.\nNote: When updating a Site Tag (siteTag), if the siteId already has an associated siteTag and the same siteId is included in the update request, the existing siteTag for that siteId will be overridden by the new one. For Flex-enabled Wireless Profiles (i.e., a Wireless Profile with one or more Flex SSIDs), a non-default Flex Profile Name (flexProfileName) will be used. If no custom flexProfileName is provided, the System will automatically generate one and configure it in the controller.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id",
          "siteTagId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/siteTags/{siteTagId}",
        "method": "DELETE",
        "operationId": "deleteASpecificSiteTagFromAWirelessProfile",
        "summary": "Delete a specific Site Tag from a Wireless Profile",
        "description": "This endpoint enables the deletion of a specific `Site Tag` associated with a given `Wireless Profile`. This API requires the `id` of the `Wireless Profile` and the `siteTagId` of the `Site Tag` to be provided as path parameters.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id",
          "siteTagId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/flexConnectNativeVlan",
        "method": "DELETE",
        "operationId": "deleteNativeVlanSettingsBySite",
        "summary": "Delete Native Vlan Settings By Site",
        "description": "This API allows the user to delete a Native VLAN setting at the given site level.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [
          "removeOverrideInHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/flexConnectNativeVlan",
        "method": "PUT",
        "operationId": "updateNativeVlanSettingsBySite",
        "summary": "Update Native Vlan Settings  By Site",
        "description": " This API allows the user to update an existing Native VLAN setting at the given site level. The default value of the native VLAN on the device is 1 when nothing is explicitly set.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/flexConnectNativeVlan",
        "method": "GET",
        "operationId": "getNativeVlanSettingsBySite",
        "summary": "Get Native Vlan Settings By Site",
        "description": "This API allows the user to get all Native VLAN Settings at the given site. The default value of the native VLAN on the device is 1 when nothing is explicitly set.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/ssids/{id}",
        "method": "PUT",
        "operationId": "updateSSID",
        "summary": "Update SSID",
        "description": "This API allows the user to update an SSID (Service Set Identifier) at the given site",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/ssids/{id}",
        "method": "GET",
        "operationId": "getSSIDByID",
        "summary": "Get SSID by ID",
        "description": "This API allows the user to get an SSID (Service Set Identifier) by ID at the given site",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/ssids/{id}",
        "method": "DELETE",
        "operationId": "deleteSSID",
        "summary": "Delete SSID",
        "description": "This API allows the user to delete an SSID (Service Set Identifier) at the global level , if the SSID is not mapped to any Wireless Profile, Or remove override from given site Id .",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId",
          "id"
        ],
        "query_parameters": [
          "removeOverrideInHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/rrmFraConfigurations/{id}",
        "method": "GET",
        "operationId": "getRRMFRAConfigurationFeatureTemplate",
        "summary": "Get RRM FRA Configuration Feature Template",
        "description": "This API allows users to retrieve a specific RRM FRA configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/rrmFraConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateRRMFRAConfigurationFeatureTemplate",
        "summary": "Update RRM FRA Configuration Feature Template",
        "description": "This API allows users to update the details of a specific RRM FRA configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/rrmFraConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteRRMFRAConfigurationFeatureTemplate",
        "summary": "Delete RRM FRA Configuration Feature Template",
        "description": "This API allows users to delete a specific RRM FRA configuration feature template by Id.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessAccessPoints/provision",
        "method": "POST",
        "operationId": "aPProvision",
        "summary": "AP Provision",
        "description": "This API is used to provision Access Points. Prerequisite: Access Point has to be assigned to the site using the API /dna/intent/api/v1/networkDevices/assignToSite/apply.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/flexConnectAaaOverride",
        "method": "GET",
        "operationId": "getAAAOverrideVlanSettingsBySite",
        "summary": "Get AAA Override Vlan Settings By Site",
        "description": "This API allows the user to get all Flex Connect AAA Override VLAN settings at the given site",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/flexConnectAaaOverride",
        "method": "PUT",
        "operationId": "updateAAAOverrideVlanSettingsBySite",
        "summary": "Update AAA Override Vlan Settings By Site",
        "description": "This API allows the user to update an existing AAA Override VLAN setting at the given site level",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/flexConnectAaaOverride",
        "method": "DELETE",
        "operationId": "deleteAAAOverrideVlanSettingsBySite",
        "summary": "Delete AAA Override Vlan Settings By Site",
        "description": " This API allows the user to delete AAA Override VLAN settings at the given site level",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [
          "removeOverrideInHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/dot11beProfiles",
        "method": "GET",
        "operationId": "get802.11beProfiles",
        "summary": "Get 802.11be Profiles",
        "description": "This API allows the user to get 802.11be Profile(s) configured under Wireless Settings",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "profileName",
          "isOfDmaDownLink",
          "isOfDmaUpLink",
          "isMuMimoUpLink",
          "isMuMimoDownLink",
          "isOfDmaMultiRu"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/dot11beProfiles",
        "method": "POST",
        "operationId": "createA802.11beProfile",
        "summary": "Create a 802.11be Profile",
        "description": "This API allows the user to create a 802.11be Profile.Catalyst Center will push this profile to device's \"default-dot11be-profile\u201d.Also please note , 802.11be Profile is supported only on IOS-XE controllers since device version 17.15",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/summary",
        "method": "GET",
        "operationId": "getFeatureTemplateSummary",
        "summary": "Get Feature Template Summary",
        "description": "This API allows users to retrieve the feature template summary.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "type",
          "designName",
          "limit",
          "offset",
          "systemTemplate"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/policyTags/count",
        "method": "GET",
        "operationId": "retrieveTheCountOfPolicyTagsForAWirelessProfile",
        "summary": "Retrieve the count of Policy Tags for a Wireless Profile",
        "description": "This endpoint retrieves the total count of `Policy Tags` associated with a specific `Wireless Profile`.This API requires the `id` of the `Wireless Profile` to be provided as a path parameter.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{networkDeviceId}/primaryManagedApLocations",
        "method": "GET",
        "operationId": "getPrimaryManagedAPLocationsForSpecificWirelessController",
        "summary": "Get Primary Managed AP Locations for specific Wireless Controller",
        "description": "Retrieves all the details of Primary Managed AP locations associated with the specific Wireless Controller.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/systemSettings/apPnPLocation",
        "method": "PUT",
        "operationId": "updateAPPnPLocationSetting",
        "summary": "Update AP PnP Location Setting",
        "description": "Enable or disable the AP PnP Location setting in the system.Once the AP PnP Location Setting is enabled, the Access Point's assigned Site name will be configured as the AP Location during the PnP Claim process. This applies only during the PnP onboarding process and not during any subsequent provisioning (dayN).",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/systemSettings/apPnPLocation",
        "method": "GET",
        "operationId": "getAPPnPLocationSetting",
        "summary": "Get AP PnP Location Setting",
        "description": "Retrieve the current AP PnP Location setting from the system.Once the AP PnP Location Setting is enabled, the Access Point's assigned Site name will be configured as the AP Location during the PnP Claim process. This applies only during the PnP onboarding process and not during any subsequent provisioning (dayN).",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}",
        "method": "DELETE",
        "operationId": "deleteWirelessProfile",
        "summary": "Delete Wireless Profile",
        "description": "This API allows the user to delete Wireless Network Profile by ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}",
        "method": "PUT",
        "operationId": "updateWirelessProfile",
        "summary": "Update Wireless Profile",
        "description": "This API allows the user to update a Wireless Network Profile by ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}",
        "method": "GET",
        "operationId": "getWirelessProfileByID",
        "summary": "Get Wireless Profile by ID",
        "description": "This API allows the user to get a Wireless Network Profile by ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/wirelessMobilityGroups/count",
        "method": "GET",
        "operationId": "getMobilityGroupsCount",
        "summary": "Get MobilityGroups Count",
        "description": "Retrieves count of mobility groups configured",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/rfProfiles/{id}",
        "method": "PUT",
        "operationId": "updateRFProfile",
        "summary": "Update RF Profile",
        "description": "This API allows the user to update a custom RF Profile.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/rfProfiles/{id}",
        "method": "DELETE",
        "operationId": "deleteRFProfile",
        "summary": "Delete RF Profile",
        "description": "This API allows the user to delete a custom RF Profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/rfProfiles/{id}",
        "method": "GET",
        "operationId": "getRFProfileByID",
        "summary": "Get RF Profile by ID",
        "description": "This API allows the user to get a RF Profile by RF Profile ID\n\n",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/anchorGroups",
        "method": "GET",
        "operationId": "getAnchorGroups",
        "summary": "Get AnchorGroups",
        "description": "This API allows the user to get AnchorGroups that captured in wireless settings design. ",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/anchorGroups",
        "method": "POST",
        "operationId": "createAnchorGroup",
        "summary": "Create AnchorGroup",
        "description": "This API allows the user to create an AnchorGroup",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/aaaRadiusAttributesConfigurations/{id}",
        "method": "GET",
        "operationId": "getAAARadiusAttributesConfigurationFeatureTemplate",
        "summary": "Get AAA Radius Attributes Configuration Feature Template",
        "description": "This API allows users to retrieve a specific AAA Radius Attributes configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/aaaRadiusAttributesConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateAAARadiusAttributesConfigurationFeatureTemplate",
        "summary": "Update AAA Radius Attributes Configuration Feature Template",
        "description": "This API allows users to update the details of a specific AAA Radius Attributes configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/aaaRadiusAttributesConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteAAARadiusAttributesConfigurationFeatureTemplate",
        "summary": "Delete AAA Radius Attributes Configuration Feature Template",
        "description": "This API allows users to delete a specific AAA Radius Attributes configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apProfiles",
        "method": "POST",
        "operationId": "createAPProfile",
        "summary": "Create AP Profile",
        "description": "This API allows the user to create a custom AP Profile.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apProfiles",
        "method": "GET",
        "operationId": "getAPProfiles",
        "summary": "Get AP Profiles",
        "description": "This API allows the user to get AP profiles that are captured in wireless settings design.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "apProfileName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{networkDeviceId}/ssidDetails/count",
        "method": "GET",
        "operationId": "getSSIDCountForSpecificWirelessController",
        "summary": "Get SSID Count for specific Wireless Controller",
        "description": "Retrieves the count of SSIDs associated with the specific wireless controller.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "adminStatus",
          "managed"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apProfiles/{id}",
        "method": "PUT",
        "operationId": "updateAPProfileByID",
        "summary": "Update AP Profile by ID",
        "description": "This API allows the user to update a custom AP Profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apProfiles/{id}",
        "method": "DELETE",
        "operationId": "deleteAPProfileByID",
        "summary": "Delete AP Profile by ID",
        "description": " This API allows the user to delete an AP Profile by specifying the AP Profile ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apProfiles/{id}",
        "method": "GET",
        "operationId": "getAPProfileByID",
        "summary": "Get AP Profile by ID",
        "description": "This API allows the user to get a AP Profile by AP Profile ID that captured in wireless settings design",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/policyTags",
        "method": "GET",
        "operationId": "retrieveAllPolicyTagsForAWirelessProfile",
        "summary": "Retrieve all Policy Tags for a Wireless Profile",
        "description": "This endpoint retrieves a list of all `Policy Tags` associated with a specific `Wireless Profile`. This API requires the `id` of the `Wireless Profile` to be provided as a path parameter.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "limit",
          "offset",
          "policyTagName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/interfaces",
        "method": "GET",
        "operationId": "getInterfaces",
        "summary": "Get Interfaces",
        "description": "This API allows the user to get all Interfaces",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "interfaceName",
          "vlanId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/interfaces",
        "method": "POST",
        "operationId": "createInterface",
        "summary": "Create Interface",
        "description": "This API allows the user to create an interface",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/advancedSSIDConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateAdvancedSSIDConfigurationFeatureTemplate",
        "summary": "Update Advanced SSID Configuration Feature Template",
        "description": "This API allows users to update the details of a specific Advanced SSID configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/advancedSSIDConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteAdvancedSSIDConfigurationFeatureTemplate",
        "summary": "Delete Advanced SSID Configuration Feature Template",
        "description": "This API allows users to delete a specific Advanced SSID configuration feature template by Id.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/advancedSSIDConfigurations/{id}",
        "method": "GET",
        "operationId": "getAdvancedSSIDConfigurationFeatureTemplate",
        "summary": "Get Advanced SSID Configuration Feature Template",
        "description": "This API allows users to retrieve a specific Advanced SSID configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessAccessPoints/factoryResetRequestStatus",
        "method": "GET",
        "operationId": "getAccessPoint(s)FactoryResetStatus",
        "summary": "Get Access Point(s) Factory Reset status",
        "description": "This API returns each AP Factory Reset initiation status.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/count",
        "method": "GET",
        "operationId": "getWirelessProfilesCount",
        "summary": "Get Wireless Profiles Count",
        "description": "This API allows the user to get count of all wireless profiles",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/multicastConfigurations",
        "method": "POST",
        "operationId": "createMulticastConfigurationFeatureTemplate",
        "summary": "Create Multicast Configuration Feature Template",
        "description": "This API allows users to create a Multicast configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/policyTags/{policyTagId}",
        "method": "DELETE",
        "operationId": "deleteASpecificPolicyTagFromAWirelessProfile",
        "summary": "Delete a specific Policy Tag from a Wireless Profile",
        "description": "This endpoint allows for the deletion of a specific `Policy Tag` associated with a given `Wireless Profile`. This API requires the `id` of the `Wireless Profile` and the `policyTagId` of the `Policy Tag` to be provided as path parameters.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id",
          "policyTagId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/policyTags/{policyTagId}",
        "method": "GET",
        "operationId": "retrieveASpecificPolicyTagForAWirelessProfile",
        "summary": "Retrieve a specific Policy Tag for a Wireless Profile",
        "description": "This endpoint retrieves the details of a specific `Policy Tag` associated with a given `Wireless Profile`. This API requires the `id` of the `Wireless Profile` and the `policyTagId` of the `Policy Tag`.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id",
          "policyTagId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/policyTags/{policyTagId}",
        "method": "PUT",
        "operationId": "updateASpecificPolicyTagForAWirelessProfile",
        "summary": "Update a specific Policy Tag for a Wireless Profile",
        "description": "This endpoint allows updating the details of a specific `Policy Tag` associated with a given `Wireless Profile`. The `id` of the `Wireless Profile` and the `policyTagId` of the Policy Tag must be provided as path parameters, and the request body should contain the updated details of the `Policy Tag`. The `policyTagName` cannot be modified through this endpoint.\nNote: When updating a Policy Tag, if the same set of AP Zones (apZones) is used for the same site or its parent site, the existing Policy Tag will be overridden by the new one.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id",
          "policyTagId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/dot11axConfigurations",
        "method": "POST",
        "operationId": "createDot11axConfigurationFeatureTemplate",
        "summary": "Create Dot11ax Configuration Feature Template",
        "description": "This API allows users to create a Dot11ax configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apAuthorizationLists/count",
        "method": "GET",
        "operationId": "getAPAuthorizationListCount",
        "summary": "Get AP Authorization List Count",
        "description": "This API allows the user to get count of all AP Authorization lists.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/ssids/count",
        "method": "GET",
        "operationId": "getSSIDCountBySite",
        "summary": "Get SSID Count by Site",
        "description": "This API allows the user to get count of all SSIDs (Service Set Identifier) .",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/anchorGroups/count",
        "method": "GET",
        "operationId": "getCountOfAnchorGroups",
        "summary": "Get count of AnchorGroups",
        "description": "This API allows the user to get count of all AnchorGroups",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/{networkDeviceId}/assignAnchorManagedApLocations",
        "method": "POST",
        "operationId": "assignAnchorManagedAPLocationsForWLC",
        "summary": "Assign Anchor Managed AP Locations For WLC",
        "description": " This API allows user to assign Anchor Managed AP Locations for WLC by device ID. The payload should always be a complete list. The Managed AP Locations included in the payload will be fully processed for both addition and deletion.\n      \n       -  When anchor managed location array present then it will add the anchor managed locations.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/aaaRadiusAttributesConfigurations",
        "method": "POST",
        "operationId": "createAAARadiusAttributesConfigurationFeatureTemplate",
        "summary": "Create AAA Radius Attributes Configuration Feature Template",
        "description": "This API allows users to create a AAA Radius Attributes configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/cleanAirConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteCleanAirConfigurationFeatureTemplate",
        "summary": "Delete Clean Air Configuration Feature Template",
        "description": "This API allows users to delete a specific Clean Air configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/cleanAirConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateCleanAirConfigurationFeatureTemplate",
        "summary": "Update Clean Air Configuration Feature Template",
        "description": "This API allows users to update the details of a specific Clean Air configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/cleanAirConfigurations/{id}",
        "method": "GET",
        "operationId": "getCleanAirConfigurationFeatureTemplate",
        "summary": "Get Clean Air Configuration Feature Template",
        "description": "This API allows users to retrieve a specific Clean Air configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/wirelessSettings/ssids/{id}/update",
        "method": "POST",
        "operationId": "updateOrOverrideSSID",
        "summary": "Update or Override SSID",
        "description": "This API allows to either update SSID at global 'siteId' or override SSID at given non-global 'siteId'",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "siteId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/dot11beStatusConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteDot11beStatusConfigurationFeatureTemplate",
        "summary": "Delete Dot11be Status Configuration Feature Template",
        "description": "This API allows users to delete a specific Dot11be status configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/dot11beStatusConfigurations/{id}",
        "method": "GET",
        "operationId": "getDot11beStatusConfigurationFeatureTemplate",
        "summary": "Get Dot11be Status Configuration Feature Template",
        "description": "This API allows users to retrieve a specific Dot11be status configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/dot11beStatusConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateDot11beStatusConfigurationFeatureTemplate",
        "summary": "Update Dot11be Status Configuration Feature Template",
        "description": "This API allows users to update the details of a specific Dot11be status configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/cleanAirConfigurations",
        "method": "POST",
        "operationId": "createCleanAirConfigurationFeatureTemplate",
        "summary": "Create Clean Air Configuration Feature Template",
        "description": "This API allows users to create a Clean Air configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/meshApNeighbours/count",
        "method": "GET",
        "operationId": "getMeshApNeighboursCount",
        "summary": "Get Mesh Ap Neighbours Count",
        "description": "This API returns the total number of mesh Ap Neighbours available.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/wirelessMobilityGroups",
        "method": "GET",
        "operationId": "getMobilityGroups\t",
        "summary": "Get MobilityGroups\t",
        "description": "Retrieve configured mobility groups if no Network Device Id is provided as a query parameter. If a Network Device Id is given and a mobility group is configured for it, return the configured details; otherwise, return the default values from the device.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/wireless/accesspoint-configuration",
        "method": "POST",
        "operationId": "configureAccessPointsV2",
        "summary": "Configure Access Points V2",
        "description": "User can configure multiple access points with required options using this intent API",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/eventDrivenRRMConfigurations/{id}",
        "method": "GET",
        "operationId": "getEventDrivenRRMConfigurationFeatureTemplate",
        "summary": "Get Event Driven RRM Configuration Feature Template",
        "description": "This API allows users to retrieve a specific Event Driven RRM configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/eventDrivenRRMConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteEventDrivenRRMConfigurationFeatureTemplate",
        "summary": "Delete Event Driven RRM Configuration Feature Template",
        "description": "This API allows users to delete a specific Event Driven RRM configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/eventDrivenRRMConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateEventDrivenRRMConfigurationFeatureTemplate",
        "summary": "Update Event Driven RRM Configuration Feature Template",
        "description": "This API allows users to update the details of a specific Event Driven RRM configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/dot11beStatusConfigurations",
        "method": "POST",
        "operationId": "createDot11beStatusConfigurationFeatureTemplate",
        "summary": "Create Dot11be Status Configuration Feature Template",
        "description": "This API allows users to create a Dot11be status configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/dot11beProfiles/{id}",
        "method": "PUT",
        "operationId": "update802.11beProfile",
        "summary": "Update 802.11be Profile",
        "description": "This API allows the user to update a 802.11be Profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/dot11beProfiles/{id}",
        "method": "DELETE",
        "operationId": "deleteA802.11beProfile",
        "summary": "Delete a 802.11be Profile",
        "description": "This API allows the user to delete a 802.11be Profile,if the 802.11be Profile is not mapped to any Wireless Network Profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/dot11beProfiles/{id}",
        "method": "GET",
        "operationId": "get802.11beProfileByID",
        "summary": "Get 802.11be Profile by ID",
        "description": "This API allows the user to get 802.11be Profile by ID",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/advancedSSIDConfigurations",
        "method": "POST",
        "operationId": "createAdvancedSSIDConfigurationFeatureTemplate",
        "summary": "Create Advanced SSID Configuration Feature Template",
        "description": "This API allows users to create a Advanced SSID configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/policyTags/bulk",
        "method": "POST",
        "operationId": "createMultiplePolicyTagsForAWirelessProfileInBulk",
        "summary": "Create multiple Policy Tags for a Wireless Profile in bulk",
        "description": "This endpoint allows the creation of multiple `Policy Tags` associated with a specific `Wireless Profile` in a single request. The `id` of the Wireless Profile must be provided as a path parameter, and a list of `Policy Tags` should be included in the request body.\nNote: Multiple Policy Tags (policyTag) can be configured for the same siteId only if they have different sets of AP Zones (apZones). If multiple Policy Tags are created with the same apZones for the same site or a parent site, only the last one will be saved, overriding the previous ones.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-reboot/apreboot",
        "method": "POST",
        "operationId": "rebootAccessPoints",
        "summary": "Reboot Access Points",
        "description": "Users can reboot multiple access points up-to 200 at a time using this API",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apAuthorizationLists",
        "method": "POST",
        "operationId": "createAPAuthorizationList",
        "summary": "Create AP Authorization List",
        "description": "This API allows the user to create an AP Authorization List.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apAuthorizationLists",
        "method": "GET",
        "operationId": "getAPAuthorizationLists",
        "summary": "Get AP Authorization Lists",
        "description": "Retrieves the AP Authorization Lists that are created in the Catalyst Centre network Design for wireless. If an AP Authorization List name is given as query parameter, then returns respective AP Authorization List details including Local and/or Remote authorization.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "apAuthorizationListName",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/powerProfiles/count",
        "method": "GET",
        "operationId": "getPowerProfilesCount",
        "summary": "Get Power Profiles Count",
        "description": "This API returns the total number of Power Profiles available.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{networkDeviceId}/ssidDetails",
        "method": "GET",
        "operationId": "getSSIDDetailsForSpecificWirelessController",
        "summary": "Get SSID Details for specific Wireless Controller",
        "description": "Retrieves all details of SSIDs associated with the specific Wireless Controller.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "ssidName",
          "adminStatus",
          "managed",
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/powerProfiles",
        "method": "POST",
        "operationId": "createPowerProfile",
        "summary": "Create Power Profile",
        "description": "This API allows the user to create a custom Power Profile.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/powerProfiles",
        "method": "GET",
        "operationId": "getPowerProfiles",
        "summary": "Get Power Profiles",
        "description": "This API allows the user to get Power Profiles that captured in wireless settings design.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "profileName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/wirelessMobilityGroups/mobilityProvision",
        "method": "POST",
        "operationId": "mobilityProvision",
        "summary": "Mobility Provision",
        "description": "This API is used to provision/deploy wireless mobility into Cisco wireless controllers.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/siteTags/bulk",
        "method": "POST",
        "operationId": "createMultipleSiteTagsForAWirelessProfileInBulk",
        "summary": "Create multiple Site Tags for a Wireless Profile in bulk",
        "description": "This endpoint allows the creation of multiple `Site Tags` associated with a specific `Wireless Profile` in a single request. The `id` of the `Wireless Profile` must be provided as a path parameter, and a list of `Site Tags` should be included in the request body.\nNote: Only one Site Tag (siteTag) can be created per siteId. If multiple siteTags are specified for the same siteId within a request, only the last one will be saved, overriding any previously configured tags. When creating a Site Tag under a Flex-enabled Wireless Profile (i.e., a Wireless Profile with one or more Flex SSIDs), a non-default Flex Profile Name (flexProfileName) will be used. If no custom flexProfileName is defined, the System will automatically generate one and configure it in the controller.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/multicastConfigurations/{id}",
        "method": "GET",
        "operationId": "getMulticastConfigurationFeatureTemplate",
        "summary": "Get Multicast Configuration Feature Template",
        "description": "This API allows users to retrieve a specific Multicast configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/multicastConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateMulticastConfigurationFeatureTemplate",
        "summary": "Update Multicast Configuration Feature Template",
        "description": "This API allows users to update the details of a specific Multicast configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/multicastConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteMulticastConfigurationFeatureTemplate",
        "summary": "Delete Multicast Configuration Feature Template",
        "description": "This API allows users to delete a specific Multicast configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles",
        "method": "GET",
        "operationId": "getWirelessProfiles",
        "summary": "Get Wireless Profiles",
        "description": "This API allows the user to get all Wireless Network Profiles",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "wirelessProfileName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles",
        "method": "POST",
        "operationId": "createWirelessProfile",
        "summary": "Create Wireless Profile",
        "description": "This API allows the user to create a Wireless Network Profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/meshApNeighbours",
        "method": "GET",
        "operationId": "getMeshApNeighbours",
        "summary": "Get Mesh Ap Neighbours",
        "description": "Retrieves all Mesh accesspoint Neighbours details whether child, parent, etc. ",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "wlcIpAddress",
          "apName",
          "ethernetMacAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{networkDeviceId}/anchorManagedApLocations",
        "method": "GET",
        "operationId": "getAnchorManagedAPLocationsForSpecificWirelessController",
        "summary": "Get Anchor Managed AP Locations for specific Wireless Controller",
        "description": "Retrieves all the details of Anchor Managed AP locations associated with the specific Wireless Controller.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/rrmGeneralConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateRRMGeneralConfigurationFeatureTemplate",
        "summary": "Update RRM General Configuration Feature Template",
        "description": "This API allows users to update the details of a specific RRM General configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/rrmGeneralConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteRRMGeneralConfigurationFeatureTemplate",
        "summary": "Delete RRM General Configuration Feature Template",
        "description": "This API allows users to delete a specific RRM General configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/rrmGeneralConfigurations/{id}",
        "method": "GET",
        "operationId": "getRRMGeneralConfigurationFeatureTemplate",
        "summary": "Get RRM General Configuration Feature Template",
        "description": "This API allows users to retrieve a specific RRM General configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/dot11axConfigurations/{id}",
        "method": "GET",
        "operationId": "getDot11axConfigurationFeatureTemplate",
        "summary": "Get Dot11ax Configuration Feature Template",
        "description": "This API allows users to retrieve a specific Dot11ax configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/dot11axConfigurations/{id}",
        "method": "PUT",
        "operationId": "updateDot11axConfigurationFeatureTemplate",
        "summary": "Update Dot11ax Configuration Feature Template",
        "description": "This API allows users to update the details of a specific Dot11ax configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/dot11axConfigurations/{id}",
        "method": "DELETE",
        "operationId": "deleteDot11axConfigurationFeatureTemplate",
        "summary": "Delete Dot11ax Configuration Feature Template",
        "description": "This API allows users to delete a specific Dot11ax configuration feature template by ID.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/dot11beProfiles/count",
        "method": "GET",
        "operationId": "get802.11beProfilesCount",
        "summary": "Get 802.11be Profiles Count",
        "description": "This API allows the user to get count of all 802.11be Profile(s)",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/ssids/overrideAtSites",
        "method": "GET",
        "operationId": "retrieveSitesWithOverriddenSSIDs",
        "summary": "Retrieve sites with overridden SSIDs",
        "description": "Retrieve list of siteId(s) with information of SSID(s) which are overridden\n",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/accesspoint-configuration/summary",
        "method": "GET",
        "operationId": "getAccessPointConfiguration",
        "summary": "Get Access Point Configuration",
        "description": "Users can query access point configuration information for a specific device by using the Ethernet MAC address as a 'key' filter. If no key is specified, all access point details will be retrieved based on the combination of filters provided.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "key",
          "wlcIpAddress",
          "apMode",
          "apModel",
          "meshRole",
          "provisioned",
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{deviceId}/provision",
        "method": "POST",
        "operationId": "wirelessControllerProvision",
        "summary": "Wireless Controller Provision",
        "description": "This API is used to provision wireless controller",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/anchorCapableDevices",
        "method": "GET",
        "operationId": "getAnchorCapableDevices",
        "summary": "Get Anchor capable devices",
        "description": "This API allows the user to get Anchor capable devices",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/apProfiles/count",
        "method": "GET",
        "operationId": "getAPProfilesCount",
        "summary": "Get AP Profiles Count",
        "description": "This API returns the total number of AP Profiles available.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/flexConnectConfigurations",
        "method": "POST",
        "operationId": "createFlexConnectConfigurationFeatureTemplate",
        "summary": "Create Flex Connect Configuration Feature Template",
        "description": "This API allows users to create a Flex Connect configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{deviceId}/assignManagedApLocations",
        "method": "POST",
        "operationId": "assignManagedAPLocationsForWLC",
        "summary": "Assign Managed AP Locations For WLC",
        "description": "This API allows user to assign Managed AP Locations for IOS-XE Wireless supported devices by device ID. The payload should always be a complete list. The Managed AP Locations included in the payload will be fully processed for both addition and deletion.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "deviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{networkDeviceId}/secondaryManagedApLocations",
        "method": "GET",
        "operationId": "getSecondaryManagedAPLocationsForSpecificWirelessController",
        "summary": "Get Secondary Managed AP Locations for specific Wireless Controller",
        "description": "Retrieves all the details of Secondary Managed AP locations associated with the specific Wireless Controller.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessAccessPoints/factoryResetRequest/provision",
        "method": "POST",
        "operationId": "factoryResetAccessPoint(s)",
        "summary": "Factory Reset Access Point(s)",
        "description": "This API is used to factory reset Access Points. It is supported for maximum 100 Access Points per request. Factory reset clears all configurations from the Access Points. After factory reset the Access Point may become unreachable from the currently associated Wireless Controller and may or may not join back the same controller. ",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/siteTags",
        "method": "GET",
        "operationId": "retrieveAllSiteTagsForAWirelessProfile",
        "summary": "Retrieve all Site Tags for a Wireless Profile",
        "description": "This endpoint retrieves a list of all `Site Tags` associated with a specific `Wireless Profile`. This API requires the `id` of the `Wireless Profile` to be provided as a path parameter.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "limit",
          "offset",
          "siteTagName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-reboot/apreboot/status",
        "method": "GET",
        "operationId": "getAccessPointRebootTaskResult",
        "summary": "Get Access Point Reboot task result",
        "description": "Users can query the access point reboot status using this intent API",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "parentTaskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{networkDeviceId}/apAuthorizationLists",
        "method": "GET",
        "operationId": "getAPAuthorizationListByNetworkDeviceId",
        "summary": "Get AP Authorization List by network device Id",
        "description": "This API allows the user to get an AP Authorization List details configured for the given provisioned network device Id. Obtain the network device ID value by using the API GET call '/dna/intent/api/v1/network-device/ip-address/${ipAddress}'.    ",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessProfiles/{id}/siteTags/count",
        "method": "GET",
        "operationId": "retrieveTheCountOfSiteTagsForAWirelessProfile",
        "summary": "Retrieve the count of Site Tags for a Wireless Profile",
        "description": "This endpoint retrieves the total count of `Site Tags` associated with a specific `Wireless Profile`.This API requires the `id` of the `Wireless Profile` to be provided as a path parameter.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/wirelessMobilityGroups/mobilityReset",
        "method": "POST",
        "operationId": "mobilityReset",
        "summary": "Mobility Reset",
        "description": "This API is used to reset wireless mobility which in turn sets mobility group name as 'default'.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/rrmGeneralConfigurations",
        "method": "POST",
        "operationId": "createRRMGeneralConfigurationFeatureTemplate",
        "summary": "Create RRM General Configuration Feature Template",
        "description": "This API allows users to create a RRM General configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessControllers/{networkDeviceId}/managedApLocations/count",
        "method": "GET",
        "operationId": "getManagedAPLocationsCountForSpecificWirelessController",
        "summary": "Get Managed AP Locations Count for specific Wireless Controller",
        "description": "Retrieves the count of Managed AP locations, including Primary Managed AP Locations, Secondary Managed AP Locations, and Anchor Managed AP Locations, associated with the specific Wireless Controller.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/featureTemplates/wireless/rrmFraConfigurations",
        "method": "POST",
        "operationId": "createRRMFRAConfigurationFeatureTemplate",
        "summary": "Create RRM FRA Configuration Feature Template",
        "description": "This API allows users to create a RRM FRA configuration feature template.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wirelessSettings/rfProfiles/count",
        "method": "GET",
        "operationId": "getRFProfilesCount",
        "summary": "Get RF Profiles Count",
        "description": "This API allows the user to get count of all RF profiles",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/accesspoint-configuration/details/{task_id}",
        "method": "GET",
        "operationId": "getAccessPointConfigurationTaskResult",
        "summary": "Get Access Point Configuration task result",
        "description": "Users can query the access point configuration result using this intent API",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "task_id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/intent/api/v1/wirelessSettings/interfaces/count",
        "method": "GET",
        "operationId": "getInterfacesCount",
        "summary": "Get Interfaces Count",
        "description": "This API allows the user to get count of all interfaces.",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/psk-override",
        "method": "POST",
        "operationId": "pSKOverride",
        "summary": "PSK override",
        "description": "Update/Override passphrase of SSID",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/ssid",
        "method": "POST",
        "operationId": "createAndProvisionSSID",
        "summary": "Create and Provision SSID",
        "description": "Creates SSID, updates the SSID to the corresponding site profiles and provision it to the devices matching the given sites",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/profile",
        "method": "POST",
        "operationId": "createWirelessProfile-2",
        "summary": "Create Wireless Profile",
        "description": "Creates Wireless Network Profile on Cisco DNA Center and associates sites and SSIDs to it.\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/profile",
        "method": "PUT",
        "operationId": "updateWirelessProfile-2",
        "summary": "Update Wireless Profile",
        "description": "Updates the wireless Network Profile with updated details provided. All sites to be present in the network profile should be provided. ",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/profile",
        "method": "GET",
        "operationId": "getWirelessProfile",
        "summary": "Get Wireless Profile",
        "description": "Gets either one or all the wireless network profiles if no name is provided for network-profile.\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "profileName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/rf-profile/{rfProfileName}",
        "method": "DELETE",
        "operationId": "deleteRFProfiles",
        "summary": "Delete RF profiles",
        "description": "Delete RF profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "rfProfileName"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/enterprise-ssid",
        "method": "POST",
        "operationId": "createEnterpriseSSID",
        "summary": "Create Enterprise SSID",
        "description": "Creates enterprise SSID\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/enterprise-ssid",
        "method": "PUT",
        "operationId": "updateEnterpriseSSID",
        "summary": "Update Enterprise SSID",
        "description": "Update enterprise SSID\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/enterprise-ssid",
        "method": "GET",
        "operationId": "getEnterpriseSSID",
        "summary": "Get Enterprise SSID",
        "description": "Get Enterprise SSID",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "ssidName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/rf-profile",
        "method": "GET",
        "operationId": "retrieveRFProfiles",
        "summary": "Retrieve RF profiles",
        "description": "Retrieve all RF profiles",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "rf-profile-name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/rf-profile",
        "method": "POST",
        "operationId": "createOrUpdateRFProfile",
        "summary": "Create or Update RF profile",
        "description": "Create or Update RF profile",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/AssuranceGetSensorTestResults",
        "method": "GET",
        "operationId": "sensorTestResults",
        "summary": "Sensor Test Results",
        "description": "Intent API to get SENSOR test result summary",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "startTime",
          "endTime",
          "testFailureBy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/provision",
        "method": "POST",
        "operationId": "provision",
        "summary": "Provision",
        "description": "Provision wireless device",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/provision",
        "method": "PUT",
        "operationId": "provisionUpdate",
        "summary": "Provision update",
        "description": "Updates wireless provisioning",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/ssid/{ssidName}/{managedAPLocations}",
        "method": "DELETE",
        "operationId": "deleteSSIDAndProvisionItToDevices",
        "summary": "Delete SSID and provision it to devices",
        "description": "Removes SSID or WLAN from the network profile, reprovision the device(s) and deletes the SSID or WLAN from DNA Center\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "ssidName",
          "managedAPLocations"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless-profile/{wirelessProfileName}",
        "method": "DELETE",
        "operationId": "deleteWirelessProfile-2",
        "summary": "Delete Wireless Profile",
        "description": "Delete the Wireless Profile whose name is provided.",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "wirelessProfileName"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/ap-provision",
        "method": "POST",
        "operationId": "aPProvision-2",
        "summary": "AP Provision",
        "description": "Access Point Provision and ReProvision\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/dynamic-interface",
        "method": "DELETE",
        "operationId": "deleteDynamicInterface",
        "summary": "Delete dynamic interface",
        "description": "Delete a dynamic interface\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "interfaceName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/dynamic-interface",
        "method": "GET",
        "operationId": "getDynamicInterface",
        "summary": "Get dynamic interface",
        "description": "Get one or all dynamic interface(s)",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "interface-name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wireless/dynamic-interface",
        "method": "POST",
        "operationId": "createUpdateDynamicInterface",
        "summary": "Create Update Dynamic interface",
        "description": "API to create or update an dynamic interface\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/enterprise-ssid/{ssidName}",
        "method": "DELETE",
        "operationId": "deleteEnterpriseSSID",
        "summary": "Delete Enterprise SSID",
        "description": "Deletes given enterprise SSID\t",
        "tags": [
          "Wireless"
        ],
        "parameters": [
          "ssidName"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "SDA": [
      {
        "path": "/dna/intent/api/v1/sda/multicast/virtualNetworks",
        "method": "POST",
        "operationId": "addMulticastVirtualNetworks",
        "summary": "Add multicast virtual networks",
        "description": "Adds multicast for virtual networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/multicast/virtualNetworks",
        "method": "GET",
        "operationId": "getMulticastVirtualNetworks",
        "summary": "Get multicast virtual networks",
        "description": "Returns a list of multicast configurations for virtual networks that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "virtualNetworkName",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/multicast/virtualNetworks",
        "method": "PUT",
        "operationId": "updateMulticastVirtualNetworks",
        "summary": "Update multicast virtual networks",
        "description": "Updates multicast configurations for virtual networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer2Handoffs/count",
        "method": "GET",
        "operationId": "getFabricDevicesLayer2HandoffsCount",
        "summary": "Get fabric devices layer 2 handoffs count",
        "description": "Returns the count of layer 2 handoffs of fabric devices that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertion/fabricSitesReadiness",
        "method": "GET",
        "operationId": "sdaFabricSitesReadiness",
        "summary": "Sda Fabric Sites Readiness",
        "description": "Gets a list of all SDA fabric sites along with their readiness status for Security Service Insertion (SSI) deployment.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "order",
          "sortBy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/multicast/virtualNetworks/{id}",
        "method": "DELETE",
        "operationId": "deleteMulticastVirtualNetworkById",
        "summary": "Delete multicast virtual network by id",
        "description": "Deletes a multicast configuration for a virtual network based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricSites/count",
        "method": "GET",
        "operationId": "getFabricSiteCount",
        "summary": "Get fabric site count",
        "description": "Returns the count of fabric sites that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/anycastGateways",
        "method": "PUT",
        "operationId": "updateAnycastGateways",
        "summary": "Update anycast gateways",
        "description": "Updates anycast gateways based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/anycastGateways",
        "method": "GET",
        "operationId": "getAnycastGateways",
        "summary": "Get anycast gateways",
        "description": "Returns a list of anycast gateways that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "fabricId",
          "virtualNetworkName",
          "ipPoolName",
          "vlanName",
          "vlanId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/anycastGateways",
        "method": "POST",
        "operationId": "addAnycastGateways",
        "summary": "Add anycast gateways",
        "description": "Adds anycast gateways based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/extranetPolicies",
        "method": "POST",
        "operationId": "addExtranetPolicy",
        "summary": "Add extranet policy",
        "description": "Adds an extranet policy based on user input.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/extranetPolicies",
        "method": "GET",
        "operationId": "getExtranetPolicies",
        "summary": "Get extranet policies",
        "description": "Returns a list of extranet policies that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "extranetPolicyName",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/extranetPolicies",
        "method": "PUT",
        "operationId": "updateExtranetPolicy",
        "summary": "Update extranet policy",
        "description": "Updates an extranet policy based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/extranetPolicies",
        "method": "DELETE",
        "operationId": "deleteExtranetPolicies",
        "summary": "Delete extranet policies",
        "description": "Deletes extranet policies based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "extranetPolicyName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricZones/count",
        "method": "GET",
        "operationId": "getFabricZoneCount",
        "summary": "Get fabric zone count",
        "description": "Returns the count of fabric zones that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertionSummaries",
        "method": "GET",
        "operationId": "securityServiceInsertionSummary",
        "summary": "Security Service Insertion Summary",
        "description": "Retrieves a summary of all Security Service Insertions (SSIs) sorted by fabricSiteName.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "order",
          "limit",
          "offset",
          "fabricSiteName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer2VirtualNetworks",
        "method": "PUT",
        "operationId": "updateLayer2VirtualNetworks",
        "summary": "Update layer 2 virtual networks",
        "description": "Updates layer 2 virtual networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer2VirtualNetworks",
        "method": "GET",
        "operationId": "getLayer2VirtualNetworks",
        "summary": "Get layer 2 virtual networks",
        "description": "Returns a list of layer 2 virtual networks that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "fabricId",
          "vlanName",
          "vlanId",
          "trafficType",
          "associatedLayer3VirtualNetworkName",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer2VirtualNetworks",
        "method": "DELETE",
        "operationId": "deleteLayer2VirtualNetworks",
        "summary": "Delete layer 2 virtual networks",
        "description": "Deletes layer 2 virtual networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "vlanName",
          "vlanId",
          "trafficType",
          "associatedLayer3VirtualNetworkName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer2VirtualNetworks",
        "method": "POST",
        "operationId": "addLayer2VirtualNetworks",
        "summary": "Add layer 2 virtual networks",
        "description": "Adds layer 2 virtual networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/transitNetworkHealthSummaries/{id}/trendAnalytics",
        "method": "GET",
        "operationId": "theTrendAnalyticsDataForATransitNetworkInTheSpecifiedTimeRange",
        "summary": "The Trend analytics data for a transit network in the specified time range",
        "description": "Get health time series for a specific Transit Network by providing the unique Transit Network id in the url path.\nThe data will be grouped based on the specified trend time interval. If startTime and endTime are not provided, the API defaults to the last 24 hours.\n\nBy default:\n- the number of records returned will be 500.\n- the records will be sorted in time ascending (`asc`) order\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-transitNetworkHealthSummaries-1.0.1-resolved.yaml\n",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "trendInterval",
          "limit",
          "offset",
          "order",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/sdaTransits",
        "method": "GET",
        "operationId": "getFabricDevicesLayer3HandoffsWithSdaTransit",
        "summary": "Get fabric devices layer 3 handoffs with sda transit",
        "description": "Returns a list of layer 3 handoffs with sda transit of fabric devices that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/sdaTransits",
        "method": "POST",
        "operationId": "addFabricDevicesLayer3HandoffsWithSdaTransit",
        "summary": "Add fabric devices layer 3 handoffs with sda transit",
        "description": "Adds layer 3 handoffs with sda transit in fabric devices based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/sdaTransits",
        "method": "DELETE",
        "operationId": "deleteFabricDeviceLayer3HandoffsWithSdaTransit",
        "summary": "Delete fabric device layer 3 handoffs with sda transit",
        "description": "Deletes layer 3 handoffs with sda transit of a fabric device based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/sdaTransits",
        "method": "PUT",
        "operationId": "updateFabricDevicesLayer3HandoffsWithSdaTransit",
        "summary": "Update fabric devices layer 3 handoffs with sda transit",
        "description": "Updates layer 3 handoffs with sda transit of fabric devices based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/ipTransits",
        "method": "POST",
        "operationId": "addFabricDevicesLayer3HandoffsWithIpTransit",
        "summary": "Add fabric devices layer 3 handoffs with ip transit",
        "description": "Adds layer 3 handoffs with ip transit in fabric devices based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/ipTransits",
        "method": "DELETE",
        "operationId": "deleteFabricDeviceLayer3HandoffsWithIpTransit",
        "summary": "Delete fabric device layer 3 handoffs with ip transit",
        "description": "Deletes layer 3 handoffs with ip transit of a fabric device based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/ipTransits",
        "method": "GET",
        "operationId": "getFabricDevicesLayer3HandoffsWithIpTransit",
        "summary": "Get fabric devices layer 3 handoffs with ip transit",
        "description": "Returns a list of layer 3 handoffs with ip transit of fabric devices that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/ipTransits",
        "method": "PUT",
        "operationId": "updateFabricDevicesLayer3HandoffsWithIpTransit",
        "summary": "Update fabric devices layer 3 handoffs with ip transit",
        "description": "Updates layer 3 handoffs with ip transit of fabric devices based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/fabricSiteHealthSummaries",
        "method": "GET",
        "operationId": "readListOfFabricSitesWithTheirHealthSummary",
        "summary": "Read list of Fabric Sites with their health summary",
        "description": "Get a paginated list of Fabric sites Networks with health summary.\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-fabricSiteHealthSummaries-1.0.1-resolved.yaml      \n\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "id",
          "attribute",
          "view",
          "siteHierarchy",
          "siteHierarchyId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/transitNetworkHealthSummaries/{id}",
        "method": "GET",
        "operationId": "readTransitNetworkWithItsHealthSummaryFromId",
        "summary": "Read transit network with its health summary from id",
        "description": "Get health summary for a specific transit Network by providing the unique transit networks id in the url path.\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-transitNetworkHealthSummaries-1.0.1-resolved.yaml",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "endTime",
          "startTime",
          "attribute",
          "view"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer3VirtualNetworks",
        "method": "GET",
        "operationId": "getLayer3VirtualNetworks",
        "summary": "Get layer 3 virtual networks",
        "description": "Returns a list of layer 3 virtual networks that match the provided query parameters.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "virtualNetworkName",
          "fabricId",
          "anchoredSiteId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer3VirtualNetworks",
        "method": "DELETE",
        "operationId": "deleteLayer3VirtualNetworks",
        "summary": "Delete layer 3 virtual networks",
        "description": "Deletes layer 3 virtual networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "virtualNetworkName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer3VirtualNetworks",
        "method": "POST",
        "operationId": "addLayer3VirtualNetworks",
        "summary": "Add layer 3 virtual networks",
        "description": "Adds layer 3 virtual networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer3VirtualNetworks",
        "method": "PUT",
        "operationId": "updateLayer3VirtualNetworks",
        "summary": "Update layer 3 virtual networks",
        "description": "Updates layer 3 virtual networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portChannels",
        "method": "POST",
        "operationId": "addPortChannels",
        "summary": "Add port channels",
        "description": "Adds port channels based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portChannels",
        "method": "GET",
        "operationId": "getPortChannels-2",
        "summary": "Get port channels",
        "description": "Returns a list of port channels that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "portChannelName",
          "connectedDeviceType",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portChannels",
        "method": "PUT",
        "operationId": "updatePortChannels",
        "summary": "Update port channels",
        "description": "Updates port channels based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portChannels",
        "method": "DELETE",
        "operationId": "deletePortChannels",
        "summary": "Delete port channels",
        "description": "Deletes port channels based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "portChannelName",
          "portChannelIds",
          "connectedDeviceType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/extranetPolicies/count",
        "method": "GET",
        "operationId": "getExtranetPolicyCount",
        "summary": "Get extranet policy count",
        "description": "Returns the count of extranet policies that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/virtualNetworkHealthSummaries/{id}",
        "method": "GET",
        "operationId": "readVirtualNetworkWithItsHealthSummaryFromId",
        "summary": "Read virtual network with its health summary from id",
        "description": "Get health summary for a specific Virtual Network by providing the unique virtual networks id in the url path. L2 Virtual Networks are only included in health reporting for EVPN protocol deployments. The special Layer 3 VN called \u2018INFRA_VN\u2019 is also not included for user access through Assurance virtualNetworkHealthSummaries APIS. Please find INFRA_VN related health metrics under /data/api/v1/fabricSiteHealthSummaries (Ex: attributes \u2018pubsubInfraVnGoodHealthPercentage\u2019 and \u2018bgpPeerInfraVnScoreGoodHealthPercentage\u2019).\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-virtualNetworkHealthSummaries-1.0.1-resolved.yaml\n\n",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "endTime",
          "startTime",
          "attribute",
          "view"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertion/systemReadiness",
        "method": "GET",
        "operationId": "securityServiceInsertionReadiness",
        "summary": "Security Service Insertion Readiness",
        "description": "Gets readiness information for Security Service Insertion, including integration status, security group details, and access control information.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portAssignments/count",
        "method": "GET",
        "operationId": "getPortAssignmentCount",
        "summary": "Get port assignment count",
        "description": "Returns the count of port assignments that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "interfaceName",
          "dataVlanName",
          "voiceVlanName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/pendingFabricEvents",
        "method": "GET",
        "operationId": "getPendingFabricEvents",
        "summary": "Get pending fabric events",
        "description": "Returns a list of pending fabric events that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/extranetPolicies/{id}",
        "method": "DELETE",
        "operationId": "deleteExtranetPolicyById",
        "summary": "Delete extranet policy by id",
        "description": "Deletes an extranet policy based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/transitNetworkHealthSummaries",
        "method": "GET",
        "operationId": "readListOfTransitNetworksWithTheirHealthSummary",
        "summary": "Read list of Transit Networks with their health summary",
        "description": "Get a paginated list of Transit Networks with health summary.\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-transitNetworkHealthSummaries-1.0.1-resolved.yaml\n\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "id",
          "attribute",
          "view"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/anycastGateways/{id}",
        "method": "DELETE",
        "operationId": "deleteAnycastGatewayById",
        "summary": "Delete anycast gateway by id",
        "description": "Deletes an anycast gateway based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/provisionDevices",
        "method": "DELETE",
        "operationId": "deleteProvisionedDevices",
        "summary": "Delete provisioned devices",
        "description": "Delete provisioned devices based on query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "networkDeviceId",
          "siteId",
          "cleanUpConfig"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/provisionDevices",
        "method": "PUT",
        "operationId": "re-provisionDevices",
        "summary": "Re-provision devices",
        "description": "Re-provisions network devices to the site based on the user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/provisionDevices",
        "method": "POST",
        "operationId": "provisionDevices",
        "summary": "Provision devices",
        "description": "Provisions network devices to respective Sites based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/provisionDevices",
        "method": "GET",
        "operationId": "getProvisionedDevices",
        "summary": "Get provisioned devices",
        "description": "Returns the list of provisioned devices based on query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "networkDeviceId",
          "siteId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer3VirtualNetworks/{id}",
        "method": "DELETE",
        "operationId": "deleteLayer3VirtualNetworkById",
        "summary": "Delete layer 3 virtual network by id",
        "description": "Deletes a layer 3 virtual network based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertions/{id}",
        "method": "DELETE",
        "operationId": "deleteSecurityServiceInsertion",
        "summary": "Delete Security Service Insertion",
        "description": "Removes the Security Service Insertion (SSI) configuration from the fabric site where it was created.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertions/{id}",
        "method": "PUT",
        "operationId": "updateTheSecurityServiceInsertion.",
        "summary": "Update the Security Service Insertion.",
        "description": "This endpoint updates the Security Service Insertion (SSI). \nIt allows modifications to the associated Virtual Networks (VNs), border devices, and firewall ips.\n\n\nNote that `siteId` cannot be modified.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertions/{id}",
        "method": "GET",
        "operationId": "securityServiceInsertionById.",
        "summary": "Security Service Insertion by Id.",
        "description": "Retrieves the details of a specific Security Service Insertion (SSI) by its ID.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer2Handoffs/{id}",
        "method": "DELETE",
        "operationId": "deleteFabricDeviceLayer2HandoffById",
        "summary": "Delete fabric device layer 2 handoff by id",
        "description": "Deletes a layer 2 handoff of a fabric device based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portChannels/{id}",
        "method": "DELETE",
        "operationId": "deletePortChannelById",
        "summary": "Delete port channel by id",
        "description": "Deletes a port channel based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/transitNetworkHealthSummaries/count",
        "method": "GET",
        "operationId": "readTransitNetworksCount",
        "summary": "Read Transit Networks count",
        "description": "Get a count of transit networks. Use available query parameters to get the count of a subset of transit networks.\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-transitNetworkHealthSummaries-1.0.1-resolved.yaml\n\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "id"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer2Handoffs",
        "method": "POST",
        "operationId": "addFabricDevicesLayer2Handoffs",
        "summary": "Add fabric devices layer 2 handoffs",
        "description": "Adds layer 2 handoffs in fabric devices based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer2Handoffs",
        "method": "DELETE",
        "operationId": "deleteFabricDeviceLayer2Handoffs",
        "summary": "Delete fabric device layer 2 handoffs",
        "description": "Deletes layer 2 handoffs of a fabric device based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer2Handoffs",
        "method": "GET",
        "operationId": "getFabricDevicesLayer2Handoffs",
        "summary": "Get fabric devices layer 2 handoffs",
        "description": "Returns a list of layer 2 handoffs of fabric devices that match the provided query parameters.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer2VirtualNetworks/count",
        "method": "GET",
        "operationId": "getLayer2VirtualNetworkCount",
        "summary": "Get layer 2 virtual network count",
        "description": "Returns the count of layer 2 virtual networks that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "vlanName",
          "vlanId",
          "trafficType",
          "associatedLayer3VirtualNetworkName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices",
        "method": "POST",
        "operationId": "addFabricDevices",
        "summary": "Add fabric devices",
        "description": "Adds fabric devices based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices",
        "method": "DELETE",
        "operationId": "deleteFabricDevices",
        "summary": "Delete fabric devices",
        "description": "Deletes fabric devices based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "deviceRoles"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices",
        "method": "PUT",
        "operationId": "updateFabricDevices",
        "summary": "Update fabric devices",
        "description": "Updates fabric devices based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices",
        "method": "GET",
        "operationId": "getFabricDevices",
        "summary": "Get fabric devices",
        "description": "Returns a list of fabric devices that match the provided query parameters.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "deviceRoles",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/transitNetworks",
        "method": "PUT",
        "operationId": "updateTransitNetworks",
        "summary": "Update transit networks",
        "description": "Updates transit networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/transitNetworks",
        "method": "POST",
        "operationId": "addTransitNetworks",
        "summary": "Add transit networks",
        "description": "Adds transit networks based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/transitNetworks",
        "method": "GET",
        "operationId": "getTransitNetworks",
        "summary": "Get transit networks",
        "description": "Returns a list of transit networks that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "name",
          "type",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/{id}",
        "method": "DELETE",
        "operationId": "deleteFabricDeviceById",
        "summary": "Delete fabric device by id",
        "description": "Deletes a fabric device based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricZones",
        "method": "POST",
        "operationId": "addFabricZone",
        "summary": "Add fabric zone",
        "description": "Adds a fabric zone based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricZones",
        "method": "GET",
        "operationId": "getFabricZones",
        "summary": "Get fabric zones",
        "description": "Returns a list of fabric zones that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "siteId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricZones",
        "method": "PUT",
        "operationId": "updateFabricZone",
        "summary": "Update fabric zone",
        "description": "Updates a fabric zone based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/fabricSiteHealthSummaries/{id}/trendAnalytics",
        "method": "GET",
        "operationId": "theTrendAnalyticsDataForAFabricSiteInTheSpecifiedTimeRange",
        "summary": "The Trend analytics data for a fabric site in the specified time range",
        "description": "Get health time series for a specific Fabric Site by providing the unique Fabric site id in the url path.\nThe data will be grouped based on the specified trend time interval. If startTime and endTime are not provided, the API defaults to the last 24 hours.\n\nBy default:\n- the number of records returned will be 500.\n- the records will be sorted in time ascending (`asc`) order\n\nex: id:93a25378-7740-4e20-8d90-0060ad9a1be0\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-fabricSiteHealthSummaries-1.0.1-resolved.yaml",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "trendInterval",
          "limit",
          "offset",
          "order",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/multicast/virtualNetworks/count",
        "method": "GET",
        "operationId": "getMulticastVirtualNetworkCount",
        "summary": "Get multicast virtual network count",
        "description": "Returns the count of multicast configurations associated to virtual networks that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/authenticationProfiles",
        "method": "PUT",
        "operationId": "updateAuthenticationProfile",
        "summary": "Update authentication profile",
        "description": "Updates an authentication profile based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/authenticationProfiles",
        "method": "GET",
        "operationId": "getAuthenticationProfiles",
        "summary": "Get authentication profiles",
        "description": "Returns a list of authentication profiles that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "authenticationProfileName",
          "isGlobalAuthenticationProfile",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricZones/{id}",
        "method": "DELETE",
        "operationId": "deleteFabricZoneById",
        "summary": "Delete fabric zone by id",
        "description": "Deletes a fabric zone based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertion/fabricSitesReadiness/{id}",
        "method": "GET",
        "operationId": "readinessStatusForAFabricSite.",
        "summary": "Readiness status for a fabric site.",
        "description": "Gets a list of SDA virtual networks for the specified fabric site, including their individual readiness status for Security Service Insertion (SSI) deployment. The result is sorted by virtualNetworkName.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/pendingFabricEvents/apply",
        "method": "POST",
        "operationId": "applyPendingFabricEvents",
        "summary": "Apply pending fabric events",
        "description": "Applies pending fabric events based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertionSummaries/count",
        "method": "GET",
        "operationId": "countOfSecurityServiceInsertionSummaries.",
        "summary": "Count of Security Service Insertion summaries.",
        "description": "Retrieves the total count of Security Service Insertion (SSI) summaries.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portChannels/count",
        "method": "GET",
        "operationId": "getPortChannelCount",
        "summary": "Get port channel count",
        "description": "Returns the count of port channels that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "portChannelName",
          "connectedDeviceType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricSites",
        "method": "POST",
        "operationId": "addFabricSite",
        "summary": "Add fabric site",
        "description": "Adds a fabric site based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricSites",
        "method": "PUT",
        "operationId": "updateFabricSite",
        "summary": "Update fabric site",
        "description": "Updates a fabric site based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricSites",
        "method": "GET",
        "operationId": "getFabricSites",
        "summary": "Get fabric sites",
        "description": "Returns a list of fabric sites that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "siteId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer3VirtualNetworks/count",
        "method": "GET",
        "operationId": "getLayer3VirtualNetworksCount",
        "summary": "Get layer 3 virtual networks count",
        "description": "Returns the count of layer 3 virtual networks that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "anchoredSiteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/count",
        "method": "GET",
        "operationId": "getFabricDevicesCount",
        "summary": "Get fabric devices count",
        "description": "Returns the count of fabric devices that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "deviceRoles"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/provisionDevices/{id}",
        "method": "DELETE",
        "operationId": "deleteProvisionedDeviceById",
        "summary": "Delete provisioned device by Id",
        "description": "Deletes provisioned device based on Id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "cleanUpConfig"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/transitNetworks/{id}",
        "method": "DELETE",
        "operationId": "deleteTransitNetworkById",
        "summary": "Delete transit network by id",
        "description": "Deletes a transit network based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/transitNetworks/count",
        "method": "GET",
        "operationId": "getTransitNetworksCount",
        "summary": "Get transit networks count",
        "description": "Returns the count of transit networks that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "type"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/virtualNetworkHealthSummaries",
        "method": "GET",
        "operationId": "readListOfVirtualNetworksWithTheirHealthSummary",
        "summary": "Read list of Virtual Networks with their health summary",
        "description": "Get a paginated list of Virtual Networks with health summary. Layer 2 Virtual Networks are only included in health reporting for EVPN protocol deployments. The special Layer 3 VN called \u2018INFRA_VN\u2019 is also not included for user access through Assurance virtualNetworkHealthSummaries APIS. Please find INFRA_VN related health metrics under /data/api/v1/fabricSiteHealthSummaries (Ex: attributes \u2018pubsubInfraVnGoodHealthPercentage\u2019 and \u2018bgpPeerInfraVnScoreGoodHealthPercentage\u2019).\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-virtualNetworkHealthSummaries-1.0.1-resolved.yaml\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "limit",
          "offset",
          "sortBy",
          "order",
          "id",
          "vnLayer",
          "attribute",
          "view",
          "siteHierarchy",
          "SiteHierarchyId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertions/count",
        "method": "GET",
        "operationId": "countOfSecurityServiceInsertions.",
        "summary": "Count of Security Service Insertions.",
        "description": "Retrieves the count of Security Service Insertions.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/multicast",
        "method": "PUT",
        "operationId": "updateMulticast",
        "summary": "Update multicast",
        "description": "Updates a multicast configuration at a fabric level based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/multicast",
        "method": "GET",
        "operationId": "getMulticast",
        "summary": "Get multicast",
        "description": "Returns a list of multicast configurations at a fabric site level that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/virtualNetworkHealthSummaries/count",
        "method": "GET",
        "operationId": "readVirtualNetworksCount",
        "summary": "Read Virtual Networks count",
        "description": "Get a count of virtual networks. Use available query parameters to get the count of a subset of virtual networks. Layer 2 Virtual Networks are only included for EVPN protocol deployments. The special Layer 3 VN called \u2018INFRA_VN\u2019 is also not included.\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-virtualNetworkHealthSummaries-1.0.1-resolved.yaml\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "id",
          "vnLayer",
          "siteHierarchy",
          "siteHierarchyId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricSites/{id}",
        "method": "DELETE",
        "operationId": "deleteFabricSiteById",
        "summary": "Delete fabric site by id",
        "description": "Deletes a fabric site based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/layer2VirtualNetworks/{id}",
        "method": "DELETE",
        "operationId": "deleteLayer2VirtualNetworkById",
        "summary": "Delete layer 2 virtual network by id",
        "description": "Deletes a layer 2 virtual network based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/virtualNetworkHealthSummaries/{id}/trendAnalytics",
        "method": "GET",
        "operationId": "theTrendAnalyticsDataForAVirtualNetworkInTheSpecifiedTimeRange",
        "summary": "The Trend analytics data for a virtual network in the specified time range",
        "description": "\nGet health time series for a specific Virtual Network by providing the unique Virtual Network id in the url path. Layer 2 Virtual Networks are only included in health reporting for EVPN protocol deployments. The special Layer 3 VN called \u2018INFRA_VN\u2019 is also not included for user access through Assurance virtualNetworkHealthSummaries APIS. \n\nThe data will be grouped based on the specified trend time interval. If startTime and endTime are not provided, the API defaults to the last 24 hours.\n\nBy default:\n- the number of records returned will be 500.\n- the records will be sorted in time ascending (`asc`) order\n\nFor EVPN , {id} is a combination of VN:FabrisiteId. ex: L2VN1:93a25378-7740-4e20-8d90-0060ad9a1be0\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-virtualNetworkHealthSummaries-1.0.1-resolved.yaml\n",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "trendInterval",
          "limit",
          "offset",
          "order",
          "attribute"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertion/fabricSitesReadiness/{siteId}/virtualNetworks/{id}",
        "method": "GET",
        "operationId": "readinessStatusOfSwitchesInASpecifiedVirtualNetworkWithinAFabricSite.",
        "summary": "Readiness status of switches in a specified virtual network within a fabric site.",
        "description": "Gets a list of switches for the specified virtual network within a fabric site, including their individual readiness status for Security Service Insertion (SSI) deployment. The result is sorted by hostName.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "siteId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portAssignments",
        "method": "DELETE",
        "operationId": "deletePortAssignments",
        "summary": "Delete port assignments",
        "description": "Deletes port assignments based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "interfaceName",
          "dataVlanName",
          "voiceVlanName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portAssignments",
        "method": "GET",
        "operationId": "getPortAssignments",
        "summary": "Get port assignments",
        "description": "Returns a list of port assignments that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId",
          "interfaceName",
          "dataVlanName",
          "voiceVlanName",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portAssignments",
        "method": "POST",
        "operationId": "addPortAssignments",
        "summary": "Add port assignments",
        "description": "Adds port assignments based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portAssignments",
        "method": "PUT",
        "operationId": "updatePortAssignments",
        "summary": "Update port assignments",
        "description": "Updates port assignments based on user input.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/fabricSiteHealthSummaries/count",
        "method": "GET",
        "operationId": "readFabricSiteCount",
        "summary": "Read fabric site count",
        "description": "Get a count of Fabric sites. Use available query parameters to get the count of a subset of fabric sites.\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-fabricSiteHealthSummaries-1.0.1-resolved.yaml",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "id",
          "siteHierarchy",
          "siteHierarchyId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/ipTransits/count",
        "method": "GET",
        "operationId": "getFabricDevicesLayer3HandoffsWithIpTransitCount",
        "summary": "Get fabric devices layer 3 handoffs with ip transit count",
        "description": "Returns the count of layer 3 handoffs with ip transit of fabric devices that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/sdaTransits/count",
        "method": "GET",
        "operationId": "getFabricDevicesLayer3HandoffsWithSdaTransitCount",
        "summary": "Get fabric devices layer 3 handoffs with sda transit count",
        "description": "Returns the count of layer 3 handoffs with sda transit of fabric devices that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "networkDeviceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabricDevices/layer3Handoffs/ipTransits/{id}",
        "method": "DELETE",
        "operationId": "deleteFabricDeviceLayer3HandoffWithIpTransitById",
        "summary": "Delete fabric device layer 3 handoff with ip transit by id",
        "description": "Deletes a layer 3 handoff with ip transit of a fabric device by id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertions",
        "method": "POST",
        "operationId": "createSecurityServiceInsertionOnASpecificFabricSite.",
        "summary": "Create security service insertion on a specific fabric site.",
        "description": "This endpoint enables Security Service Insertion (SSI) on a fabric site within a network. \nSecurity Service Insertion allows the integration of security services, such as firewalls, \ninto the fabric network, ensuring that traffic within Virtual Networks (VNs) is routed \nthrough these security devices.\n\n**Important:** When configuring SSI, ensure that the devices specified in the `virtualNetworks` are of type \"BORDER.\" Only devices with this role can be used to handle the traffic redirection through the firewall.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/securityServiceInsertions",
        "method": "GET",
        "operationId": "securityServiceInsertions.",
        "summary": "Security Service Insertions.",
        "description": "Retrieves a list of all Security Service Insertions (SSIs) configured across fabric sites, sorted by name.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "order",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/fabricSummary",
        "method": "GET",
        "operationId": "readFabricEntitySummary",
        "summary": "Read Fabric entity summary",
        "description": "Read Fabric summary for overall deployment. Get an aggregated summary of all fabric entities in a deployment including the entity health. \n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-fabricSummary-1.1.0-resolved.yaml",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "siteHierarchy",
          "siteHierarchyId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/anycastGateways/count",
        "method": "GET",
        "operationId": "getAnycastGatewayCount",
        "summary": "Get anycast gateway count",
        "description": "Returns the count of anycast gateways that match the provided query parameters.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "fabricId",
          "virtualNetworkName",
          "ipPoolName",
          "vlanName",
          "vlanId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/provisionDevices/count",
        "method": "GET",
        "operationId": "getProvisionedDevicesCount",
        "summary": "Get Provisioned Devices count",
        "description": "Returns the count of provisioned devices based on query parameters.\n",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/fabricSiteHealthSummaries/{id}",
        "method": "GET",
        "operationId": "readFabricSitesWithHealthSummaryFromId",
        "summary": "Read Fabric Sites with health summary from id",
        "description": "Get Fabric site health summary for a specific fabric site by providing the unique fabric site id in the url path.\n\nThis API provides the latest health data until the given `endTime`. If data is not ready for the provided endTime, the request will fail with error code `400 Bad Request`, and the error message will indicate the recommended endTime to use to retrieve a complete data set. This behavior may occur if the provided endTime=currentTime, since we are not a real time system. When `endTime` is not provided, the API returns the latest data.\n\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-fabricSiteHealthSummaries-1.0.1-resolved.yaml\n ",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "startTime",
          "endTime",
          "attribute",
          "view"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/portAssignments/{id}",
        "method": "DELETE",
        "operationId": "deletePortAssignmentById",
        "summary": "Delete port assignment by id",
        "description": "Deletes a port assignment based on id.",
        "tags": [
          "SDA"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/access-point",
        "method": "DELETE",
        "operationId": "deletePortAssignmentForAccessPointInSDAFabric",
        "summary": "Delete Port assignment for access point in SDA Fabric",
        "description": "Delete Port assignment for access point in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress",
          "interfaceName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/access-point",
        "method": "GET",
        "operationId": "getPortAssignmentForAccessPointInSDAFabric",
        "summary": "Get Port assignment for access point in SDA Fabric",
        "description": "Get Port assignment for access point in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress",
          "interfaceName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/access-point",
        "method": "POST",
        "operationId": "addPortAssignmentForAccessPointInSDAFabric",
        "summary": "Add Port assignment for access point in SDA Fabric",
        "description": "Add Port assignment for access point in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/edge-device",
        "method": "DELETE",
        "operationId": "deleteEdgeDeviceFromSDAFabric",
        "summary": "Delete edge device from SDA Fabric",
        "description": "Delete edge device from SDA Fabric.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/edge-device",
        "method": "GET",
        "operationId": "getEdgeDeviceFromSDAFabric",
        "summary": "Get edge device from SDA Fabric",
        "description": "Get edge device from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/edge-device",
        "method": "POST",
        "operationId": "addEdgeDeviceInSDAFabric",
        "summary": "Add edge device in SDA Fabric",
        "description": "Add edge device in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/device",
        "method": "GET",
        "operationId": "getDeviceInfoFromSDAFabric",
        "summary": "Get device info from SDA Fabric",
        "description": "Get device info from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/virtualnetwork/ippool",
        "method": "POST",
        "operationId": "addIPPoolInSDAVirtualNetwork",
        "summary": "Add IP Pool in SDA Virtual Network",
        "description": "Add IP Pool in SDA Virtual Network",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/virtualnetwork/ippool",
        "method": "DELETE",
        "operationId": "deleteIPPoolFromSDAVirtualNetwork",
        "summary": "Delete IP Pool from SDA Virtual Network",
        "description": "Delete IP Pool from SDA Virtual Network",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy",
          "virtualNetworkName",
          "ipPoolName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/virtualnetwork/ippool",
        "method": "GET",
        "operationId": "getIPPoolFromSDAVirtualNetwork",
        "summary": "Get IP Pool from SDA Virtual Network",
        "description": "Get IP Pool from SDA Virtual Network",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy",
          "virtualNetworkName",
          "ipPoolName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/fabric-site",
        "method": "DELETE",
        "operationId": "deleteSiteFromSDAFabric",
        "summary": "Delete Site from SDA Fabric",
        "description": "Delete Site from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/fabric-site",
        "method": "GET",
        "operationId": "getSiteFromSDAFabric",
        "summary": "Get Site from SDA Fabric",
        "description": "Get Site info from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/fabric-site",
        "method": "POST",
        "operationId": "addSiteInSDAFabric",
        "summary": "Add Site in SDA Fabric",
        "description": "Add Site in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/authentication-profile",
        "method": "DELETE",
        "operationId": "deleteDefaultAuthenticationProfileFromSDAFabric",
        "summary": "Delete default authentication profile from SDA Fabric",
        "description": "Delete default authentication profile in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/authentication-profile",
        "method": "POST",
        "operationId": "addDefaultAuthenticationTemplateInSDAFabric",
        "summary": "Add default authentication template in SDA Fabric",
        "description": "Add default authentication template in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/authentication-profile",
        "method": "PUT",
        "operationId": "updateDefaultAuthenticationProfileInSDAFabric",
        "summary": "Update default authentication profile in SDA Fabric",
        "description": "Update default authentication profile in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/authentication-profile",
        "method": "GET",
        "operationId": "getDefaultAuthenticationProfileFromSDAFabric",
        "summary": "Get default authentication profile from SDA Fabric",
        "description": "Get default authentication profile from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy",
          "authenticateTemplateName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/multicast",
        "method": "DELETE",
        "operationId": "deleteMulticastFromSDAFabric",
        "summary": "Delete multicast from SDA fabric",
        "description": "Delete multicast from SDA fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/multicast",
        "method": "GET",
        "operationId": "getMulticastDetailsFromSDAFabric",
        "summary": "Get multicast details from SDA fabric",
        "description": "Get multicast details from SDA fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/multicast",
        "method": "POST",
        "operationId": "addMulticastInSDAFabric",
        "summary": "Add multicast in SDA fabric",
        "description": "Add multicast in SDA fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/virtual-network",
        "method": "POST",
        "operationId": "addVNInFabric",
        "summary": "Add VN in fabric",
        "description": "Add virtual network (VN) in SDA Fabric\t",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/virtual-network",
        "method": "GET",
        "operationId": "getVNFromSDAFabric",
        "summary": "Get VN from SDA Fabric",
        "description": "Get virtual network (VN) from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "virtualNetworkName",
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/virtual-network",
        "method": "DELETE",
        "operationId": "deleteVNFromSDAFabric",
        "summary": "Delete VN from SDA Fabric",
        "description": "Delete virtual network (VN) from SDA Fabric\t",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "virtualNetworkName",
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/provision-device",
        "method": "PUT",
        "operationId": "re-ProvisionWiredDevice",
        "summary": "Re-Provision Wired Device",
        "description": "Re-Provision Wired Device",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/provision-device",
        "method": "POST",
        "operationId": "provisionWiredDevice",
        "summary": "Provision Wired Device",
        "description": "Provision Wired Device",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/provision-device",
        "method": "DELETE",
        "operationId": "deleteProvisionedWiredDevice",
        "summary": "Delete provisioned Wired Device",
        "description": "Delete provisioned Wired Device",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/provision-device",
        "method": "GET",
        "operationId": "getProvisionedWiredDevice",
        "summary": "Get Provisioned Wired Device",
        "description": "Get Provisioned Wired Device",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/virtual-network/summary",
        "method": "GET",
        "operationId": "getVirtualNetworkSummary",
        "summary": "Get Virtual Network Summary",
        "description": "Get Virtual Network Summary",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/user-device",
        "method": "POST",
        "operationId": "addPortAssignmentForUserDeviceInSDAFabric",
        "summary": "Add Port assignment for user device in SDA Fabric",
        "description": "Add Port assignment for user device in SDA Fabric.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/user-device",
        "method": "DELETE",
        "operationId": "deletePortAssignmentForUserDeviceInSDAFabric",
        "summary": "Delete Port assignment for user device in SDA Fabric",
        "description": "Delete Port assignment for user device in SDA Fabric.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress",
          "interfaceName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/user-device",
        "method": "GET",
        "operationId": "getPortAssignmentForUserDeviceInSDAFabric",
        "summary": "Get Port assignment for user device in SDA Fabric",
        "description": "Get Port assignment for user device in SDA Fabric.",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress",
          "interfaceName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/transit-peer-network",
        "method": "GET",
        "operationId": "getTransitPeerNetworkInfo",
        "summary": "Get Transit Peer Network Info",
        "description": "Get Transit Peer Network Info from SD-Access",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "transitPeerNetworkName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/transit-peer-network",
        "method": "POST",
        "operationId": "addTransitPeerNetwork",
        "summary": "Add Transit Peer Network",
        "description": "Add Transit Peer Network in SD-Access",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/transit-peer-network",
        "method": "DELETE",
        "operationId": "deleteTransitPeerNetwork",
        "summary": "Delete Transit Peer Network",
        "description": "Delete Transit Peer Network from SD-Access",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "transitPeerNetworkName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/virtual-network",
        "method": "PUT",
        "operationId": "updateVirtualNetworkWithScalableGroups",
        "summary": "Update virtual network with scalable groups",
        "description": "Update virtual network with scalable groups",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/virtual-network",
        "method": "DELETE",
        "operationId": "deleteVirtualNetworkWithScalableGroups",
        "summary": "Delete virtual network with scalable groups",
        "description": "Delete virtual network with scalable groups",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "virtualNetworkName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/virtual-network",
        "method": "GET",
        "operationId": "getVirtualNetworkWithScalableGroups",
        "summary": "Get virtual network with scalable groups",
        "description": "Get virtual network with scalable groups",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "virtualNetworkName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/virtual-network",
        "method": "POST",
        "operationId": "addVirtualNetworkWithScalableGroups",
        "summary": "Add virtual network with scalable groups",
        "description": "Add virtual network with scalable groups at global level",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/border-device",
        "method": "DELETE",
        "operationId": "deleteBorderDeviceFromSDAFabric",
        "summary": "Delete border device from SDA Fabric",
        "description": "Delete border device from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/border-device",
        "method": "GET",
        "operationId": "getBorderDeviceDetailFromSDAFabric",
        "summary": "Get border device detail from SDA Fabric",
        "description": "Get border device detail from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/border-device",
        "method": "POST",
        "operationId": "addBorderDeviceInSDAFabric",
        "summary": "Add border device in SDA Fabric",
        "description": "Add border device in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/device/role",
        "method": "GET",
        "operationId": "getDeviceRoleInSDAFabric",
        "summary": "Get device role in SDA Fabric",
        "description": "Get device role in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/control-plane-device",
        "method": "GET",
        "operationId": "getControlPlaneDeviceFromSDAFabric",
        "summary": "Get control plane device from SDA Fabric",
        "description": "Get control plane device from SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/control-plane-device",
        "method": "POST",
        "operationId": "addControlPlaneDeviceInSDAFabric",
        "summary": "Add control plane device in SDA Fabric",
        "description": "Add control plane device in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/control-plane-device",
        "method": "DELETE",
        "operationId": "deleteControlPlaneDeviceInSDAFabric",
        "summary": "Delete control plane device in SDA Fabric",
        "description": "Delete control plane device in SDA Fabric",
        "tags": [
          "SDA"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceManagementIpAddress"
        ],
        "version": "1.0.0"
      }
    ],
    "Fabric Wireless": [
      {
        "path": "/dna/intent/api/v1/sda/fabrics/{fabricId}/vlanToSsids",
        "method": "PUT",
        "operationId": "add,UpdateOrRemoveSSIDMappingToAVLAN",
        "summary": "Add, Update or Remove SSID mapping to a VLAN",
        "description": "Add, update, or remove SSID mappings to a VLAN. If the payload doesn't contain a 'vlanName' which has SSIDs mapping done earlier then all the mapped SSIDs of the 'vlanName' is cleared. The request must include all SSIDs currently mapped to a VLAN, as determined by the response from the GET operation for the same fabricId used in the request. If an already-mapped SSID is not included in the payload, its mapping will be removed by this API. Conversely, if a new SSID is provided, it will be added to the Mapping. Ensure that any new SSID added is a Fabric SSID. This API can also be used to add a VLAN and associate the relevant SSIDs with it. The 'vlanName' must be 'Fabric Wireless Enabled' and should be part of the Fabric Site representing 'Fabric ID' specified in the API request.",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [
          "fabricId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/{fabricId}/vlanToSsids",
        "method": "GET",
        "operationId": "retrieveTheVLANsAndSSIDsMappedToTheVLANWithinAFabricSite.",
        "summary": "Retrieve the VLANs and SSIDs mapped to the VLAN within a Fabric Site.",
        "description": "Retrieve the VLANs and SSIDs mapped to the VLAN, within a Fabric Site. The 'fabricId' represents the Fabric ID of a particular Fabric Site.",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [
          "fabricId"
        ],
        "query_parameters": [
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/{fabricId}/switchWirelessSetting",
        "method": "PUT",
        "operationId": "switchWirelessSettingAndRollingAPUpgradeManagement",
        "summary": "Switch Wireless Setting and Rolling AP Upgrade Management",
        "description": "This API is used to enable or disable wireless capabilities on switch devices, along with configuring rolling AP upgrades on the fabric site. Reboot action is required to remove wireless configurations.\n\n",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [
          "fabricId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/{fabricId}/switchWirelessSetting",
        "method": "GET",
        "operationId": "getSDAWirelessDetailsFromSwitches",
        "summary": "Get SDA Wireless details from Switches",
        "description": "Get the SDA Wireless details from the switches on the fabric site that have wireless capability enabled. A maximum of two switches can have a wireless role in a fabric site.",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [
          "fabricId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/vlanToSsids/count",
        "method": "GET",
        "operationId": "returnTheCountOfAllTheFabricSiteWhichHasSSIDToIPPoolMapping",
        "summary": "Return the count of all the fabric site which has SSID to IP Pool mapping ",
        "description": "Return the count of all the fabric site which has SSID to IP Pool mapping ",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/{fabricId}/switchWirelessSetting/reload",
        "method": "POST",
        "operationId": "reloadSwitchForWirelessControllerCleanup",
        "summary": "Reload Switch for Wireless Controller Cleanup",
        "description": "This API is used to reload switches after disabling wireless to remove the wireless-controller configuration on the device. When wireless is disabled on a switch, all wireless configurations are removed except for the wireless-controller configuration. To completely remove the wireless-controller configuration, you can use this API. Please note that using this API will cause a reload of the device(s). This API should only be used for devices that have wireless disabled but still have the 'wireless-controller' configuration present. The reload payload can have a maximum of two switches as only two switches can have a wireless role in a fabric site.",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [
          "fabricId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/vlanToSsids",
        "method": "GET",
        "operationId": "returnsAllTheFabricSitesThatHaveVLANToSSIDMapping.",
        "summary": "Returns all the Fabric Sites that have VLAN to SSID mapping.",
        "description": "It will return all vlan to SSID mapping across all the fabric site",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/{fabricId}/wirelessMulticast",
        "method": "PUT",
        "operationId": "updateSDAWirelessMulticast",
        "summary": "Update SDA Wireless Multicast",
        "description": "Updates the Software-Defined Access (SDA) Wireless Multicast setting for a specified fabric site. This API allows you to enable or disable the multicast feature. For optimal performance, ensure wired multicast is also enabled.",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [
          "fabricId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/{fabricId}/wirelessMulticast",
        "method": "GET",
        "operationId": "getSDAWirelessMulticast",
        "summary": "Get SDA Wireless Multicast",
        "description": "Retrieves the current Software-Defined Access (SDA) Wireless Multicast setting for a specified fabric site. The setting indicates whether multicast is enabled (true) or disabled (false). For optimal performance, ensure wired multicast is also enabled.",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [
          "fabricId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sda/fabrics/{fabricId}/vlanToSsids/count",
        "method": "GET",
        "operationId": "returnsTheCountOfVLANsMappedToSSIDsInAFabricSite.",
        "summary": "Returns the count of VLANs mapped to SSIDs in a Fabric Site.",
        "description": "Returns the count of VLANs mapped to SSIDs in a Fabric Site. The 'fabricId' represents the Fabric ID of a particular Fabric Site.",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [
          "fabricId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/wireless-controller",
        "method": "DELETE",
        "operationId": "removeWLCFromFabricDomain",
        "summary": "Remove WLC from Fabric Domain",
        "description": "Remove WLC from Fabric Domain",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceIPAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/wireless-controller",
        "method": "POST",
        "operationId": "addWLCToFabricDomain",
        "summary": "Add WLC to Fabric Domain",
        "description": "Add WLC to Fabric Domain",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/ssid-ippool",
        "method": "PUT",
        "operationId": "updateSSIDToIPPoolMapping",
        "summary": "Update SSID to IP Pool Mapping",
        "description": "Update SSID to IP Pool Mapping",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/ssid-ippool",
        "method": "GET",
        "operationId": "getSSIDToIPPoolMapping",
        "summary": "Get SSID to IP Pool Mapping",
        "description": "Get SSID to IP Pool Mapping",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [],
        "query_parameters": [
          "vlanName",
          "siteNameHierarchy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/business/sda/hostonboarding/ssid-ippool",
        "method": "POST",
        "operationId": "addSSIDToIPPoolMapping",
        "summary": "Add SSID to IP Pool Mapping",
        "description": "Add SSID to IP Pool Mapping",
        "tags": [
          "Fabric Wireless"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Wired": [
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels",
        "method": "POST",
        "operationId": "createAConfigurationModelForTheIntendedConfigsForADevice.",
        "summary": "Create a configuration model for the intended configs for a device.",
        "description": "Create a configuration model for the intended configs for a device. This is a pre-requisite to preview the generated device config for the provisioning intent. This is mandatory if the provisioning settings require Preview or ITSM Approval before deploying configurations on network devices. The API /intent/api/v1/provisioningSettings can be used to get or update provisioning settings.This API is 'Step 1' in the following workflow -  Step 1- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels' to start the provision of intended features. The response has a taskId which is the previewActivityId in all subsequent APIs. The task must be successfully complete before proceeding to the next step. It is not recommended to proceed when there is any task failure in this step. The API 'DELETE /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}'' can be used at any step to discard/cancel the provision of intended features. Step 2- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config' to generate device CLIs for preview. The response has a task ID. The task must be successfully complete before using the GET API to view CLIs. It is not recommended to proceed when there is any task failure(s) in this step. The API 'DELETE /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}'' can be used at any step to discard/cancel the provision of intended features. Step 3- Use 'GET /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config' to view the CLIs that will be applied to the device. Step 4- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/deploy' to deploy the intent to the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2/{feature}",
        "method": "PUT",
        "operationId": "updateConfigurationsForAnIntendedLayer2FeatureOnAWiredDevice.",
        "summary": "Update configurations for an intended layer 2 feature on a wired device.",
        "description": "This API updates the configurations for an intended feature on a wired device. Only the feature configurations to be changed need to be added to the intended features. Updates to intended features can be done over several iterations. Once the updates are complete, the intended features can be deployed to a device using the API /dna/intent/api/v1/networkDevices/{id}/configFeatures/intended/deploy. When the intended features are deployed, they are applied on top of the existing configurations on the device. Any existing configurations on the device which are not included in the intended features, are retained on the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id",
          "feature"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2/{feature}",
        "method": "GET",
        "operationId": "getConfigurationsForAnIntendedLayer2FeatureOnAWiredDevice.",
        "summary": "Get configurations for an intended layer 2 feature on a wired device.",
        "description": "This API returns the configurations for an intended layer 2 feature on a wired device. Even after the intended configurations are deployed using the API /dna/intent/api/v1/networkDevices/{id}/configFeatures/intended/deploy, they continue to be a part of the intended features on the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id",
          "feature"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2/{feature}",
        "method": "POST",
        "operationId": "createConfigurationsForAnIntendedLayer2FeatureOnAWiredDevice",
        "summary": "Create configurations for an intended layer 2 feature on a wired device",
        "description": "This API creates configurations for an intended feature on a wired device, if it hasn't been added earlier. nly the feature configurations to be changed need to be added to the intended features. Updates to intended features can be done over several iterations. When the intended features are deployed to a device using the API /dna/intent/api/v1/networkDevices/{id}/configFeatures/intended/deploy, they are applied on top of the existing configurations on the device. Any existing configurations on the device which are not included in the intended features, are retained on the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id",
          "feature"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2/{feature}",
        "method": "DELETE",
        "operationId": "deleteConfigurationsForAnIntendedLayer2FeatureOnAWiredDevice.",
        "summary": "Delete configurations for an intended layer 2 feature on a wired device.",
        "description": "This API deleted the configurations for an intended feature on a wired device. Updates to intended features can be done over several iterations. Once the updates are complete, the intended features can be deployed to a device using the API /dna/intent/api/v1/networkDevices/{id}/configFeatures/intended/deploy. Any existing configurations on the device which are not included in the intended features, are retained on the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id",
          "feature"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/deployed/layer2/{feature}/count",
        "method": "GET",
        "operationId": "getNumberOfConfigurationsForADeployedLayer2FeatureOnADevice.",
        "summary": "Get number of configurations for a deployed layer 2 feature on a device.",
        "description": "The API returns the number of configurations for a deployed layer 2 feature on a device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id",
          "feature"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/deployed/layer2/{feature}",
        "method": "GET",
        "operationId": "getConfigurationsForADeployedLayer2FeatureOnAWiredDevice.",
        "summary": "Get configurations for a deployed layer 2 feature on a wired device.",
        "description": "The API returns configurations for a deployed layer 2 feature on a wired device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id",
          "feature"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/deploy",
        "method": "POST",
        "operationId": "deployTheIntendedConfigurationFeaturesOnAWiredDevice.",
        "summary": "Deploy the intended configuration features on a wired device.",
        "description": "Deploy the intended configuration features on a wired device. This can be used only if the provisioning settings do not require Preview or ITSM Approval before deploying configurations on network devices. The API /intent/api/v1/provisioningSettings can be used to get or update provisioning settings.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/serviceDeployments",
        "method": "GET",
        "operationId": "getServiceDeploymentStatus.",
        "summary": "Get service deployment status.",
        "description": "Returns service deployment status based on filter criteria.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2",
        "method": "PUT",
        "operationId": "updateConfigurationsForIntendedLayer2FeaturesOnAWiredDevice.",
        "summary": "Update configurations for intended layer 2 features on a wired device.",
        "description": "This API updates the configurations for the intended features on a wired device. Only the feature configurations to be changed need to be added to the intended features. Updates to intended features can be done over several iterations. Once the updates are complete, the intended features can be deployed to a device using the API /dna/intent/api/v1/networkDevices/{id}/configFeatures/intended/deploy. When the intended features are deployed, they are applied on top of the existing configurations on the device. Any existing configurations on the device which are not included in the intended features, are retained on the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2",
        "method": "POST",
        "operationId": "createConfigurationsForIntendedLayer2FeaturesOnAWiredDevice",
        "summary": "Create configurations for intended layer 2 features on a wired device",
        "description": "This API creates configurations for the intended features on a wired device, if none have been added earlier. Only the feature configurations to be changed need to be added to the intended features. When the intended features are deployed to a device using the API /intent/api/v1/networkDevices/{id}/configFeatures/intended/deploy, they are applied on top of the existing configurations on the device. Any existing configurations on the device which are not included in the intended features, are retained on the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/supported/layer2",
        "method": "GET",
        "operationId": "getTheSupportedLayer2FeaturesOnAWiredDevice.",
        "summary": "Get the supported layer 2 features on a wired device.",
        "description": "The API returns the supported layer 2 features on a wired device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/deploy",
        "method": "POST",
        "operationId": "deploysTheConfigurationModelOnTheNetworkDevice.",
        "summary": "Deploys the configuration model on the network device.",
        "description": "This API deploys the configuration model on the network device. This is the final step 'Step 4' of the following workflow.\nStep 1- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels' to start the provision of intended features. The response has a taskId which is the previewActivityId in all subsequent APIs. The task must be successfully complete before proceeding to the next step. It is not recommended to proceed when there is any task failure in this step. The API 'DELETE /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}'' can be used at any step to discard/cancel the provision of intended features. Step 2- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config' to generate device CLIs for preview. The response has a task ID. The task must be successfully complete before using the GET API to view CLIs. It is not recommended to proceed when there is any task failure(s) in this step. The API 'DELETE /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}'' can be used at any step to discard/cancel the provision of intended features. Step 3- Use 'GET /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config' to view the CLIs that will be applied to the device. Step 4- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/deploy' to push the intent to the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "networkDeviceId",
          "previewActivityId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2/{feature}/count",
        "method": "GET",
        "operationId": "getNumberOfConfigurationsForAnIntendedLayer2FeatureOnADevice.",
        "summary": "Get number of configurations for an intended layer 2 feature on a device.",
        "description": "This API returns the count of the instances of the configurations for an intended layer 2 feature on a wired device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id",
          "feature"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/config",
        "method": "POST",
        "operationId": "generateTheDeviceConfigForTheConfigurationModel.",
        "summary": "Generate the device config for the configuration model.",
        "description": "Generates the device config for the configuration model. This API is 'Step 2' in the following workflow -  Step 1- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels' to start the provision of intended features. The response has a taskId which is the previewActivityId in all subsequent APIs. The task must be successfully complete before proceeding to the next step. It is not recommended to proceed when there is any task failure in this step. The API 'DELETE /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}'' can be used at any step to discard/cancel the provision of intended features. Step 2- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config' to generate device CLIs for preview. The response has a task ID. The task must be successfully complete before using the GET API to view CLIs. It is not recommended to proceed when there is any task failure(s) in this step. The API 'DELETE /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}'' can be used at any step to discard/cancel the provision of intended features. Step 3- Use 'GET /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config' to view the CLIs that will be applied to the device. Step 4- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/deploy' to deploy the intent to the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "networkDeviceId",
          "previewActivityId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/config",
        "method": "GET",
        "operationId": "getsTheDeviceConfigForTheConfigurationModel.",
        "summary": "Gets the device config for the configuration model.",
        "description": "Gets the device config for the configuration model. This API is 'Step 3' in the following workflow. Step 1- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels' to start the provision of intended features. The response has a taskId which is the previewActivityId in all subsequent APIs. The task must be successfully complete before proceeding to the next step. It is not recommended to proceed when there is any task failure in this step. The API 'DELETE /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}'' can be used at any step to discard/cancel the provision of intended features. Step 2- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config' to generate device CLIs for preview. The response has a task ID. The task must be successfully complete before using the GET API to view CLIs. It is not recommended to proceed when there is any task failure(s) in this step. The API 'DELETE /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}'' can be used at any step to discard/cancel the provision of intended features. Step 3- Use 'GET /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/networkDevices/{networkDeviceId}/config' to view the CLIs that will be applied to the device. Step 4- Use 'POST /intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}/deploy' to deploy the intent to the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "networkDeviceId",
          "previewActivityId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/configurationModels/{previewActivityId}",
        "method": "DELETE",
        "operationId": "deletesTheConfigurationModel.",
        "summary": "Deletes the configuration model.",
        "description": "Deletes the configuration model. The API can be used at any step to discard/cancel the provision of intended features.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "networkDeviceId",
          "previewActivityId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/intent/api/v1/wired/networkDevices/{id}/configFeatures/intended/layer2",
        "method": "GET",
        "operationId": "getConfigurationsForIntendedLayer2FeaturesOnAWiredDevice.",
        "summary": "Get configurations for intended layer 2 features on a wired device.",
        "description": "This API returns the configurations for the intended layer 2 features on a wired device. Even after the intended configurations are deployed using the API /intent/api/v1/networkDevices/{id}/configFeatures/intended/deploy, they continue to be a part of the intended features on the device.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "feature"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/wired/networkDevices/{networkDeviceId}/configFeatures/intended/deviceDeployments",
        "method": "GET",
        "operationId": "getDeviceDeploymentStatus",
        "summary": "Get device deployment status",
        "description": "Returns device deployment status based on filter criteria.",
        "tags": [
          "Wired"
        ],
        "parameters": [
          "networkDeviceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Site Management": {
    "Software Image Management (SWIM)": [
      {
        "path": "/dna/intent/api/v1/images/{imageId}/siteWiseProductNames",
        "method": "POST",
        "operationId": "assignNetworkDeviceProductNameToTheGivenSoftwareImage",
        "summary": "Assign network device product name to the given software image",
        "description": "Assign network device product name and sites for the given image identifier. Refer `/dna/intent/api/v1/images` API for obtaining imageId",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "imageId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{imageId}/siteWiseProductNames",
        "method": "GET",
        "operationId": "retrievesNetworkDeviceProductNamesAssignedToASoftwareImage.",
        "summary": "Retrieves network device product names assigned to a software image.",
        "description": "Returns a list of network device product names and associated sites for a given image identifier. Refer `/dna/intent/api/v1/images` API for obtaining `imageId`.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "imageId"
        ],
        "query_parameters": [
          "productName",
          "productId",
          "recommended",
          "assigned",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/siteWiseProductNames/count",
        "method": "GET",
        "operationId": "returnsTheCountOfNetworkDeviceProductNamesForASite",
        "summary": "Returns the count of network device product names for a site",
        "description": "Returns the count of network device product names for given filters. The default value of `siteId` is global.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "productName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{id}",
        "method": "DELETE",
        "operationId": "deleteImage",
        "summary": "Delete image",
        "description": "Delete the image from image repository",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/importation",
        "method": "GET",
        "operationId": "getSoftwareImageDetails",
        "summary": "Get software image details",
        "description": "Returns software image list based on a filter criteria. For example: \"filterbyName = cat3k%\"",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "imageUuid",
          "name",
          "family",
          "applicationType",
          "imageIntegrityStatus",
          "version",
          "imageSeries",
          "imageName",
          "isTaggedGolden",
          "isCCORecommended",
          "isCCOLatest",
          "createdTime",
          "imageSizeGreaterThan",
          "imageSizeLesserThan",
          "sortBy",
          "sortOrder",
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/count",
        "method": "GET",
        "operationId": "returnsCountOfSoftwareImages",
        "summary": "Returns count of software images",
        "description": "Returns the count of software images for given `siteId`. The default value of siteId is global",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "productNameOrdinal",
          "supervisorProductNameOrdinal",
          "imported",
          "name",
          "version",
          "golden",
          "integrity",
          "hasAddonImages",
          "isAddonImages"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/importation/source/file",
        "method": "POST",
        "operationId": "importLocalSoftwareImage",
        "summary": "Import local software image",
        "description": "Fetches a software image from local file system and uploads to DNA Center. Supported software image files extensions are bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "isThirdParty",
          "thirdPartyVendor",
          "thirdPartyImageFamily",
          "thirdPartyApplicationType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/distributionServerSettings",
        "method": "POST",
        "operationId": "addImageDistributionServer",
        "summary": "Add image distribution server",
        "description": "Add remote server for distributing software images. Upto two such distribution servers are supported.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/distributionServerSettings",
        "method": "GET",
        "operationId": "retrieveImageDistributionServers",
        "summary": "Retrieve image distribution servers",
        "description": "Retrieve the list of remote image distribution servers. There can be up to two remote servers.Product always acts as local distribution server, and it is not part of this API response.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{imageId}/siteWiseProductNames/{productNameOrdinal}",
        "method": "PUT",
        "operationId": "updateTheListOfSitesForTheNetworkDeviceProductNameAssignedToTheSoftwareImage",
        "summary": "Update the list of sites for the network device product name assigned to the software image",
        "description": "Update the list of sites for the network device product name assigned to the software image. Refer to `/dna/intent/api/v1/images` and `/dna/intent/api/v1/images/{imageId}/siteWiseProductNames` GET APIs for obtaining  `imageId` and `productNameOrdinal` respectively.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "imageId",
          "productNameOrdinal"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{imageId}/siteWiseProductNames/{productNameOrdinal}",
        "method": "DELETE",
        "operationId": "unassignNetworkDeviceProductNameFromTheGivenSoftwareImage",
        "summary": "Unassign network device product name from the given software image",
        "description": "This API unassigns the network device product name from all the sites for the given software image.\n        Refer to `/dna/intent/api/v1/images` and `/dna/intent/api/v1/images/{imageId}/siteWiseProductNames` GET APIs for obtaining  `imageId` and `productNameOrdinal` respectively.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "imageId",
          "productNameOrdinal"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/siteWiseProductNames",
        "method": "GET",
        "operationId": "returnsNetworkDeviceProductNamesForASite",
        "summary": "Returns network device product names for a site",
        "description": "Provides network device product names for a site. The default value of `siteId` is global. The response will include the network device count and image summary.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "productName",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{id}/sites/{siteId}/tagGolden",
        "method": "POST",
        "operationId": "taggingGoldenImage",
        "summary": "Tagging golden image",
        "description": "Creates golden image tagging specifically for a particular device type or supervisor engine module.\nConditions for tagging the golden image:\n\n1) The golden tagging of SMU, PISRT_SMU, APSP, and APDP image type depends on the golden tagged applied on the base image. If any discrepancies are identified in the request payload, the golden tagging process will fail. For example:\n\n    a) If the base image is tagged with Device Role: ACCESS, then add-ons can only be done ACCESS role only and the same is applied if any device tag is used. Any other request will fail.\n\n    b) If the base image is tagged at global or any site level then add-ons also need to be tagged at site level.\n\n2) Tagging of SUBPACKAGE and ROMMON image type is not supported.\n",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id",
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/ccoSync",
        "method": "POST",
        "operationId": "initiatesSyncOfSoftwareImagesFromCisco.com",
        "summary": "Initiates sync of software images from Cisco.com",
        "description": "Initiating the synchronization of the software images from Cisco.com. The latest and suggested images will be retrieved, along with the corresponding product name and PIDs for imported and retrieved images from Cisco.com. Once the task is completed, the API `/intent/api/v1/images?imported=false` will display all the images fetched from Cisco.com.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/distributionServerSettings/{id}",
        "method": "PUT",
        "operationId": "updateRemoteImageDistributionServer",
        "summary": "Update remote image distribution server",
        "description": "Update remote image distribution server details.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/distributionServerSettings/{id}",
        "method": "DELETE",
        "operationId": "removeImageDistributionServer",
        "summary": "Remove image distribution server",
        "description": "Delete remote image distribution server.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/distributionServerSettings/{id}",
        "method": "GET",
        "operationId": "retrieveSpecificImageDistributionServer",
        "summary": "Retrieve specific image distribution server",
        "description": "Retrieve image distribution server for the given server identifier",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/importation/device-family-identifiers",
        "method": "GET",
        "operationId": "getDeviceFamilyIdentifiers",
        "summary": "Get Device Family Identifiers",
        "description": "API to get Device Family Identifiers for all Device Families that can be used for tagging an image golden.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/productNames/{productNameOrdinal}",
        "method": "GET",
        "operationId": "retrieveNetworkDeviceProductName",
        "summary": "Retrieve network device product name",
        "description": "Get the network device product name, its ordinal, and supported PIDs.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "productNameOrdinal"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/importation/golden",
        "method": "POST",
        "operationId": "tagAsGoldenImage",
        "summary": "Tag as Golden Image",
        "description": "Golden Tag image. Set siteId as -1 for Global site.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/siteWiseImagesSummary",
        "method": "GET",
        "operationId": "returnsTheImageSummaryForTheGivenSite",
        "summary": "Returns the image summary for the given site",
        "description": "Returns aggregate counts of network device product names, golden and non-golden tagged products, imported images, golden images tagged, and advisor for a specific site provide, the default value of `siteId` is set to global.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceImageUpdates",
        "method": "GET",
        "operationId": "getNetworkDeviceImageUpdates",
        "summary": "Get network device image updates",
        "description": "Returns the list of network device image updates based on the given filter criteria",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "parentId",
          "networkDeviceId",
          "status",
          "imageName",
          "hostName",
          "managementAddress",
          "startTime",
          "endTime",
          "sortBy",
          "order",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{id}/sites/{siteId}/untagGolden",
        "method": "POST",
        "operationId": "untaggingGoldenImage",
        "summary": "Untagging golden image",
        "description": "Untag the golden images specifically designed for a particular device type or supervisor engine module.\nConditions for untagging the golden image:\n    \n1) Untagging the golden image can only be done where the golden tagged is applied. \n  For example, if golden tagging is applied to a global site, then untagging can only be done on a global site. Even though the same setting will be inherited on native, attempting to untag will fail.\n2) Untagging of SUBPACKAGE and ROMMON image type is not supported.\n",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id",
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/distribution",
        "method": "POST",
        "operationId": "triggerSoftwareImageDistribution",
        "summary": "Trigger software image distribution",
        "description": "Distributes a software image on a given device. Software image must be imported successfully into DNA Center before it can be distributed",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/importation/golden/site/{siteId}/family/{deviceFamilyIdentifier}/role/{deviceRole}/image/{imageId}",
        "method": "GET",
        "operationId": "getGoldenTagStatusOfAnImage.",
        "summary": "Get Golden Tag Status of an Image.",
        "description": "Get golden tag status of an image. Set siteId as -1 for Global site.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "siteId",
          "deviceFamilyIdentifier",
          "deviceRole",
          "imageId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/importation/golden/site/{siteId}/family/{deviceFamilyIdentifier}/role/{deviceRole}/image/{imageId}",
        "method": "DELETE",
        "operationId": "removeGoldenTagForImage.",
        "summary": "Remove Golden Tag for image.",
        "description": "Remove golden tag. Set siteId as -1 for Global site.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "siteId",
          "deviceFamilyIdentifier",
          "deviceRole",
          "imageId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/productNames",
        "method": "GET",
        "operationId": "retrievesTheListOfNetworkDeviceProductNames",
        "summary": "Retrieves the list of network device product names",
        "description": "Get the list of network device product names, their ordinal, and the support PIDs based on filter criteria.\n",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "productName",
          "productId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/productNames/count",
        "method": "GET",
        "operationId": "countOfNetworkProductNames",
        "summary": "Count of network product names",
        "description": "Count of product names based on filter criteria",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "productName",
          "productId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceImageUpdates/count",
        "method": "GET",
        "operationId": "countOfNetworkDeviceImageUpdates",
        "summary": "Count of network device image updates",
        "description": "Returns the count of network device image updates based on the given filter criteria",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "parentId",
          "networkDeviceId",
          "status",
          "imageName",
          "hostName",
          "managementAddress",
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/importation/source/url",
        "method": "POST",
        "operationId": "importSoftwareImageViaURL",
        "summary": "Import software image via URL",
        "description": "Fetches a software image from remote file system (using URL for HTTP/FTP) and uploads to DNA Center. Supported image files extensions are bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "scheduleAt",
          "scheduleDesc",
          "scheduleOrigin"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{id}/download",
        "method": "POST",
        "operationId": "downloadTheSoftwareImage",
        "summary": "Download the software image",
        "description": "Initiates download of the software image from Cisco.com on the disk for the given `id`. Refer to `/dna/intent/api/v1/images` for obtaining `id`.",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{imageId}/siteWiseProductNames/count",
        "method": "GET",
        "operationId": "retrievesTheCountOfAssignedNetworkDeviceProducts",
        "summary": "Retrieves the count of assigned network device products",
        "description": "Returns count of assigned network device product for a given image identifier. Refer `/dna/intent/api/v1/images` API for obtaining `imageId`",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "imageId"
        ],
        "query_parameters": [
          "productName",
          "productId",
          "recommended",
          "assigned"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images",
        "method": "GET",
        "operationId": "returnsListOfSoftwareImages",
        "summary": "Returns list of software images",
        "description": "A list of available images for the specified site is provided. The default value of the site is set to global. The list includes images that have been imported onto the disk, as well as the latest and suggested images from Cisco.com. ",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "productNameOrdinal",
          "supervisorProductNameOrdinal",
          "imported",
          "name",
          "version",
          "golden",
          "integrity",
          "hasAddonImages",
          "isAddonImages",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{id}/addonImages/count",
        "method": "GET",
        "operationId": "returnsCountOfAdd-onImages",
        "summary": "Returns count of add-on images",
        "description": "Count of add-on images available for the given software image identifier, `id` can be obtained from the response of API [ /dna/intent/api/v1/images?hasAddonImages=true ].",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/images/{id}/addonImages",
        "method": "GET",
        "operationId": "retrieveApplicableAdd-onImagesForTheGivenSoftwareImage",
        "summary": "Retrieve applicable add-on images for the given software image",
        "description": "Retrieves the list of applicable add-on images if available for the given software image. `id` can be obtained from the response of API [ /dna/intent/api/v1/images?hasAddonImages=true ].",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/image/activation/device",
        "method": "POST",
        "operationId": "triggerSoftwareImageActivation",
        "summary": "Trigger software image activation",
        "description": "Activates a software image on a given device. Software image must be present in the device flash",
        "tags": [
          "Software Image Management (SWIM)"
        ],
        "parameters": [],
        "query_parameters": [
          "scheduleValidate"
        ],
        "version": "1.0.0"
      }
    ],
    "Configuration Templates": [
      {
        "path": "/dna/intent/api/v1/template-programmer/template/version/{templateId}",
        "method": "GET",
        "operationId": "getsAllTheVersionsOfAGivenTemplate",
        "summary": "Gets all the versions of a given template",
        "description": "Get all the versions of template by its id",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/template-programmer/template/deploy",
        "method": "POST",
        "operationId": "deployTemplateV2",
        "summary": "Deploy Template V2",
        "description": "V2 API to deploy a template.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/clone/name/{name}/project/{projectId}/template/{templateId}",
        "method": "POST",
        "operationId": "createsACloneOfTheGivenTemplate",
        "summary": "Creates a clone of the given template",
        "description": "API to clone template",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "name",
          "templateId"
        ],
        "query_parameters": [
          "projectId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/projects",
        "method": "GET",
        "operationId": "getTemplateProjects",
        "summary": "Get Template Projects",
        "description": "Get all matching template projects based on the filters selected.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/projects",
        "method": "POST",
        "operationId": "createTemplateProject",
        "summary": "Create Template Project",
        "description": "Create a template project.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template/deploy",
        "method": "POST",
        "operationId": "deployTemplate",
        "summary": "Deploy Template",
        "description": "API to deploy a template.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template/deploy/status/{deploymentId}",
        "method": "GET",
        "operationId": "statusOfTemplateDeployment",
        "summary": "Status of template deployment",
        "description": "API to retrieve the status of template deployment.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "deploymentId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/networkProfilesForSites/bulk",
        "method": "POST",
        "operationId": "attachAListOfNetworkProfilesToADay-NCLITemplate",
        "summary": "Attach a list of network profiles to a Day-N CLI template",
        "description": "Attaches a list of network profiles to the Day-N CLI template by passing the profile IDs and template ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/networkProfilesForSites/bulk",
        "method": "DELETE",
        "operationId": "detachAListOfNetworkProfilesFromADay-NCLITemplate",
        "summary": "Detach a list of network profiles from a Day-N CLI template",
        "description": "Detach a list of network profiles from a Day-N CLI template with a list of profile IDs along with the template ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [
          "profileId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template",
        "method": "PUT",
        "operationId": "updateTemplate",
        "summary": "Update Template",
        "description": "API to update a template.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template",
        "method": "GET",
        "operationId": "getsTheTemplatesAvailable",
        "summary": "Gets the templates available",
        "description": "List the templates available",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [
          "projectId",
          "softwareType",
          "softwareVersion",
          "productFamily",
          "productSeries",
          "productType",
          "filterConflictingTemplates",
          "tags",
          "projectNames",
          "unCommitted",
          "sortOrder"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template/preview",
        "method": "PUT",
        "operationId": "previewTemplate",
        "summary": "Preview Template",
        "description": "API to preview a template.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project/name/{projectName}/template/importtemplates",
        "method": "POST",
        "operationId": "importsTheTemplatesProvided",
        "summary": "Imports the templates provided",
        "description": "Imports the templates provided in the DTO by project Name",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "projectName"
        ],
        "query_parameters": [
          "doVersion"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project",
        "method": "GET",
        "operationId": "getsAListOfProjects",
        "summary": "Gets a list of projects",
        "description": "List the projects",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "sortOrder"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project",
        "method": "POST",
        "operationId": "createProject",
        "summary": "Create Project",
        "description": "This API is used to create a new project.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project",
        "method": "PUT",
        "operationId": "updateProject",
        "summary": "Update Project",
        "description": "This API is used to update an existing project.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/versions/count",
        "method": "GET",
        "operationId": "getTemplateVersionsCount",
        "summary": "Get Template Versions Count",
        "description": "Get the count of a template's version information.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [
          "versionNumber",
          "latestVersion"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/projects/{projectId}",
        "method": "PUT",
        "operationId": "updateTemplateProject",
        "summary": "Update Template Project",
        "description": "Update a template project by the project's ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "projectId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/projects/{projectId}",
        "method": "GET",
        "operationId": "getTemplateProject",
        "summary": "Get Template Project",
        "description": "Get a template project by the project's ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "projectId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/projects/{projectId}",
        "method": "DELETE",
        "operationId": "deleteTemplateProject",
        "summary": "Delete Template Project",
        "description": "Delete a template project by the project's ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "projectId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project/name/exportprojects",
        "method": "POST",
        "operationId": "exportsTheProjectsForAGivenCriteria.",
        "summary": "Exports the projects for a given criteria.",
        "description": "Exports the projects for given projectNames.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/versions/{versionId}",
        "method": "GET",
        "operationId": "getTemplateVersion",
        "summary": "Get Template Version",
        "description": "Get a template's version by the version ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId",
          "versionId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/networkProfilesForSites",
        "method": "GET",
        "operationId": "retrieveTheNetworkProfilesAttachedToACLITemplate",
        "summary": "Retrieve the network profiles attached to a CLI template",
        "description": "Retrieves the list of network profiles that a CLI template is currently attached to by the template ID.\n",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/networkProfilesForSites",
        "method": "POST",
        "operationId": "attachNetworkProfileToADay-NCLITemplate",
        "summary": "Attach network profile to a Day-N CLI template",
        "description": "Attaches a network profile to a Day-N CLI template by passing the profile ID and template ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project/{projectId}",
        "method": "DELETE",
        "operationId": "deletesTheProject",
        "summary": "Deletes the project",
        "description": "Deletes the project by its id",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "projectId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project/{projectId}",
        "method": "GET",
        "operationId": "getsTheDetailsOfAGivenProject.",
        "summary": "Gets the details of a given project.",
        "description": "Get the details of the given project by its id.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "projectId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template/{templateId}",
        "method": "GET",
        "operationId": "getsDetailsOfAGivenTemplate",
        "summary": "Gets details of a given template",
        "description": "Details of the template by its id",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [
          "latestVersion"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template/{templateId}",
        "method": "DELETE",
        "operationId": "deletesTheTemplate",
        "summary": "Deletes the template",
        "description": "Deletes the template by its id",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/template-programmer/project",
        "method": "GET",
        "operationId": "getProject(s)Details",
        "summary": "Get project(s) details",
        "description": "Get project(s) details",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "name",
          "offset",
          "limit",
          "sortOrder"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template/exporttemplates",
        "method": "POST",
        "operationId": "exportsTheTemplatesForAGivenCriteria.",
        "summary": "Exports the templates for a given criteria.",
        "description": "Exports the templates for given templateIds.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/versions",
        "method": "GET",
        "operationId": "getTemplateVersions",
        "summary": "Get Template Versions",
        "description": "Get a template's version information.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [
          "versionNumber",
          "latestVersion",
          "order",
          "limit",
          "offset"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project/{projectId}/template",
        "method": "POST",
        "operationId": "createTemplate",
        "summary": "Create Template",
        "description": "API to create a template by project id.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "projectId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/template-programmer/template",
        "method": "GET",
        "operationId": "getTemplate(s)Details",
        "summary": "Get template(s) details",
        "description": "Get template(s) details",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "name",
          "projectId",
          "projectName",
          "softwareType",
          "softwareVersion",
          "productFamily",
          "productSeries",
          "productType",
          "filterConflictingTemplates",
          "tags",
          "unCommitted",
          "sortOrder",
          "allTemplateAttributes",
          "includeVersionDetails",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/networkProfilesForSites/{profileId}",
        "method": "DELETE",
        "operationId": "detachANetworkProfileFromADay-NCLITemplate",
        "summary": "Detach a network profile from a Day-N CLI template",
        "description": "Detach a network profile from a Day-N CLI template by the profile ID and template ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId",
          "profileId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/versions/commit",
        "method": "POST",
        "operationId": "commitTemplateForANewVersion",
        "summary": "Commit Template For a New Version",
        "description": "Transitions the current draft of a template to a new committed version with a higher version number.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/projects/count",
        "method": "GET",
        "operationId": "getTemplateProjectCount",
        "summary": "Get Template Project Count",
        "description": "Get the count of all template projects.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/project/importprojects",
        "method": "POST",
        "operationId": "importsTheProjectsProvided",
        "summary": "Imports the Projects provided",
        "description": "Imports the Projects provided in the DTO",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [
          "doVersion"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/template-programmer/template/version",
        "method": "POST",
        "operationId": "versionTemplate",
        "summary": "Version Template",
        "description": "API to version the current contents of the template.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/templates/{templateId}/networkProfilesForSites/count",
        "method": "GET",
        "operationId": "retrieveCountOfNetworkProfilesAttachedToACLITemplate",
        "summary": "Retrieve count of network profiles attached to a CLI template",
        "description": "Retrieves the count of network profiles that a CLI template has been attached to by the template ID.",
        "tags": [
          "Configuration Templates"
        ],
        "parameters": [
          "templateId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "LAN Automation": [
      {
        "path": "/dna/intent/api/v1/lanAutomation/portChannels/{id}/removeLink",
        "method": "POST",
        "operationId": "removeALinkFromPortChannel",
        "summary": "Remove a link from Port Channel",
        "description": "This API removes a member link from an existing Port Channel, reverting the link to a P2P L3 interface.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/{id}",
        "method": "PUT",
        "operationId": "lANAutomationStopAndUpdateDevices",
        "summary": "LAN Automation Stop and Update Devices",
        "description": "Invoke this API to stop LAN Automation and Update Loopback0 IP Address of Devices, discovered in the current session",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/{id}",
        "method": "DELETE",
        "operationId": "lANAutomationStop",
        "summary": "LAN Automation Stop",
        "description": "Invoke this API to stop LAN Automation for the given site. ",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/updateDevice",
        "method": "PUT",
        "operationId": "lANAutomationDeviceUpdate",
        "summary": "LAN Automation Device Update",
        "description": " Invoke this API to perform a DAY-N update on LAN Automation-related devices. Supported features include Loopback0 IP update, hostname update, link addition, and link deletion. ",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [
          "feature"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lanAutomation/portChannels/{id}",
        "method": "GET",
        "operationId": "getPortChannelInformationById",
        "summary": "Get Port Channel information by id",
        "description": "This API retrieves Port Channel information using its ID.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lanAutomation/portChannels/{id}",
        "method": "DELETE",
        "operationId": "deletePortChannel",
        "summary": "Delete Port Channel",
        "description": "This API deletes a Port Channel between LAN Automation associated devices using a valid Port Channel ID.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lanAutomation/portChannels",
        "method": "POST",
        "operationId": "createANewPortChannelBetweenDevices",
        "summary": "Create a New Port Channel between devices",
        "description": "This API creates a Port Channel between two LAN Automation associated devices using the PAgP protocol, with a minimum of 2 and a maximum of 8 LAN Automated interfaces in UP status.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lanAutomation/portChannels",
        "method": "GET",
        "operationId": "getPortChannels",
        "summary": "Get Port Channels",
        "description": "Returns a list of Port Channel between the LAN Automation associated devices.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [
          "device1ManagementIPAddress",
          "device1Uuid",
          "device2ManagementIPAddress",
          "device2Uuid",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/log/{id}",
        "method": "GET",
        "operationId": "lANAutomationLogById",
        "summary": "LAN Automation Log by Id",
        "description": "Invoke this API to get the LAN Automation session logs based on the given LAN Automation session id.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/status/{id}",
        "method": "GET",
        "operationId": "lANAutomationStatusById",
        "summary": "LAN Automation Status by Id",
        "description": "Invoke this API to get the LAN Automation session status based on the given Lan Automation session id.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/lan-automation",
        "method": "POST",
        "operationId": "lANAutomationStartV2",
        "summary": "LAN Automation Start V2",
        "description": "Invoke V2 LAN Automation Start API, which supports optional auto-stop processing feature based on the provided timeout or a specific device list, or both. The stop processing will be executed automatically when either of the cases is satisfied, without specifically calling the stop API. The V2 API behaves similarly to V1 if no timeout or device list is provided, and the user needs to call the stop API for LAN Automation stop processing. With the V2 API, the user can also specify the level up to which the devices can be LAN automated.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/log",
        "method": "GET",
        "operationId": "lANAutomationLog",
        "summary": "LAN Automation Log ",
        "description": "Invoke this API to get the LAN Automation session logs.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/lan-automation/{id}",
        "method": "PUT",
        "operationId": "lANAutomationStopAndUpdateDevicesV2",
        "summary": "LAN Automation Stop and Update Devices V2",
        "description": "Invoke this API to stop LAN Automation and update device parameters such as Loopback0 IP address and/or hostname discovered in the current session. ",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation",
        "method": "POST",
        "operationId": "lANAutomationStart",
        "summary": "LAN Automation Start",
        "description": "Invoke this API to start LAN Automation for the given site.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/status",
        "method": "GET",
        "operationId": "lANAutomationStatus",
        "summary": "LAN Automation Status",
        "description": "Invoke this API to get the LAN Automation session status. ",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/log/{id}/{serialNumber}",
        "method": "GET",
        "operationId": "lANAutomationLogsForIndividualDevices",
        "summary": "LAN Automation Logs for Individual Devices",
        "description": "Invoke this API to get the LAN Automation session logs for individual devices based on the given LAN Automation session id and device serial number. ",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id",
          "serialNumber"
        ],
        "query_parameters": [
          "logLevel"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/count",
        "method": "GET",
        "operationId": "lANAutomationSessionCount",
        "summary": "LAN Automation Session Count",
        "description": "Invoke this API to get the total count of LAN Automation sessions.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lan-automation/sessions",
        "method": "GET",
        "operationId": "lANAutomationActiveSessions",
        "summary": "LAN Automation Active Sessions",
        "description": "Invoke this API to get the LAN Automation active session information",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/lanAutomation/portChannels/{id}/addLink",
        "method": "POST",
        "operationId": "addALANAutomatedLinkToAPortChannel",
        "summary": "Add a LAN Automated link to a Port Channel",
        "description": "This API adds a new LAN Automated link as a member to an existing Port Channel, provided the interface is in UP state and already LAN Automated.",
        "tags": [
          "LAN Automation"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Site Design": [
      {
        "path": "/dna/intent/api/v2/buildings/{id}",
        "method": "PUT",
        "operationId": "updatesABuilding",
        "summary": "Updates a building",
        "description": "Updates a building in the network hierarchy.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/buildings/{id}",
        "method": "DELETE",
        "operationId": "deletesABuilding",
        "summary": "Deletes a building",
        "description": "Deletes building in the network hierarchy. This operations fails if there are any floors for this building, or if there are any devices assigned to this building.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/buildings/{id}",
        "method": "GET",
        "operationId": "getsABuilding",
        "summary": "Gets a building",
        "description": "Gets a building in the network hierarchy.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/deviceControllability/settings",
        "method": "GET",
        "operationId": "getDeviceControllabilitySettings",
        "summary": "Get device controllability settings",
        "description": "Device Controllability is a system-level process on Catalyst Center that enforces state synchronization for some device-layer features. Its purpose is to aid in the deployment of required network settings that Catalyst Center needs to manage devices. Changes are made on network devices during discovery, when adding a device to Inventory, or when assigning a device to a site. If changes are made to any settings that are under the scope of this process, these changes are applied to the network devices during the Provision and Update Telemetry Settings operations, even if Device Controllability is disabled. The following device settings will be enabled as part of Device Controllability when devices are discovered. - SNMP Credentials. - NETCONF Credentials. Subsequent to discovery, devices will be added to Inventory. The following device settings will be enabled when devices are added to inventory. - Cisco TrustSec (CTS) Credentials. The following device settings will be enabled when devices are assigned to a site. Some of these settings can be defined at a site level under Design > Network Settings > Telemetry & Wireless. - Wired Endpoint Data Collection Enablement. - Controller Certificates. - SNMP Trap Server Definitions. - Syslog Server Definitions. - Application Visibility. - Application QoS Policy. - Wireless Service Assurance (WSA). - Wireless Telemetry. - DTLS Ciphersuite. - AP Impersonation. If Device Controllability is disabled, Catalyst Center does not configure any of the preceding credentials or settings on devices during discovery, at runtime, or during site assignment. However, the telemetry settings and related configuration are pushed when the device is provisioned or when the update Telemetry Settings action is performed. Catalyst Center identifies and automatically corrects the following telemetry configuration issues on the device. - SWIM certificate issue. - IOS WLC NA certificate issue. - PKCS12 certificate issue. - IOS telemetry configuration issu",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/deviceControllability/settings",
        "method": "PUT",
        "operationId": "updateDeviceControllabilitySettings",
        "summary": "Update device controllability settings",
        "description": "Device Controllability is a system-level process on Catalyst Center that enforces state\nsynchronization for some device-layer features. Its purpose is to aid in the deployment of required\nnetwork settings that Catalyst Center needs to manage devices. Changes are made on network devices \nduring discovery, when adding a device to Inventory, or when assigning a device to a site. If changes \nare made to any settings that are under the scope of this process, these changes are applied to the \nnetwork devices during the Provision and Update Telemetry Settings operations, even if Device \nControllability is disabled. The following device settings will be enabled as part of \nDevice Controllability when devices are discovered. \n\n  - SNMP Credentials.\n  - NETCONF Credentials.\n  \nSubsequent to discovery, devices will be added to Inventory. The following device settings will be \nenabled when devices are added to inventory.\n\n  - Cisco TrustSec (CTS) Credentials.\n  \nThe following device settings will be enabled when devices are assigned to a site. Some of these \nsettings can be defined at a site level under Design > Network Settings > Telemetry & Wireless.\n\n  - Wired Endpoint Data Collection Enablement.\n  - Controller Certificates.\n  - SNMP Trap Server Definitions.\n  - Syslog Server Definitions.\n  - Application Visibility.\n  - Application QoS Policy.\n  - Wireless Service Assurance (WSA).\n  - Wireless Telemetry.\n  - DTLS Ciphersuite.\n  - AP Impersonation.\n  \nIf Device Controllability is disabled, Catalyst Center does not configure any of the preceding \ncredentials or settings on devices during discovery, at runtime, or during site assignment. However, \nthe telemetry settings and related configuration are pushed when the device is provisioned or when the \nupdate Telemetry Settings action is performed. \n\nCatalyst Center identifies and automatically corrects the following telemetry configuration issues on \nthe device.\n\n  - SWIM certificate issue.\n  - IOS WLC NA certificate issue.\n  - PKCS12 certificate issue.\n  - IOS telemetry configuration issue.\n  \nThe autocorrect telemetry config feature is supported only when Device Controllability is enabled.\n",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/unassignFromSite/apply",
        "method": "POST",
        "operationId": "unassignNetworkDevicesFromSites",
        "summary": "Unassign network devices from sites",
        "description": "Unassign unprovisioned network devices from their site. If device controllability is enabled, it will be triggered once device unassigned from site successfully. Device Controllability can be enabled/disabled using `/dna/intent/api/v1/networkDevices/deviceControllability/settings`.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{profileId}/siteAssignments",
        "method": "GET",
        "operationId": "retrievesTheListOfSitesThatTheGivenNetworkProfileForSitesIsAssignedTo",
        "summary": "Retrieves the list of sites that the given network profile for sites is assigned to",
        "description": "Retrieves the list of sites that the given network profile for sites is assigned to.\n\nThe list includes the sites the profile has been directly assigned to, as well as child sites that have inherited the profile.\n",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "profileId"
        ],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{profileId}/siteAssignments",
        "method": "POST",
        "operationId": "assignANetworkProfileForSitesToTheGivenSite",
        "summary": "Assign a network profile for sites to the given site",
        "description": "Assigns a given network profile for sites to a given site. Also assigns the profile to child sites.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "profileId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/count",
        "method": "GET",
        "operationId": "getSitesCount",
        "summary": "Get sites count",
        "description": "Get sites count.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/settings",
        "method": "PUT",
        "operationId": "updatesFloorSettings",
        "summary": "Updates floor settings",
        "description": "Updates UI user preference for floor unit system. Unit sytem change will effect for all floors across all sites.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/settings",
        "method": "GET",
        "operationId": "getFloorSettings",
        "summary": "Get floor settings",
        "description": "Gets UI user preference for floor unit system.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/plannedAccessPointPositions/assignAccessPointPositions",
        "method": "POST",
        "operationId": "assignPlannedAccessPointsToOperationsOnes",
        "summary": "Assign Planned Access Points to operations ones",
        "description": "Assign Planned Access Points to operations ones.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/plannedAccessPointPositions/bulkChange",
        "method": "POST",
        "operationId": "editPlannedAccessPointsPositions",
        "summary": "Edit Planned Access Points Positions",
        "description": "Edit Planned Access Points Positions on the map.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/assignedToSite",
        "method": "GET",
        "operationId": "getSiteAssignedNetworkDevices",
        "summary": "Get site assigned network devices",
        "description": "Get all site assigned network devices. The items in the list are arranged in an order that corresponds with their internal identifiers.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/profileAssignments/count",
        "method": "GET",
        "operationId": "retrievesTheCountOfProfilesThatTheGivenSiteHasBeenAssigned",
        "summary": "Retrieves the count of profiles that the given site has been assigned",
        "description": "Retrieves the count of profiles that the given site has been assigned.  These profiles may either be directly assigned to this site, or were assigned to a parent site and have been inherited.\n",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/areas/{id}",
        "method": "DELETE",
        "operationId": "deletesAnArea",
        "summary": "Deletes an area",
        "description": "Deletes an area in the network hierarchy. This operations fails if there are any child areas or buildings for this area.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/areas/{id}",
        "method": "GET",
        "operationId": "getsAnArea",
        "summary": "Gets an area",
        "description": "Gets an area in the network hierarchy.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/areas/{id}",
        "method": "PUT",
        "operationId": "updatesAnArea",
        "summary": "Updates an area",
        "description": "Updates an area in the network hierarchy.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkprofile/{networkProfileId}/site/{siteId}",
        "method": "POST",
        "operationId": "associate",
        "summary": "Associate",
        "description": "Associate Site to a Network Profile",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "networkProfileId",
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkprofile/{networkProfileId}/site/{siteId}",
        "method": "DELETE",
        "operationId": "disassociate",
        "summary": "Disassociate",
        "description": "Disassociate a Site from a Network Profile",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "networkProfileId",
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites",
        "method": "GET",
        "operationId": "getSites",
        "summary": "Get sites",
        "description": "Get sites.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "nameHierarchy",
          "type",
          "_unitsOfMeasure",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{profileId}/siteAssignments/count",
        "method": "GET",
        "operationId": "retrievesTheCountOfSitesThatTheGivenNetworkProfileForSitesIsAssignedTo",
        "summary": "Retrieves the count of sites that the given network profile for sites is assigned to",
        "description": "Retrieves the count of sites that the given network profile for sites is assigned to.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "profileId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/count",
        "method": "GET",
        "operationId": "retrievesTheCountOfNetworkProfilesForSites",
        "summary": "Retrieves the count of network profiles for sites",
        "description": "Retrieves the count of network profiles for sites",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [
          "type"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/plannedAccessPointPositions/count",
        "method": "GET",
        "operationId": "getPlannedAccessPointsPositionsCount",
        "summary": "Get Planned Access Points Positions count",
        "description": "Retrieve all Planned Access Points Positions count designated for a specific floor",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [
          "name",
          "macAddress",
          "type"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{id}",
        "method": "DELETE",
        "operationId": "deletesAFloor",
        "summary": "Deletes a floor",
        "description": "Deletes a floor from the network hierarchy. This operations fails if there are any devices assigned to this floor.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{id}",
        "method": "PUT",
        "operationId": "updatesAFloor",
        "summary": "Updates a floor",
        "description": "Updates a floor in the network hierarchy.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{id}",
        "method": "GET",
        "operationId": "getsAFloor",
        "summary": "Gets a floor",
        "description": "Gets a floor in the network hierarchy.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_unitsOfMeasure"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{profileId}/siteAssignments/bulk",
        "method": "POST",
        "operationId": "assignANetworkProfileForSitesToAListOfSites",
        "summary": "Assign a network profile for sites to a list of sites",
        "description": "Assign a network profile for sites to a list of sites. Also assigns the profile to child sites.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "profileId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{profileId}/siteAssignments/bulk",
        "method": "DELETE",
        "operationId": "unassignsANetworkProfileForSitesFromMultipleSites",
        "summary": "Unassigns a network profile for sites from multiple sites",
        "description": "Unassigns a given network profile for sites from multiple sites. The profile must be removed from the containing building first if this site is a floor.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "profileId"
        ],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/plannedAccessPointPositions",
        "method": "GET",
        "operationId": "getPlannedAccessPointsPositions",
        "summary": "Get Planned Access Points Positions",
        "description": "Retrieve all Planned Access Points Positions designated for a specific floor",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [
          "name",
          "macAddress",
          "type",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/buildings",
        "method": "POST",
        "operationId": "createsABuilding",
        "summary": "Creates a building",
        "description": "Creates a building in the network hierarchy under area.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{id}",
        "method": "GET",
        "operationId": "retrieveANetworkProfileForSitesById",
        "summary": "Retrieve a network profile for sites by id",
        "description": "Retrieves a network profile for sites by id.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{id}",
        "method": "DELETE",
        "operationId": "deletesANetworkProfileForSites",
        "summary": "Deletes a network profile for sites",
        "description": "Deletes a network profile for sites.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors",
        "method": "POST",
        "operationId": "createsAFloor",
        "summary": "Creates a floor",
        "description": "Create a floor in the network hierarchy under building.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{profileId}/siteAssignments/{id}",
        "method": "DELETE",
        "operationId": "unassignsANetworkProfileForSitesFromASite",
        "summary": "Unassigns a network profile for sites from a site",
        "description": "Unassigns a given network profile for sites from a site. The profile must be removed from parent sites first, otherwise this operation will not ulimately  unassign the profile.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "profileId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/assignToSite/apply",
        "method": "POST",
        "operationId": "assignNetworkDevicesToASite",
        "summary": "Assign network devices to a site",
        "description": "Assign unprovisioned network devices to a site. Along with that it can also be used to assign unprovisioned network devices to a different site. If device controllability is enabled, it will be triggered once device assigned to site successfully. Device Controllability can be enabled/disabled using `/dna/intent/api/v1/networkDevices/deviceControllability/settings`.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites",
        "method": "GET",
        "operationId": "retrievesTheListOfNetworkProfilesForSites",
        "summary": "Retrieves the list of network profiles for sites",
        "description": "Retrieves the list of network profiles for sites.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit",
          "sortBy",
          "order",
          "type"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{siteId}/profileAssignments",
        "method": "GET",
        "operationId": "retrievesTheListOfNetworkProfilesThatTheGivenSiteHasBeenAssigned",
        "summary": "Retrieves the list of network profiles that the given site has been assigned",
        "description": "Retrieves the list of profiles that the given site has been assigned.  These profiles may either be directly assigned to this site, or were assigned to a parent site and have been inherited.\n\nThese assigments can be modified via the `/dna/intent/api/v1/networkProfilesForSites/{profileId}/siteAssignments` resources.\n",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/areas",
        "method": "POST",
        "operationId": "createsAnArea",
        "summary": "Creates an area",
        "description": "Creates an area in the network hierarchy.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/plannedAccessPointPositions/bulk",
        "method": "POST",
        "operationId": "addPlannedAccessPointsPositions",
        "summary": "Add Planned Access Points Positions",
        "description": "Add Planned Access Points Positions on the map.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/notAssignedToSite/count",
        "method": "GET",
        "operationId": "getSiteNotAssignedNetworkDevicesCount",
        "summary": "Get site not assigned network devices count",
        "description": "Get network devices count that are not assigned to any site.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/notAssignedToSite",
        "method": "GET",
        "operationId": "getSiteNotAssignedNetworkDevices",
        "summary": "Get site not assigned network devices",
        "description": "Get network devices that are not assigned to any site.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/accessPointPositions/bulkChange",
        "method": "POST",
        "operationId": "editTheAccessPointsPositions",
        "summary": "Edit the Access Points Positions",
        "description": "Position or reposition the Access Points on the map.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/accessPointPositions/count",
        "method": "GET",
        "operationId": "getAccessPointsPositionsCount",
        "summary": "Get Access Points positions count",
        "description": "Retrieve Access Points positions count assigned for a specific floor",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [
          "name",
          "macAddress",
          "type",
          "model"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/{id}/assignedToSite",
        "method": "GET",
        "operationId": "getSiteAssignedNetworkDevice",
        "summary": "Get site assigned network device",
        "description": "Get site assigned network device. The items in the list are arranged in an order that corresponds with their internal identifiers.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/plannedAccessPointPositions/{id}",
        "method": "DELETE",
        "operationId": "deletePlannedAccessPointsPosition",
        "summary": "Delete Planned Access Points Position",
        "description": "Delete specified Planned Access Points Position designated for a specific floor.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId",
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDevices/assignedToSite/count",
        "method": "GET",
        "operationId": "getSiteAssignedNetworkDevicesCount",
        "summary": "Get site assigned network devices count",
        "description": "Get all network devices count under the given site in the network hierarchy.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/bulk",
        "method": "POST",
        "operationId": "createSites",
        "summary": "Create sites",
        "description": "Create area/building/floor together in bulk. If site already exist, then that will be ignored. Sites in the request payload need not to be ordered.",
        "tags": [
          "Site Design"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{floorId}/accessPointPositions",
        "method": "GET",
        "operationId": "getAccessPointsPositions",
        "summary": "Get Access Points positions",
        "description": "Retrieve all Access Points positions assigned for a specific floor",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "floorId"
        ],
        "query_parameters": [
          "name",
          "macAddress",
          "type",
          "model",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/floors/{id}/uploadImage",
        "method": "POST",
        "operationId": "uploadsFloorImage",
        "summary": "Uploads floor image",
        "description": "Uploads floor image.",
        "tags": [
          "Site Design"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Device Onboarding (PnP)": [
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/{id}",
        "method": "PUT",
        "operationId": "updateDevice",
        "summary": "Update Device",
        "description": "Updates device details specified by device id in PnP database",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/{id}",
        "method": "GET",
        "operationId": "getDeviceById",
        "summary": "Get Device by Id",
        "description": "Returns device details specified by device id",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/{id}",
        "method": "DELETE",
        "operationId": "deleteDeviceByIdFromPnP",
        "summary": "Delete Device by Id from PnP",
        "description": "Deletes specified device from PnP database",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/unclaim",
        "method": "POST",
        "operationId": "un-ClaimDevice",
        "summary": "Un-Claim Device",
        "description": "Un-Claims one of more devices with specified workflow (Deprecated).",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result",
        "method": "GET",
        "operationId": "getSyncResultForVirtualAccount",
        "summary": "Get Sync Result for Virtual Account",
        "description": "Returns the summary of devices synced from the given smart account & virtual account with PnP (Deprecated)",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [
          "domain",
          "name"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-settings/savacct",
        "method": "POST",
        "operationId": "addVirtualAccount",
        "summary": "Add Virtual Account",
        "description": "Registers a Smart Account, Virtual Account and the relevant server profile info with the PnP System & database. The devices present in the registered virtual account are synced with the PnP database as well. The response payload returns the new profile",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-settings/savacct",
        "method": "PUT",
        "operationId": "updatePnPServerProfile",
        "summary": "Update PnP Server Profile",
        "description": "Updates the PnP Server profile in a registered Virtual Account in the PnP database. The response payload returns the updated smart & virtual account info",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/import",
        "method": "POST",
        "operationId": "importDevicesInBulk",
        "summary": "Import Devices in bulk",
        "description": "Add devices to PnP in bulk",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-settings/vacct",
        "method": "DELETE",
        "operationId": "deregisterVirtualAccount",
        "summary": "Deregister Virtual Account",
        "description": "Deregisters the specified smart account & virtual account info and the associated device information from the PnP System & database. The devices associated with the deregistered virtual account are removed from the PnP database as well. The response payload contains the deregistered smart & virtual account information",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [
          "domain",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/api/v1/onboarding/pnp-device/authorize",
        "method": "POST",
        "operationId": "authorizeDevice",
        "summary": "Authorize Device",
        "description": "Authorizes one of more devices. A device can only be authorized if Authorization is set in Device Settings.",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-workflow/{id}",
        "method": "PUT",
        "operationId": "updateWorkflow",
        "summary": "Update Workflow",
        "description": "Updates an existing workflow",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-workflow/{id}",
        "method": "GET",
        "operationId": "getWorkflowById",
        "summary": "Get Workflow by Id",
        "description": "Returns a workflow specified by id",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-workflow/{id}",
        "method": "DELETE",
        "operationId": "deleteWorkflowById",
        "summary": "Delete Workflow By Id",
        "description": "Deletes a workflow specified by id",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-settings/sacct",
        "method": "GET",
        "operationId": "getSmartAccountList",
        "summary": "Get Smart Account List",
        "description": "Returns the list of Smart Account domains",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/site-claim",
        "method": "POST",
        "operationId": "claimADeviceToASite",
        "summary": "Claim a Device to a Site",
        "description": "Claim a device based on Catalyst Center Site-based design process. Some required parameters differ based on device platform:\n\nDefault/StackSwitch: imageInfo, configInfo.  \n\nAccessPoints: rfProfile.  \n\nSensors: sensorProfile.  \n\nCatalystWLC/MobilityExpress/EWC: staticIP, subnetMask, gateway. vlanId and ipInterfaceName are also allowed for Catalyst 9800 WLCs.",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-settings/sacct/{domain}/vacct",
        "method": "GET",
        "operationId": "getVirtualAccountList",
        "summary": "Get Virtual Account List",
        "description": "Returns list of virtual accounts associated with the specified smart account",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [
          "domain"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-workflow/count",
        "method": "GET",
        "operationId": "getWorkflowCount",
        "summary": "Get Workflow Count",
        "description": "Returns the workflow count",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-settings",
        "method": "GET",
        "operationId": "getPnPGlobalSettings",
        "summary": "Get PnP global settings",
        "description": "Returns global PnP settings of the user",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-settings",
        "method": "PUT",
        "operationId": "updatePnPGlobalSettings",
        "summary": "Update PnP global settings",
        "description": "Updates the user's list of global PnP settings",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-workflow",
        "method": "POST",
        "operationId": "addAWorkflow",
        "summary": "Add a Workflow",
        "description": "Adds a PnP Workflow along with the relevant tasks in the workflow into the PnP database",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-workflow",
        "method": "GET",
        "operationId": "getWorkflows",
        "summary": "Get Workflows",
        "description": "Returns the list of workflows based on filter criteria. If a limit is not specified, it will default to return 50 workflows. Pagination and sorting are also supported by this endpoint",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "sort",
          "sortOrder",
          "type",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/vacct-sync",
        "method": "POST",
        "operationId": "syncVirtualAccountDevices",
        "summary": "Sync Virtual Account Devices",
        "description": "Synchronizes the device info from the given smart account & virtual account with the PnP database. The response payload returns a list of synced devices (Deprecated).",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/reset",
        "method": "POST",
        "operationId": "resetDevice",
        "summary": "Reset Device",
        "description": "Recovers a device from a Workflow Execution Error state",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/claim",
        "method": "POST",
        "operationId": "claimDevice",
        "summary": "Claim Device",
        "description": "Claims one of more devices with specified workflow",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/site-config-preview",
        "method": "POST",
        "operationId": "previewConfig",
        "summary": "Preview Config",
        "description": "Triggers a preview for site-based Day 0 Configuration",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/count",
        "method": "GET",
        "operationId": "getDeviceCount-2",
        "summary": "Get Device Count",
        "description": "Returns the device count based on filter criteria. This is useful for pagination",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [
          "serialNumber",
          "state",
          "onbState",
          "name",
          "pid",
          "source",
          "workflowId",
          "workflowName",
          "smartAccountId",
          "virtualAccountId",
          "lastContact"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device/history",
        "method": "GET",
        "operationId": "getDeviceHistory",
        "summary": "Get Device History",
        "description": "Returns history for a specific device. Serial number is a required parameter",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [
          "serialNumber",
          "sort",
          "sortOrder"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device",
        "method": "GET",
        "operationId": "getDeviceList-2",
        "summary": "Get Device list",
        "description": "Returns list of devices from Plug & Play based on filter criteria. Returns 50 devices by default. This endpoint supports Pagination and Sorting.",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "sort",
          "sortOrder",
          "serialNumber",
          "state",
          "onbState",
          "name",
          "pid",
          "source",
          "workflowId",
          "workflowName",
          "smartAccountId",
          "virtualAccountId",
          "lastContact",
          "macAddress",
          "hostname",
          "siteName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/onboarding/pnp-device",
        "method": "POST",
        "operationId": "addDevice-2",
        "summary": "Add Device",
        "description": "Adds a device to the PnP database.",
        "tags": [
          "Device Onboarding (PnP)"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Network Settings": [
      {
        "path": "/dna/intent/api/v1/ipam/siteIpAddressPools/count",
        "method": "GET",
        "operationId": "countsIPAddressSubpools.",
        "summary": "Counts IP address subpools.",
        "description": "Counts IP address subpools, which reserve address space from a global pool (or global pools).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/telemetrySettings",
        "method": "GET",
        "operationId": "retrieveTelemetrySettingsForASite",
        "summary": "Retrieve Telemetry settings for a site",
        "description": "Retrieves telemetry settings for the given site. `null` values indicate that the setting will be inherited from the parent site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/telemetrySettings",
        "method": "PUT",
        "operationId": "setTelemetrySettingsForASite",
        "summary": "Set Telemetry settings for a site",
        "description": "Sets telemetry settings for the given site; `null` values indicate that the setting will be inherited from the parent site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/bannerSettings",
        "method": "PUT",
        "operationId": "setBannerSettingsForASite",
        "summary": "Set banner settings for a site",
        "description": "Set banner settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the settings is unset.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/bannerSettings",
        "method": "GET",
        "operationId": "retrieveBannerSettingsForASite",
        "summary": "Retrieve banner settings for a site",
        "description": "Retrieve banner settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the setting is unset at a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/credential-to-site/{siteId}",
        "method": "POST",
        "operationId": "assignDeviceCredentialToSiteV2",
        "summary": "Assign Device Credential To Site V2",
        "description": "API to assign Device Credential to a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/deviceCredentials/status",
        "method": "GET",
        "operationId": "getNetworkDevicesCredentialsSyncStatus",
        "summary": "Get network devices credentials sync status",
        "description": "Get network devices credentials sync status at a given site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/telemetrySettings/apply",
        "method": "POST",
        "operationId": "updateADevice(s)TelemetrySettingsToConformToTheTelemetrySettingsForItsSite",
        "summary": "Update a device(s) telemetry settings to conform to the telemetry settings for its site",
        "description": "Update a device(s) telemetry settings to conform to the telemetry settings for its site.  One Task is created to track the update, for more granular status tracking, split your devices into multiple requests.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/timeZoneSettings",
        "method": "PUT",
        "operationId": "setTimeZoneForASite",
        "summary": "Set time zone for a site",
        "description": "Set time zone settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the settings is unset.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/timeZoneSettings",
        "method": "GET",
        "operationId": "retrieveTimeZoneSettingsForASite",
        "summary": "Retrieve time zone settings for a site",
        "description": "Retrieve time zone settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the setting is unset at a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/aaaSettings",
        "method": "PUT",
        "operationId": "setAAASettingsForASite",
        "summary": "Set AAA settings for a site",
        "description": "Set AAA settings for a site; `null` values indicate that the settings will be inherited from the parent site; empty objects (`{}`) indicate that the settings is unset.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/aaaSettings",
        "method": "GET",
        "operationId": "retrieveAAASettingsForASite",
        "summary": "Retrieve AAA settings for a site",
        "description": "Retrieve AAA settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the setting is unset at a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/globalIpAddressPools/{globalIpAddressPoolId}/subpools/count",
        "method": "GET",
        "operationId": "countsSubpoolsOfAGlobalIPAddressPool.",
        "summary": "Counts subpools of a global IP address pool.",
        "description": "Counts subpools of a global IP address pool.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "globalIpAddressPoolId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/network/{siteId}",
        "method": "POST",
        "operationId": "createNetworkV2",
        "summary": "Create Network V2",
        "description": "API to create network settings for DHCP,  Syslog, SNMP, NTP, Network AAA, Client and Endpoint AAA, and/or DNS center server settings.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/network/{siteId}",
        "method": "PUT",
        "operationId": "updateNetworkV2",
        "summary": "Update Network V2",
        "description": "API to update network settings for DHCP, Syslog, SNMP, NTP, Network AAA, Client and Endpoint AAA, and/or DNS center server settings.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/sp-profile/{spProfileName}",
        "method": "DELETE",
        "operationId": "deleteSPProfileV2",
        "summary": "Delete SP Profile V2",
        "description": "API to delete Service Provider Profile (QoS).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "spProfileName"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/deviceCredentials/apply",
        "method": "POST",
        "operationId": "syncNetworkDevicesCredential",
        "summary": "Sync network devices credential",
        "description": "When sync is triggered at a site with the credential that are associated to the same site, network devices in impacted sites (child sites which are inheriting the credential) get managed in inventory with the associated site credential. Credential gets configured on network devices before these get managed in inventory. Please make a note that cli credential wouldn't be configured on AAA authenticated devices but they just get managed with the associated site cli credential.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{profileId}/templates/count",
        "method": "GET",
        "operationId": "retrieveCountOfCLITemplatesAttachedToANetworkProfile",
        "summary": "Retrieve count of CLI templates attached to a network profile",
        "description": "Retrieves the count of all CLI templates attached to a network profile by the profile ID.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "profileId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/deviceCredentials",
        "method": "PUT",
        "operationId": "updateDeviceCredentialSettingsForASite.",
        "summary": "Update device credential settings for a site.",
        "description": "Updates device credential settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the credential is unset, and that no credential of that type will be used for the site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/deviceCredentials",
        "method": "GET",
        "operationId": "getDeviceCredentialSettingsForASite",
        "summary": "Get device credential settings for a site",
        "description": "Gets device credential settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the credential is unset, and that no credential of that type will be used for the site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/globalIpAddressPools/{id}",
        "method": "PUT",
        "operationId": "updatesAGlobalIPAddressPool.",
        "summary": "Updates a global IP address pool.",
        "description": "Updates a global IP address pool.\n\nRestrictions on updating a global IP address pool:\n- The `poolType` cannot be changed.\n- The `subnet` and `prefixLength` within `addressSpace` cannot be changed.\n",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/globalIpAddressPools/{id}",
        "method": "GET",
        "operationId": "retrievesAGlobalIPAddressPool.",
        "summary": "Retrieves a global IP address pool.",
        "description": "Retrieves a global IP address pool. Global pools are not associated with any particular site, but may have portions of their address space reserved by site-specific subpools.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/globalIpAddressPools/{id}",
        "method": "DELETE",
        "operationId": "deleteAGlobalIPAddressPool.",
        "summary": "Delete a global IP address pool.",
        "description": "Deletes a global IP address pool.  A global IP address pool can only be deleted if there are no subpools reserving address space from it.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/globalIpAddressPools/{globalIpAddressPoolId}/subpools",
        "method": "GET",
        "operationId": "retrievesSubpoolsIDsOfAGlobalIPAddressPool.",
        "summary": "Retrieves subpools IDs of a global IP address pool.",
        "description": "Retrieves subpools IDs of a global IP address pool.  The IDs can be fetched with `/dna/intent/api/v1/ipam/siteIpAddressPools/{id}`",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "globalIpAddressPoolId"
        ],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/globalIpAddressPools",
        "method": "GET",
        "operationId": "retrievesGlobalIPAddressPools.",
        "summary": "Retrieves global IP address pools.",
        "description": "Retrieves global IP address pools. Global pools are not associated with any particular site, but may have portions of their address space reserved by site-specific subpools.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/globalIpAddressPools",
        "method": "POST",
        "operationId": "createAGlobalIPAddressPool.",
        "summary": "Create a global IP address pool.",
        "description": "Creates a global IP address pool, which is not bound to a particular site. A global pool must be either an IPv4 or IPv6 pool.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/service-provider",
        "method": "PUT",
        "operationId": "updateSPProfileV2",
        "summary": "Update SP Profile V2",
        "description": "API to update Service Provider Profile (QoS).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/service-provider",
        "method": "POST",
        "operationId": "createSPProfileV2",
        "summary": "Create SP Profile V2",
        "description": "API to create Service Provider Profile(QOS).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/service-provider",
        "method": "GET",
        "operationId": "getServiceProviderDetailsV2",
        "summary": "Get Service Provider Details V2",
        "description": "API to get Service Provider details (QoS).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/dnsSettings",
        "method": "PUT",
        "operationId": "setDNSSettingsForASite",
        "summary": "Set DNS settings for a site",
        "description": "Set DNS settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the settings is unset.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/dnsSettings",
        "method": "GET",
        "operationId": "retrieveDNSSettingsForASite",
        "summary": "Retrieve DNS settings for a site",
        "description": "Retrieve DNS settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the setting is unset at a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/imageDistributionSettings",
        "method": "PUT",
        "operationId": "setImageDistributionSettingsForASite",
        "summary": "Set image distribution settings for a site",
        "description": "Set image distribution settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the settings is unset.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/imageDistributionSettings",
        "method": "GET",
        "operationId": "retrieveImageDistributionSettingsForASite",
        "summary": "Retrieve image distribution settings for a site",
        "description": "Retrieve image distribution settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the setting is unset at a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/siteIpAddressPools/{id}",
        "method": "GET",
        "operationId": "retrievesAnIPAddressSubpool.",
        "summary": "Retrieves an IP address subpool.",
        "description": "Retrieves an IP address subpool, which reserves address space from a global pool (or global pools) for a particular site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/siteIpAddressPools/{id}",
        "method": "PUT",
        "operationId": "updatesAnIPAddressSubpool.",
        "summary": "Updates an IP address subpool.",
        "description": "Updates an IP address subpool, which reserves address space from a global pool (or global pools) for a particular site.\n\nRestrictions on updating an IP address subpool:\n- The `poolType` cannot be changed.\n- The `siteId` cannot be changed.\n- The `ipV4AddressSpace` may not be removed.\n- The `globalPoolId`, `subnet`, and `prefixLength` cannot be changed once it's already been set. However you may edit a subpool to add an IP address space if it does not already have one.\n",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/siteIpAddressPools/{id}",
        "method": "DELETE",
        "operationId": "releaseAnIPAddressSubpool.",
        "summary": "Release an IP address subpool.",
        "description": "Releases an IP address subpool.\n\n**Release** completely removes the subpool from the site, and from all child sites, and frees the address use from the global pool(s).  Subpools cannot be released when assigned addresses in use.\n",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/ntpSettings",
        "method": "PUT",
        "operationId": "setNTPSettingsForASite",
        "summary": "Set NTP settings for a site",
        "description": "Set NTP settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the settings is unset.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/ntpSettings",
        "method": "GET",
        "operationId": "retrieveNTPSettingsForASite",
        "summary": "Retrieve NTP settings for a site",
        "description": "Retrieve NTP settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the setting is unset at a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/siteIpAddressPools",
        "method": "GET",
        "operationId": "retrievesIPAddressSubpools.",
        "summary": "Retrieves IP address subpools.",
        "description": "Retrieves IP address subpools, which reserve address space from a global pool (or global pools).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit",
          "sortBy",
          "order",
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/siteIpAddressPools",
        "method": "POST",
        "operationId": "reserve(create)IPAddressSubpools.",
        "summary": "Reserve (create) IP address subpools.",
        "description": "Reserves (creates) an IP address subpool, which reserves address space from a global pool (or global pools) for a particular site (and it's child sites). A subpool must be either an IPv4 or dual-stack pool, with `ipV4AddressSpace` and optionally `ipV6AddressSpace` properties specified.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkProfilesForSites/{profileId}/templates",
        "method": "GET",
        "operationId": "retrieveCLITemplatesAttachedToANetworkProfile",
        "summary": "Retrieve CLI templates attached to a network profile",
        "description": "Retrieves a list of CLI templates attached to a network profile based on the network profile ID.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "profileId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/dhcpSettings",
        "method": "GET",
        "operationId": "retrieveDHCPSettingsForASite",
        "summary": "Retrieve DHCP settings for a site",
        "description": "Retrieve DHCP settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the setting is unset at a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "_inherited"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sites/{id}/dhcpSettings",
        "method": "PUT",
        "operationId": "setDhcpSettingsForASite",
        "summary": "Set dhcp settings for a site",
        "description": "Set DHCP settings for a site; `null` values indicate that the setting will be inherited from the parent site; empty objects (`{}`) indicate that the settings is unset.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/globalIpAddressPools/count",
        "method": "GET",
        "operationId": "countsGlobalIPAddressPools.",
        "summary": "Counts global IP address pools.",
        "description": "Counts global IP address pools. Global pools are not associated with any particular site, but may have portions of their address space reserved by site-specific subpools.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/network",
        "method": "GET",
        "operationId": "getNetworkV2",
        "summary": "Get Network V2",
        "description": "API to get SNMP, NTP, Network AAA, Client and Endpoint AAA, and/or DNS center server settings.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-pool/{id}",
        "method": "DELETE",
        "operationId": "deleteGlobalIPPool",
        "summary": "Delete Global IP Pool",
        "description": "API to delete global IP pool.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network",
        "method": "GET",
        "operationId": "getNetwork",
        "summary": "Get Network",
        "description": "API to get  DHCP and DNS center server details.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/sp-profile/{spProfileName}",
        "method": "DELETE",
        "operationId": "deleteSPProfile",
        "summary": "Delete SP Profile",
        "description": "API to delete Service Provider Profile (QoS).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "spProfileName"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/reserve-ip-subpool",
        "method": "GET",
        "operationId": "getReserveIPSubpool",
        "summary": "Get Reserve IP Subpool",
        "description": "API to get the ip subpool info.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId",
          "offset",
          "limit",
          "ignoreInheritedGroups",
          "poolUsage",
          "groupName"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/service-provider",
        "method": "GET",
        "operationId": "getServiceProviderDetails",
        "summary": "Get Service provider Details",
        "description": "API to get service provider details (QoS).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/service-provider",
        "method": "PUT",
        "operationId": "updateSPProfile",
        "summary": "Update SP Profile",
        "description": "API to update Service Provider Profile (QoS).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/service-provider",
        "method": "POST",
        "operationId": "createSPProfile",
        "summary": "Create SP Profile",
        "description": "API to create Service Provider Profile(QOS).",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network/{siteId}",
        "method": "PUT",
        "operationId": "updateNetwork",
        "summary": "Update Network",
        "description": "API to update network settings for DHCP,  Syslog, SNMP, NTP, Network AAA, Client and EndPoint AAA, and/or DNS server settings.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network/{siteId}",
        "method": "POST",
        "operationId": "createNetwork",
        "summary": "Create Network",
        "description": "API to create a network for DHCP,  Syslog, SNMP, NTP, Network AAA, Client and EndPoint AAA, and/or DNS center server settings.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-pool",
        "method": "PUT",
        "operationId": "updateGlobalPool",
        "summary": "Update Global Pool",
        "description": "API to update global pool. There is a limit of updating 25 global pools per request.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-pool",
        "method": "GET",
        "operationId": "getGlobalPool",
        "summary": "Get Global Pool",
        "description": "API to get the global pool.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-pool",
        "method": "POST",
        "operationId": "createGlobalPool",
        "summary": "Create Global Pool",
        "description": "API to create global pool. There is a limit of creating 25 global pools per request.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-credential",
        "method": "GET",
        "operationId": "getDeviceCredentialDetails",
        "summary": "Get Device Credential Details",
        "description": "API to get device credential details.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-credential",
        "method": "PUT",
        "operationId": "updateDeviceCredentials",
        "summary": "Update Device Credentials",
        "description": "API to update device credentials.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-credential",
        "method": "POST",
        "operationId": "createDeviceCredentials",
        "summary": "Create Device Credentials",
        "description": "API to create device credentials.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/reserve-ip-subpool/{siteId}",
        "method": "POST",
        "operationId": "reserveIPSubpool",
        "summary": "Reserve IP Subpool",
        "description": "API to reserve an ip subpool from the global pool",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/reserve-ip-subpool/{siteId}",
        "method": "PUT",
        "operationId": "updateReserveIPSubpool",
        "summary": "Update Reserve IP Subpool",
        "description": "API to update ip subpool from the global pool",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [
          "id"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-credential/{id}",
        "method": "DELETE",
        "operationId": "deleteDeviceCredential",
        "summary": "Delete Device Credential",
        "description": "Delete device credential.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/credential-to-site/{siteId}",
        "method": "POST",
        "operationId": "assignDeviceCredentialToSite",
        "summary": "Assign Device Credential To Site",
        "description": "Assign Device Credential to a site.",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "siteId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/reserve-ip-subpool/{id}",
        "method": "DELETE",
        "operationId": "releaseReserveIPSubpool",
        "summary": "Release Reserve IP Subpool",
        "description": "API to delete the reserved ip subpool",
        "tags": [
          "Network Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Configuration Archive": [
      {
        "path": "/dna/intent/api/v1/network-device-config",
        "method": "GET",
        "operationId": "getConfigurationArchiveDetails",
        "summary": "Get configuration archive details",
        "description": "Returns the historical device configurations (running configuration , startup configuration , vlan if applicable) by specified criteria",
        "tags": [
          "Configuration Archive"
        ],
        "parameters": [],
        "query_parameters": [
          "deviceId",
          "fileType",
          "createdTime",
          "createdBy",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device-archive/cleartext",
        "method": "POST",
        "operationId": "exportDeviceConfigurations",
        "summary": "Export Device configurations",
        "description": "Export Device configuration for every device that is provided will be included in an encrypted zip file.",
        "tags": [
          "Configuration Archive"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceConfigFiles/{id}/downloadUnmasked",
        "method": "POST",
        "operationId": "downloadUnmasked(raw)DeviceConfigurationAsZIP",
        "summary": "Download Unmasked (raw) Device Configuration as ZIP",
        "description": "Download the unmasked (raw) device configuration by providing the file `id` and a `password`. The response will be a password-protected zip file containing the unmasked configuration. Password must contain a minimum of 8 characters, one lowercase letter, one uppercase letter, one number, one special character (`-=[];,./~!@#$%^&*()_+{}|:?`). It may not contain white space or the characters `<>`.",
        "tags": [
          "Configuration Archive"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceConfigFiles",
        "method": "GET",
        "operationId": "getNetworkDeviceConfigurationFileDetails",
        "summary": "Get Network Device Configuration File Details",
        "description": "Retrieves the list of network device configuration file details, sorted by createdTime in descending order. Use /intent/api/v1/networkDeviceConfigFiles/{id}/downloadMasked to download masked configurations, or /intent/api/v1/networkDeviceConfigFiles/{id}/downloadUnmasked for unmasked configurations.",
        "tags": [
          "Configuration Archive"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "networkDeviceId",
          "fileType",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceConfigFiles/count",
        "method": "GET",
        "operationId": "countOfNetworkDeviceConfigurationFiles",
        "summary": "Count of Network Device Configuration Files",
        "description": "Retrieves count the details of the network device configuration files.",
        "tags": [
          "Configuration Archive"
        ],
        "parameters": [],
        "query_parameters": [
          "id",
          "networkDeviceId",
          "fileType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceConfigFiles/{id}",
        "method": "GET",
        "operationId": "getConfigurationFileDetailsByID",
        "summary": "Get Configuration File Details by ID",
        "description": "Retrieves the details of a specific network device configuration file using the `id`.",
        "tags": [
          "Configuration Archive"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceConfigFiles/{id}/downloadMasked",
        "method": "POST",
        "operationId": "downloadMaskedDeviceConfiguration",
        "summary": "Download masked device configuration",
        "description": "Download the masked (sanitized) device configuration by providing the file `id`.",
        "tags": [
          "Configuration Archive"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Device Replacement": [
      {
        "path": "/dna/intent/api/v1/device-replacement/workflow",
        "method": "POST",
        "operationId": "deployDeviceReplacementWorkflow",
        "summary": "Deploy device replacement workflow",
        "description": "API to trigger RMA workflow that will replace faulty device with replacement device with same configuration and images",
        "tags": [
          "Device Replacement"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-replacement",
        "method": "PUT",
        "operationId": "unMarkDeviceForReplacement",
        "summary": "UnMark device for replacement",
        "description": "UnMarks device for replacement",
        "tags": [
          "Device Replacement"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-replacement",
        "method": "POST",
        "operationId": "markDeviceForReplacement",
        "summary": "Mark device for replacement",
        "description": "Marks device for replacement",
        "tags": [
          "Device Replacement"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-replacement",
        "method": "GET",
        "operationId": "returnListOfReplacementDevicesWithReplacementDetails",
        "summary": "Return list of replacement devices with replacement details",
        "description": "Get list of replacement devices with replacement details and it can filter replacement devices based on Faulty Device Name,Faulty Device Platform, Replacement Device Platform, Faulty Device Serial Number,Replacement Device Serial Number, Device Replacement status, Product Family.",
        "tags": [
          "Device Replacement"
        ],
        "parameters": [],
        "query_parameters": [
          "faultyDeviceName",
          "faultyDevicePlatform",
          "replacementDevicePlatform",
          "faultyDeviceSerialNumber",
          "replacementDeviceSerialNumber",
          "replacementStatus",
          "family",
          "sortBy",
          "sortOrder",
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceReplacements/{id}",
        "method": "GET",
        "operationId": "retrieveTheStatusOfDeviceReplacementWorkflowThatReplacesAFaultyDeviceWithAReplacementDevice.",
        "summary": "Retrieve the status of device replacement workflow that replaces a faulty device with a replacement device.",
        "description": "Fetches the status of the device replacement workflow for a given device replacement `id`. Invoke the API `/dna/intent/api/v1/networkDeviceReplacements` to `GET` the list of all device replacements and use the `id` field data as input to this API.\n",
        "tags": [
          "Device Replacement"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/device-replacement/count",
        "method": "GET",
        "operationId": "returnReplacementDevicesCount",
        "summary": "Return replacement devices count",
        "description": "Get replacement devices count",
        "tags": [
          "Device Replacement"
        ],
        "parameters": [],
        "query_parameters": [
          "replacementStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/networkDeviceReplacements",
        "method": "GET",
        "operationId": "retrieveTheStatusOfAllTheDeviceReplacementWorkflows.",
        "summary": "Retrieve the status of all the device replacement workflows.",
        "description": "Retrieve the list of device replacements with replacement details. Filters can be applied based on faulty device name, faulty device platform, faulty device serial number, replacement device platform, replacement device serial number, device replacement status, device family.\n",
        "tags": [
          "Device Replacement"
        ],
        "parameters": [],
        "query_parameters": [
          "family",
          "faultyDeviceName",
          "faultyDevicePlatform",
          "faultyDeviceSerialNumber",
          "replacementDevicePlatform",
          "replacementDeviceSerialNumber",
          "replacementStatus",
          "offset",
          "limit",
          "sortBy",
          "sortOrder"
        ],
        "version": "1.0.0"
      }
    ]
  },
  "Operational Tasks": {
    "Tag": [
      {
        "path": "/dna/intent/api/v1/tag/{id}/member",
        "method": "POST",
        "operationId": "addMembersToTheTag",
        "summary": "Add members to the tag",
        "description": "Adds members to the tag specified by id",
        "tags": [
          "Tag"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag/{id}/member",
        "method": "GET",
        "operationId": "getTagMembersById",
        "summary": "Get Tag members by Id",
        "description": "Returns tag members specified by id",
        "tags": [
          "Tag"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "memberType",
          "offset",
          "limit",
          "memberAssociationType",
          "level"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tags/networkDevices/membersAssociations",
        "method": "GET",
        "operationId": "retrieveTagsAssociatedWithNetworkDevices.",
        "summary": "Retrieve tags associated with network devices.",
        "description": "Fetches the tags associated with network devices. Devices that don't have any tags associated will not be included in the response. A tag is a user-defined or system-defined construct to group resources. When a device is tagged, it is called a member of the tag.",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tags/networkDevices/membersAssociations/bulk",
        "method": "PUT",
        "operationId": "updateTagsAssociatedWithTheNetworkDevices.",
        "summary": "Update tags associated with the network devices.",
        "description": "Updates the tags associated with the devices. A tag is a user-defined or system-defined construct to group resources. When a device is tagged, it is called a member of the tag. A tag can be created by using this POST `/dna/intent/api/v1/tag` API.",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag",
        "method": "POST",
        "operationId": "createTag",
        "summary": "Create Tag",
        "description": "Creates tag with specified tag attributes",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag",
        "method": "PUT",
        "operationId": "updateTag",
        "summary": "Update Tag",
        "description": "Updates a tag specified by id",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag",
        "method": "GET",
        "operationId": "getTag",
        "summary": "Get Tag",
        "description": "Returns the tags for given filter criteria",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "additionalInfo.nameSpace",
          "additionalInfo.attributes",
          "level",
          "offset",
          "limit",
          "size",
          "field",
          "sortBy",
          "order",
          "systemTag"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag/{id}/member/count",
        "method": "GET",
        "operationId": "getTagMemberCount",
        "summary": "Get Tag Member count",
        "description": "Returns the number of members in a given tag",
        "tags": [
          "Tag"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "memberType",
          "memberAssociationType"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tags/interfaces/membersAssociations/count",
        "method": "GET",
        "operationId": "retrieveTheCountOfInterfacesThatAreAssociatedWithAtLeastOneTag.",
        "summary": "Retrieve the count of interfaces that are associated with at least one tag.",
        "description": "Fetches the count of interfaces that are associated with at least one tag. A tag is a user-defined or system-defined construct to group resources. When an interface is tagged, it is called a member of the tag.",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag/{id}",
        "method": "DELETE",
        "operationId": "deleteTag",
        "summary": "Delete Tag",
        "description": "Deletes a tag specified by id",
        "tags": [
          "Tag"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag/{id}",
        "method": "GET",
        "operationId": "getTagById",
        "summary": "Get Tag by Id",
        "description": "Returns tag specified by Id",
        "tags": [
          "Tag"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag/member/type",
        "method": "GET",
        "operationId": "getTagResourceTypes",
        "summary": "Get Tag resource types",
        "description": "Returns list of supported resource types",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag/member",
        "method": "PUT",
        "operationId": "updateTagMembership",
        "summary": "Update tag membership",
        "description": "Update tag membership. As part of the request payload through this API, only the specified members are added / retained to the given input tags. Possible values of memberType attribute in the request payload can be queried by using the /tag/member/type API",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tags/networkDevices/membersAssociations/query",
        "method": "POST",
        "operationId": "queryTheTagsAssociatedWithNetworkDevices.",
        "summary": "Query the tags associated with network devices.",
        "description": "Fetches the tags associated with the given network device `ids`. Devices that don't have any tags associated will not be included in the response. A tag is a user-defined or system-defined construct to group resources. When a device is tagged, it is called a member of the tag. `ids` can be fetched via `/dna/intent/api/v1/network-device` API.\n",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tags/networkDevices/membersAssociations/count",
        "method": "GET",
        "operationId": "retrieveTheCountOfNetworkDevicesThatAreAssociatedWithAtLeastOneTag.",
        "summary": "Retrieve the count of network devices that are associated with at least one tag.",
        "description": "Fetches the count of network devices that are associated with at least one tag. A tag is a user-defined or system-defined construct to group resources. When a device is tagged, it is called a member of the tag.",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag/count",
        "method": "GET",
        "operationId": "getTagCount",
        "summary": "Get Tag Count",
        "description": "Returns tag count",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "nameSpace",
          "attributeName",
          "size",
          "systemTag"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tags/interfaces/membersAssociations/query",
        "method": "POST",
        "operationId": "queryTheTagsAssociatedWithInterfaces.",
        "summary": "Query the tags associated with interfaces.",
        "description": "Fetches the tags associated with the given interface `ids`. Interfaces that don't have any tags associated will not be included in the response. A tag is a user-defined or system-defined construct to group resources. When an interface is tagged, it is called a member of the tag. `ids` can be fetched via `/dna/intent/api/v1/interface` API.\n",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tags/interfaces/membersAssociations/bulk",
        "method": "PUT",
        "operationId": "updateTagsAssociatedWithTheInterfaces.",
        "summary": "Update tags associated with the interfaces.",
        "description": "Updates the tags associated with the interfaces. A tag is a user-defined or system-defined construct to group resources. When an interface is tagged, it is called a member of the tag. A tag can be created by using this POST `/dna/intent/api/v1/tag` API.",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tags/interfaces/membersAssociations",
        "method": "GET",
        "operationId": "retrieveTagsAssociatedWithTheInterfaces.",
        "summary": "Retrieve tags associated with the interfaces.",
        "description": "Fetches the tags associated with the interfaces. Interfaces that don't have any tags associated will not be included in the response. A tag is a user-defined or system-defined construct to group resources. When an interface is tagged, it is called a member of the tag.",
        "tags": [
          "Tag"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tag/{id}/member/{memberId}",
        "method": "DELETE",
        "operationId": "removeTagMember",
        "summary": "Remove Tag member",
        "description": "Removes Tag member from the tag specified by id",
        "tags": [
          "Tag"
        ],
        "parameters": [
          "id",
          "memberId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Reports": [
      {
        "path": "/dna/intent/api/v1/data/view-groups/{viewGroupId}",
        "method": "GET",
        "operationId": "getViewsForAGivenViewGroup",
        "summary": "Get views for a given view group",
        "description": "Gives a list of summary of all views in a viewgroup. Use \"Get all view groups\" API to get the viewGroupIds (required as a query param for this API) for available viewgroups.",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "viewGroupId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/data/view-groups/{viewGroupId}/views/{viewId}",
        "method": "GET",
        "operationId": "getViewDetailsForAGivenViewGroup&View",
        "summary": "Get view details for a given view group & view",
        "description": "Gives complete information of the view that is required to configure a report. Use \"Get views for a given view group\" API to get the viewIds  (required as a query param for this API) for available views.",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "viewGroupId",
          "viewId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/data/reports/{reportId}",
        "method": "DELETE",
        "operationId": "deleteAScheduledReport",
        "summary": "Delete a scheduled report",
        "description": "Delete a scheduled report configuration. Deletes the report executions also.",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/data/reports/{reportId}",
        "method": "GET",
        "operationId": "getAScheduledReport",
        "summary": "Get a scheduled report",
        "description": "Get scheduled report configuration by reportId",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/flexible-report/schedule/{reportId}",
        "method": "GET",
        "operationId": "getFlexibleReportScheduleByReportId",
        "summary": "Get flexible report schedule by report id",
        "description": "Get flexible report schedule by report id",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/flexible-report/schedule/{reportId}",
        "method": "PUT",
        "operationId": "updateScheduleOfFlexibleReport",
        "summary": "Update schedule of flexible report",
        "description": "Update schedule of flexible report",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/data/view-groups",
        "method": "GET",
        "operationId": "getAllViewGroups",
        "summary": "Get all view groups",
        "description": "Gives a list of summary of all view groups.",
        "tags": [
          "Reports"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/data/reports",
        "method": "GET",
        "operationId": "getListOfScheduledReports",
        "summary": "Get list of scheduled reports",
        "description": "Get list of scheduled report configurations.",
        "tags": [
          "Reports"
        ],
        "parameters": [],
        "query_parameters": [
          "viewGroupId",
          "viewId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/data/reports",
        "method": "POST",
        "operationId": "createOrScheduleAReport",
        "summary": "Create or Schedule a report",
        "description": "Create/Schedule a report configuration. Use \"Get view details for a given view group & view\" API to get the metadata required to configure a report.",
        "tags": [
          "Reports"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/flexible-report/report/{reportId}/executions",
        "method": "GET",
        "operationId": "getExecutionIdByReportId",
        "summary": "Get Execution Id by Report Id",
        "description": "Get Execution Id by Report Id",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/flexible-report/report/{reportId}/execute",
        "method": "POST",
        "operationId": "executingTheFlexibleReport",
        "summary": "Executing the Flexible report",
        "description": "This API is used for executing the report",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/flexible-report/schedules",
        "method": "GET",
        "operationId": "getAllFlexibleReportSchedules",
        "summary": "Get all flexible report schedules",
        "description": "Get all flexible report schedules",
        "tags": [
          "Reports"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/data/reports/{reportId}/executions",
        "method": "GET",
        "operationId": "getAllExecutionDetailsForAGivenReport",
        "summary": "Get all execution details for a given report",
        "description": "Get details of all executions for a given report",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/flexible-report/report/content/{reportId}/{executionId}",
        "method": "GET",
        "operationId": "downloadFlexibleReport",
        "summary": "Download Flexible Report",
        "description": "This is used to download the flexible report. The API returns report content. Save the response to a file by converting the response data as a blob and setting the file format available from content-disposition response header.",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId",
          "executionId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/data/reports/{reportId}/executions/{executionId}",
        "method": "GET",
        "operationId": "downloadReportContent",
        "summary": "Download report content",
        "description": "Returns report content. Save the response to a file by converting the response data as a blob and setting the file format available from content-disposition response header.",
        "tags": [
          "Reports"
        ],
        "parameters": [
          "reportId",
          "executionId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Discovery": [
      {
        "path": "/dna/intent/api/v1/discovery/count",
        "method": "GET",
        "operationId": "getCountOfAllDiscoveryJobs",
        "summary": "Get count of all discovery jobs",
        "description": "Returns the count of all available discovery jobs",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/netconf",
        "method": "POST",
        "operationId": "createNetconfCredentials",
        "summary": "Create Netconf credentials",
        "description": "Adds global netconf credentials",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/netconf",
        "method": "PUT",
        "operationId": "updateNetconfCredentials",
        "summary": "Update Netconf credentials",
        "description": "Updates global netconf credentials",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/snmpv2-write-community",
        "method": "PUT",
        "operationId": "updateSNMPWriteCommunity",
        "summary": "Update SNMP write community",
        "description": "Updates global SNMP write community",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/snmpv2-write-community",
        "method": "POST",
        "operationId": "createSNMPWriteCommunity",
        "summary": "Create SNMP write community",
        "description": "Adds global SNMP write community",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/snmpv3",
        "method": "PUT",
        "operationId": "updateSNMPv3Credentials",
        "summary": "Update SNMPv3 credentials",
        "description": "Updates global SNMPv3 credential",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/snmpv3",
        "method": "POST",
        "operationId": "createSNMPv3Credentials",
        "summary": "Create SNMPv3 credentials",
        "description": "Adds global SNMPv3 credentials",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/{startIndex}/{recordsToReturn}",
        "method": "GET",
        "operationId": "getDiscoveriesByRange",
        "summary": "Get Discoveries by range",
        "description": "Returns the discoveries by specified range",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "startIndex",
          "recordsToReturn"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/{id}/summary",
        "method": "GET",
        "operationId": "getNetworkDevicesFromDiscovery",
        "summary": "Get network devices from Discovery",
        "description": "Returns the devices discovered in the given discovery based on given filters. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "taskId",
          "sortBy",
          "sortOrder",
          "ipAddress",
          "pingStatus",
          "snmpStatus",
          "cliStatus",
          "netconfStatus",
          "httpStatus"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/snmp-property",
        "method": "GET",
        "operationId": "getSNMPProperties",
        "summary": "Get SNMP properties",
        "description": "Returns SNMP properties",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/snmp-property",
        "method": "POST",
        "operationId": "create/UpdateSNMPProperties",
        "summary": "Create/Update SNMP properties",
        "description": "Adds SNMP properties",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/snmpv2-read-community",
        "method": "PUT",
        "operationId": "updateSNMPReadCommunity",
        "summary": "Update SNMP read community",
        "description": "Updates global SNMP read community",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/snmpv2-read-community",
        "method": "POST",
        "operationId": "createSNMPReadCommunity",
        "summary": "Create SNMP read community",
        "description": "Adds global SNMP read community",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/{id}",
        "method": "DELETE",
        "operationId": "deleteDiscoveryById",
        "summary": "Delete discovery by Id",
        "description": "Stops the discovery for the given Discovery ID and removes it. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/{id}",
        "method": "GET",
        "operationId": "getDiscoveryById",
        "summary": "Get Discovery by Id",
        "description": "Returns discovery by Discovery ID. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/global-credential",
        "method": "POST",
        "operationId": "createGlobalCredentialsV2",
        "summary": "Create Global Credentials V2",
        "description": "API to create new global credentials. Multiple credentials of various types can be passed at once. Please refer sample Request Body for more information.",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/global-credential",
        "method": "GET",
        "operationId": "getAllGlobalCredentialsV2",
        "summary": "Get All Global Credentials V2",
        "description": "API to get device credentials' details. It fetches all global credentials of all types at once, without the need to pass any input parameters.",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/global-credential",
        "method": "PUT",
        "operationId": "updateGlobalCredentialsV2",
        "summary": "Update Global Credentials V2",
        "description": "API to update device credentials. Multiple credentials can be passed at once, but only a single credential of a given type can be passed at once. Please refer sample Request Body for more information.",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/http-write",
        "method": "POST",
        "operationId": "createHTTPWriteCredentials",
        "summary": "Create HTTP write credentials",
        "description": "Adds global HTTP write credentials",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/http-write",
        "method": "PUT",
        "operationId": "updateHTTPWriteCredentials",
        "summary": "Update HTTP write credentials",
        "description": "Updates global HTTP write credentials",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery",
        "method": "POST",
        "operationId": "startDiscovery",
        "summary": "Start discovery",
        "description": "Initiates discovery with the given parameters",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery",
        "method": "PUT",
        "operationId": "updatesAnExistingDiscoveryBySpecifiedId",
        "summary": "Updates an existing discovery by specified Id",
        "description": "Stops or starts an existing discovery",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery",
        "method": "DELETE",
        "operationId": "deleteAllDiscovery",
        "summary": "Delete all discovery",
        "description": "Stops all the discoveries and removes them.",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v2/global-credential/{id}",
        "method": "DELETE",
        "operationId": "deleteGlobalCredentialV2",
        "summary": "Delete Global Credential V2",
        "description": "Delete a global credential. Only 'id' of the credential has to be passed.",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/{globalCredentialId}",
        "method": "PUT",
        "operationId": "updateGlobalCredentials",
        "summary": "Update global credentials",
        "description": "Update global credential for network devices in site(s)",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "globalCredentialId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/{globalCredentialId}",
        "method": "DELETE",
        "operationId": "deleteGlobalCredentialsById",
        "summary": "Delete global credentials by Id",
        "description": "Deletes global credential for the given ID",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "globalCredentialId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/http-read",
        "method": "PUT",
        "operationId": "updateHTTPReadCredential",
        "summary": "Update HTTP read credential",
        "description": "Updates global HTTP Read credential",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/http-read",
        "method": "POST",
        "operationId": "createHTTPReadCredentials",
        "summary": "Create HTTP read credentials",
        "description": "Adds HTTP read credentials",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/{id}/job",
        "method": "GET",
        "operationId": "getListOfDiscoveriesByDiscoveryId",
        "summary": "Get list of discoveries by discovery Id",
        "description": "Returns the list of discovery jobs for the given Discovery ID. The results can be optionally filtered based on IP. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "offset",
          "limit",
          "ipAddress"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/cli",
        "method": "POST",
        "operationId": "createCLICredentials",
        "summary": "Create CLI credentials",
        "description": "Adds global CLI credential",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential/cli",
        "method": "PUT",
        "operationId": "updateCLICredentials",
        "summary": "Update CLI credentials",
        "description": "Updates global CLI credentials",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/job",
        "method": "GET",
        "operationId": "getDiscoveryJobsByIP",
        "summary": "Get Discovery jobs by IP",
        "description": "Returns the list of discovery jobs for the given IP",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit",
          "ipAddress",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/{id}/network-device/count",
        "method": "GET",
        "operationId": "getDevicesDiscoveredById",
        "summary": "Get Devices discovered by Id",
        "description": "Returns the count of network devices discovered in the given discovery. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/{id}/network-device/{startIndex}/{recordsToReturn}",
        "method": "GET",
        "operationId": "getDiscoveredDevicesByRange",
        "summary": "Get Discovered devices by range",
        "description": "Returns the network devices discovered for the given discovery and for the given range. The maximum number of records that can be retrieved is 500. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "id",
          "startIndex",
          "recordsToReturn"
        ],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/global-credential",
        "method": "GET",
        "operationId": "getGlobalCredentials",
        "summary": "Get Global credentials",
        "description": "Returns global credential for the given credential sub type",
        "tags": [
          "Discovery"
        ],
        "parameters": [],
        "query_parameters": [
          "credentialSubType",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/discovery/{id}/network-device",
        "method": "GET",
        "operationId": "getDiscoveredNetworkDevicesByDiscoveryId",
        "summary": "Get Discovered network devices by discovery Id",
        "description": "Returns the network devices discovered for the given Discovery ID. Discovery ID can be obtained using the \"Get Discoveries by range\" API.",
        "tags": [
          "Discovery"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [
          "taskId"
        ],
        "version": "1.0.0"
      }
    ],
    "File": [
      {
        "path": "/dna/intent/api/v1/file/{nameSpace}",
        "method": "POST",
        "operationId": "uploadFile",
        "summary": "uploadFile",
        "description": "Uploads a new file within a specific nameSpace",
        "tags": [
          "File"
        ],
        "parameters": [
          "nameSpace"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/file/namespace",
        "method": "GET",
        "operationId": "getListOfAvailableNamespaces",
        "summary": "Get list of available namespaces",
        "description": "Returns list of available namespaces",
        "tags": [
          "File"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/file/namespace/{nameSpace}",
        "method": "GET",
        "operationId": "getListOfFiles",
        "summary": "Get list of files",
        "description": "Returns list of files under a specific namespace",
        "tags": [
          "File"
        ],
        "parameters": [
          "nameSpace"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/file/{fileId}",
        "method": "GET",
        "operationId": "downloadAFileByFileId",
        "summary": "Download a file by fileId",
        "description": "Downloads a file specified by fileId",
        "tags": [
          "File"
        ],
        "parameters": [
          "fileId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Task": [
      {
        "path": "/dna/data/api/v1/assuranceTasks/{id}",
        "method": "GET",
        "operationId": "retrieveASpecificAssuranceTaskById",
        "summary": "Retrieve a specific assurance task by id",
        "description": "returns a task given a specific task id\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceTasks-1.0.0-resolved.yaml\n",
        "tags": [
          "Task"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/task/count",
        "method": "GET",
        "operationId": "getTaskCount",
        "summary": "Get task count",
        "description": "Returns Task count",
        "tags": [
          "Task"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "data",
          "errorCode",
          "serviceType",
          "username",
          "progress",
          "isError",
          "failureReason",
          "parentId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tasks/{id}/detail",
        "method": "GET",
        "operationId": "getTaskDetailsByID",
        "summary": "Get task details by ID",
        "description": "Returns the task details for the given task ID",
        "tags": [
          "Task"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/activities/{activityId}/triggeredJobs",
        "method": "GET",
        "operationId": "getTriggeredJobsByActivityId.",
        "summary": "Get triggered jobs by activity id.",
        "description": "Returns the triggered jobs by the activity with the given activity id",
        "tags": [
          "Task"
        ],
        "parameters": [
          "activityId"
        ],
        "query_parameters": [
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tasks/count",
        "method": "GET",
        "operationId": "getTasksCount",
        "summary": "Get tasks count",
        "description": "Returns the number of tasks that meet the filter criteria",
        "tags": [
          "Task"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "parentId",
          "rootId",
          "status"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/intent/api/v1/activities/{id}",
        "method": "GET",
        "operationId": "getActivityByID.",
        "summary": "Get activity by ID.",
        "description": "Returns the activity with the given ID",
        "tags": [
          "Task"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/task/{taskId}",
        "method": "GET",
        "operationId": "getTaskById",
        "summary": "Get task by Id",
        "description": "Returns a task by specified id",
        "tags": [
          "Task"
        ],
        "parameters": [
          "taskId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/activities/count",
        "method": "GET",
        "operationId": "retrievesTheCountOfActivities",
        "summary": "Retrieves the count of activities",
        "description": "Retrieves the count of activities",
        "tags": [
          "Task"
        ],
        "parameters": [],
        "query_parameters": [
          "description",
          "status",
          "type",
          "recurring",
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/activities",
        "method": "GET",
        "operationId": "getActivities",
        "summary": "Get activities",
        "description": "Returns activity(s) based on filter criteria",
        "tags": [
          "Task"
        ],
        "parameters": [],
        "query_parameters": [
          "description",
          "status",
          "type",
          "recurring",
          "startTime",
          "endTime",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceTasks/count",
        "method": "GET",
        "operationId": "retrieveACountOfTheNumberOfAssuranceTasksThatCurrentlyExist",
        "summary": "Retrieve a count of the number of assurance tasks that currently exist",
        "description": "returns a count of the number of assurance tasks that are not expired\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceTasks-1.0.0-resolved.yaml\n",
        "tags": [
          "Task"
        ],
        "parameters": [],
        "query_parameters": [
          "status"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/dnacaap/management/execution-status/{executionId}",
        "method": "GET",
        "operationId": "getBusinessAPIExecutionDetails",
        "summary": "Get Business API Execution Details",
        "description": "Retrieves the execution details of a Business API",
        "tags": [
          "Task"
        ],
        "parameters": [
          "executionId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tasks",
        "method": "GET",
        "operationId": "getTasks",
        "summary": "Get tasks",
        "description": "Returns task(s) based on filter criteria",
        "tags": [
          "Task"
        ],
        "parameters": [],
        "query_parameters": [
          "offset",
          "limit",
          "sortBy",
          "order",
          "startTime",
          "endTime",
          "parentId",
          "rootId",
          "status"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/task/operation/{operationId}/{offset}/{limit}",
        "method": "GET",
        "operationId": "getTaskByOperationId",
        "summary": "Get task by OperationId",
        "description": "Returns root tasks associated with an Operationid",
        "tags": [
          "Task"
        ],
        "parameters": [
          "operationId",
          "offset",
          "limit"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/activities/{activityId}/triggeredJobs/count",
        "method": "GET",
        "operationId": "retrievesTheCountOfTriggeredJobsByActivityId.",
        "summary": "Retrieves the count of triggered jobs by activity id.",
        "description": "Retrieves the count of triggered jobs by activity id.",
        "tags": [
          "Task"
        ],
        "parameters": [
          "activityId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/assuranceTasks",
        "method": "GET",
        "operationId": "retrieveAListOfAssuranceTasks",
        "summary": "Retrieve a list of assurance tasks",
        "description": "returns all existing tasks in a paginated list\n\ndefault sorting of list is `startTime`, `asc`\n\nvalid field to sort by are [`startTime`,`endTime`,`updateTime`,`status`]\nFor detailed information about the usage of the API, please refer to the Open API specification document - https://github.com/cisco-en-programmability/catalyst-center-api-specs/blob/main/Assurance/CE_Cat_Center_Org-AssuranceTasks-1.0.0-resolved.yaml\n",
        "tags": [
          "Task"
        ],
        "parameters": [],
        "query_parameters": [
          "limit",
          "offset",
          "sortBy",
          "order",
          "status"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/tasks/{id}",
        "method": "GET",
        "operationId": "getTasksByID",
        "summary": "Get tasks by ID",
        "description": "Returns the task with the given ID",
        "tags": [
          "Task"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/task",
        "method": "GET",
        "operationId": "getTasks-2",
        "summary": "Get tasks",
        "description": "Returns task(s) based on filter criteria",
        "tags": [
          "Task"
        ],
        "parameters": [],
        "query_parameters": [
          "startTime",
          "endTime",
          "data",
          "errorCode",
          "serviceType",
          "username",
          "progress",
          "isError",
          "failureReason",
          "parentId",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/task/{taskId}/tree",
        "method": "GET",
        "operationId": "getTaskTree",
        "summary": "Get task tree",
        "description": "Returns a task with its children tasks by based on their id",
        "tags": [
          "Task"
        ],
        "parameters": [
          "taskId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Command Runner": [
      {
        "path": "/dna/intent/api/v1/network-device-poller/cli/legit-reads",
        "method": "GET",
        "operationId": "getAllKeywordsOfCLIsAcceptedByCommandRunner",
        "summary": "Get all keywords of CLIs accepted by command runner",
        "description": "Get valid keywords",
        "tags": [
          "Command Runner"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device-poller/cli/read-request",
        "method": "POST",
        "operationId": "runRead-onlyCommandsOnDevicesToGetTheirReal-timeConfiguration",
        "summary": "Run read-only commands on devices to get their real-time configuration",
        "description": "Submit request for read-only CLIs",
        "tags": [
          "Command Runner"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Path Trace": [
      {
        "path": "/dna/intent/api/v1/flow-analysis",
        "method": "GET",
        "operationId": "retrievesAllPreviousPathtracesSummary",
        "summary": "Retrieves all previous Pathtraces summary",
        "description": "Returns a summary of all flow analyses stored. Results can be filtered by specified parameters.",
        "tags": [
          "Path Trace"
        ],
        "parameters": [],
        "query_parameters": [
          "periodicRefresh",
          "sourceIP",
          "destIP",
          "sourcePort",
          "destPort",
          "gtCreateTime",
          "ltCreateTime",
          "protocol",
          "status",
          "taskId",
          "lastUpdateTime",
          "limit",
          "offset",
          "order",
          "sortBy"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/flow-analysis",
        "method": "POST",
        "operationId": "initiateANewPathtrace",
        "summary": "Initiate a new Pathtrace",
        "description": "Initiates a new flow analysis with periodic refresh and stat collection options. Returns a request id and a task id to get results and follow progress.",
        "tags": [
          "Path Trace"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/flow-analysis/{flowAnalysisId}",
        "method": "GET",
        "operationId": "retrievesPreviousPathtrace",
        "summary": "Retrieves previous Pathtrace",
        "description": "Returns result of a previously requested flow analysis by its Flow Analysis id",
        "tags": [
          "Path Trace"
        ],
        "parameters": [
          "flowAnalysisId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/flow-analysis/{flowAnalysisId}",
        "method": "DELETE",
        "operationId": "deletesPathtraceById",
        "summary": "Deletes Pathtrace by Id",
        "description": "Deletes a flow analysis request by its id",
        "tags": [
          "Path Trace"
        ],
        "parameters": [
          "flowAnalysisId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Event Management": {
    "": [
      {
        "path": "/dna/intent/api/v1/event/syslog-config",
        "method": "POST",
        "operationId": "createSyslogDestination",
        "summary": "Create Syslog Destination",
        "description": "Create Syslog Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/syslog-config",
        "method": "GET",
        "operationId": "getSyslogDestination",
        "summary": "Get Syslog Destination",
        "description": "Get Syslog Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "configId",
          "name",
          "protocol",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/syslog-config",
        "method": "PUT",
        "operationId": "updateSyslogDestination",
        "summary": "Update Syslog Destination",
        "description": "Update Syslog Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/webhook",
        "method": "PUT",
        "operationId": "updateWebhookDestination",
        "summary": "Update Webhook Destination",
        "description": "Update Webhook Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/webhook",
        "method": "GET",
        "operationId": "getWebhookDestination",
        "summary": "Get Webhook Destination",
        "description": "Get Webhook Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "webhookIds",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/webhook",
        "method": "POST",
        "operationId": "createWebhookDestination",
        "summary": "Create Webhook Destination",
        "description": "Create Webhook Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/snmp-config",
        "method": "POST",
        "operationId": "createSNMPDestination",
        "summary": "Create SNMP Destination",
        "description": "Create SNMP Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/snmp-config",
        "method": "PUT",
        "operationId": "updateSNMPDestination",
        "summary": "Update SNMP Destination",
        "description": "Update SNMP Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/event-series/count",
        "method": "GET",
        "operationId": "countOfNotifications",
        "summary": "Count of Notifications",
        "description": "Get the Count of Published Notifications",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventIds",
          "startTime",
          "endTime",
          "category",
          "type",
          "severity",
          "domain",
          "subDomain",
          "source"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription-details/syslog",
        "method": "GET",
        "operationId": "getSyslogSubscriptionDetails",
        "summary": "Get Syslog Subscription Details",
        "description": "Gets the list of subscription details for specified connectorType",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "instanceId",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/count",
        "method": "GET",
        "operationId": "countOfEventSubscriptions",
        "summary": "Count of Event Subscriptions",
        "description": "Returns the Count of EventSubscriptions",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventIds"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription-details/email",
        "method": "GET",
        "operationId": "getEmailSubscriptionDetails",
        "summary": "Get Email Subscription Details",
        "description": "Gets the list of subscription details for specified connectorType",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "instanceId",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/email",
        "method": "GET",
        "operationId": "getEmailEventSubscriptions",
        "summary": "Get Email Event Subscriptions",
        "description": "Gets the list of email Subscriptions's based on provided query params",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventIds",
          "offset",
          "limit",
          "sortBy",
          "order",
          "domain",
          "subDomain",
          "category",
          "type",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/email",
        "method": "POST",
        "operationId": "createEmailEventSubscription",
        "summary": "Create Email Event Subscription",
        "description": "Create Email Subscription Endpoint for list of registered events.",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/email",
        "method": "PUT",
        "operationId": "updateEmailEventSubscription",
        "summary": "Update Email Event Subscription",
        "description": "Update Email Subscription Endpoint for list of registered events",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/events",
        "method": "GET",
        "operationId": "getEvents",
        "summary": "Get Events",
        "description": "Gets the list of registered Events with provided eventIds or tags as mandatory",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventId",
          "tags",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/event/event-series/audit-log/summary",
        "method": "GET",
        "operationId": "getAuditLogSummary",
        "summary": "Get AuditLog Summary",
        "description": "Get Audit Log Summary from the Event-Hub",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "parentInstanceId",
          "isParentOnly",
          "instanceId",
          "name",
          "eventId",
          "category",
          "severity",
          "domain",
          "subDomain",
          "source",
          "userId",
          "context",
          "eventHierarchy",
          "siteId",
          "deviceId",
          "isSystemEvents",
          "description",
          "startTime",
          "endTime"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription",
        "method": "POST",
        "operationId": "createEventSubscriptions",
        "summary": "Create Event Subscriptions",
        "description": "Subscribe SubscriptionEndpoint to list of registered events.\nDeprecated since Guardian release.\nAlternative: POST /intent/api/v1/event/subscription/rest",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription",
        "method": "PUT",
        "operationId": "updateEventSubscriptions",
        "summary": "Update Event Subscriptions",
        "description": "Update SubscriptionEndpoint to list of registered events.\nDeprecated since Guardian release.\nAlternative: PUT /intent/api/v1/event/subscription/rest",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription",
        "method": "DELETE",
        "operationId": "deleteEventSubscriptions",
        "summary": "Delete Event Subscriptions",
        "description": "Delete EventSubscriptions",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "subscriptions"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription",
        "method": "GET",
        "operationId": "getEventSubscriptions",
        "summary": "Get Event Subscriptions",
        "description": "Gets the list of Subscriptions's based on provided offset and limit.\nDeprecated since Guardian release.\nAlternative: GET /intent/api/v1/event/subscription/rest",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventIds",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/event/artifact",
        "method": "GET",
        "operationId": "getEventArtifacts",
        "summary": "Get EventArtifacts",
        "description": "Gets the list of artifacts based on provided offset and limit",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventIds",
          "tags",
          "offset",
          "limit",
          "sortBy",
          "order",
          "search"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/syslog",
        "method": "PUT",
        "operationId": "updateSyslogEventSubscription",
        "summary": "Update Syslog Event Subscription",
        "description": "Update Syslog Subscription Endpoint for list of registered events",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/syslog",
        "method": "POST",
        "operationId": "createSyslogEventSubscription",
        "summary": "Create Syslog Event Subscription",
        "description": "Create Syslog Subscription Endpoint for list of registered events",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/syslog",
        "method": "GET",
        "operationId": "getSyslogEventSubscriptions",
        "summary": "Get Syslog Event Subscriptions",
        "description": "Gets the list of Syslog Subscriptions's based on provided offset and limit",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventIds",
          "offset",
          "limit",
          "sortBy",
          "order",
          "domain",
          "subDomain",
          "category",
          "type",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/events/count",
        "method": "GET",
        "operationId": "countOfEvents",
        "summary": "Count of Events",
        "description": "Get the count of registered events with provided eventIds or tags as mandatory",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventId",
          "tags"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/email-config",
        "method": "POST",
        "operationId": "createEmailDestination",
        "summary": "Create Email Destination",
        "description": "Create Email Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/email-config",
        "method": "PUT",
        "operationId": "updateEmailDestination",
        "summary": "Update Email Destination",
        "description": "Update Email Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/email-config",
        "method": "GET",
        "operationId": "getEmailDestination",
        "summary": "Get Email Destination",
        "description": "Get Email Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/event/event-series/audit-logs",
        "method": "GET",
        "operationId": "getAuditLogRecords",
        "summary": "Get AuditLog Records",
        "description": "Get Audit Log Event instances from the Event-Hub ",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "parentInstanceId",
          "instanceId",
          "name",
          "eventId",
          "category",
          "severity",
          "domain",
          "subDomain",
          "source",
          "userId",
          "context",
          "eventHierarchy",
          "siteId",
          "deviceId",
          "isSystemEvents",
          "description",
          "offset",
          "limit",
          "startTime",
          "endTime",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/event-series",
        "method": "GET",
        "operationId": "getNotifications",
        "summary": "Get Notifications",
        "description": "Get the list of Published Notifications",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventIds",
          "startTime",
          "endTime",
          "category",
          "type",
          "severity",
          "domain",
          "subDomain",
          "source",
          "offset",
          "limit",
          "sortBy",
          "order",
          "tags",
          "namespace",
          "siteId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/rest",
        "method": "POST",
        "operationId": "createRest/WebhookEventSubscription",
        "summary": "Create Rest/Webhook Event Subscription",
        "description": "Create Rest/Webhook Subscription Endpoint for list of registered events",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/rest",
        "method": "PUT",
        "operationId": "updateRest/WebhookEventSubscription",
        "summary": "Update Rest/Webhook Event Subscription",
        "description": "Update Rest/Webhook Subscription Endpoint for list of registered events",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription/rest",
        "method": "GET",
        "operationId": "getRest/WebhookEventSubscriptions",
        "summary": "Get Rest/Webhook Event Subscriptions",
        "description": "Gets the list of Rest/Webhook Subscriptions's based on provided query params",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "eventIds",
          "offset",
          "limit",
          "sortBy",
          "order",
          "domain",
          "subDomain",
          "category",
          "type",
          "name"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/data/api/v1/event/event-series/audit-log/parent-records",
        "method": "GET",
        "operationId": "getAuditLogParentRecords",
        "summary": "Get AuditLog Parent Records",
        "description": "Get Parent Audit Log Event instances from the Event-Hub ",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "instanceId",
          "name",
          "eventId",
          "category",
          "severity",
          "domain",
          "subDomain",
          "source",
          "userId",
          "context",
          "eventHierarchy",
          "siteId",
          "deviceId",
          "isSystemEvents",
          "description",
          "offset",
          "limit",
          "startTime",
          "endTime",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/event/artifact/count",
        "method": "GET",
        "operationId": "eventArtifactCount",
        "summary": "EventArtifact Count",
        "description": "Get the count of registered event artifacts.",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/event/config/connector-types",
        "method": "GET",
        "operationId": "getConnectorTypes",
        "summary": "Get Connector Types",
        "description": "Get the list of connector types",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/subscription-details/rest",
        "method": "GET",
        "operationId": "getRest/WebhookSubscriptionDetails",
        "summary": "Get Rest/Webhook Subscription Details",
        "description": "Gets the list of subscription details for specified connectorType",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "name",
          "instanceId",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/dna-event/snmp-config",
        "method": "GET",
        "operationId": "getSNMPDestination",
        "summary": "Get SNMP Destination",
        "description": "Get SNMP Destination",
        "tags": [
          "Event Management"
        ],
        "parameters": [],
        "query_parameters": [
          "configId",
          "offset",
          "limit",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/event/api-status/{executionId}",
        "method": "GET",
        "operationId": "getStatusAPIForEvents",
        "summary": "Get Status API for Events",
        "description": "Get the Status of events API calls with provided executionId as mandatory path parameter",
        "tags": [
          "Event Management"
        ],
        "parameters": [
          "executionId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "System": {
    "Health and Performance": [
      {
        "path": "/dna/intent/api/v1/diagnosticTasks/{id}",
        "method": "GET",
        "operationId": "retrievesDiagnosticTaskByID",
        "summary": "Retrieves diagnostic task by ID",
        "description": "This API retrieves the diagnostic task identified by the specified `id`.",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/diagnosticTasks/{id}/detail",
        "method": "GET",
        "operationId": "retrievesDiagnosticTaskDetailsByID",
        "summary": "Retrieves diagnostic task details by ID",
        "description": "This API retrieves the details of the diagnostic task identified by the specified `id`.",
        "tags": [
          "Health and Performance"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "User and Roles": [
      {
        "path": "/dna/system/api/v1/users/external-servers/aaa-attribute",
        "method": "GET",
        "operationId": "getAAAAttributeAPI",
        "summary": "Get AAA Attribute API",
        "description": "Get the current value of the custom AAA attribute.",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/users/external-servers/aaa-attribute",
        "method": "POST",
        "operationId": "addAndUpdateAAAAttributeAPI",
        "summary": "Add and Update AAA Attribute API",
        "description": "Add or update the custom AAA attribute for external authentication. Note that if you decide not to set the custom AAA attribute, a default AAA attribute will be used for authentication based on the protocol supported by your server. For TACACS servers it will be \"cisco-av-pair\" and for RADIUS servers it will be \"Cisco-AVPair\".",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/users/external-servers/aaa-attribute",
        "method": "DELETE",
        "operationId": "deleteAAAAttributeAPI",
        "summary": "Delete AAA Attribute API",
        "description": "Delete the custom AAA attribute that was added. Note that by deleting the AAA attribute, a default AAA attribute will be used for authentication based on the protocol supported by your server. For TACACS servers it will be \"cisco-av-pair\" and for RADIUS servers it will be \"Cisco-AVPair\".",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/role",
        "method": "PUT",
        "operationId": "updateRoleAPI",
        "summary": "Update role API",
        "description": "Update a role in the system",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/role",
        "method": "POST",
        "operationId": "addRoleAPI",
        "summary": "Add role API",
        "description": "Add a new role in the system",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/user/{userId}",
        "method": "DELETE",
        "operationId": "deleteUserAPI",
        "summary": "Delete user API",
        "description": "Delete a user in the system",
        "tags": [
          "User and Roles"
        ],
        "parameters": [
          "userId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/user",
        "method": "POST",
        "operationId": "addUserAPI",
        "summary": "Add user API",
        "description": "Add a new user in the system",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/user",
        "method": "GET",
        "operationId": "getUsersAPI",
        "summary": "Get users API",
        "description": "Get all users in the system",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [
          "invokeSource",
          "authSource"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/user",
        "method": "PUT",
        "operationId": "updateUserAPI",
        "summary": "Update user API",
        "description": "Update a user in the system",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/roles",
        "method": "GET",
        "operationId": "getRolesAPI",
        "summary": "Get roles API",
        "description": "Get all roles in the system",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/role/permissions",
        "method": "GET",
        "operationId": "getPermissionsAPI",
        "summary": "Get permissions API",
        "description": "Get permissions for a role in the system.",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/users/external-servers",
        "method": "GET",
        "operationId": "getExternalAuthenticationServersAPI",
        "summary": "Get external authentication servers API",
        "description": "Get external users authentication servers.",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [
          "invokeSource"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/users/external-authentication",
        "method": "GET",
        "operationId": "getExternalAuthenticationSettingAPI",
        "summary": "Get External Authentication Setting API",
        "description": "Get the External Authentication setting.",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/users/external-authentication",
        "method": "POST",
        "operationId": "manageExternalAuthenticationSettingAPI",
        "summary": "Manage External Authentication Setting API",
        "description": "Enable or disable external authentication in the System.\n\nPlease find the Administrator Guide for your particular release from the list linked below and follow the steps required to enable external authentication before trying to do so from this API.\n\nhttps://www.cisco.com/c/en/us/support/cloud-systems-management/dna-center/products-maintenance-guides-list.html",
        "tags": [
          "User and Roles"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/role/{roleId}",
        "method": "DELETE",
        "operationId": "deleteRoleAPI",
        "summary": "Delete role API",
        "description": "Delete a role in the system",
        "tags": [
          "User and Roles"
        ],
        "parameters": [
          "roleId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Cisco Trusted Certificates": [
      {
        "path": "/dna/intent/api/v1/trustedCertificates/import",
        "method": "POST",
        "operationId": "importTrustedCertificate",
        "summary": "Import Trusted Certificate",
        "description": "Imports trusted certificate into a truststore. Accepts .pem or .der file as input.",
        "tags": [
          "Cisco Trusted Certificates"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ],
    "Licenses": [
      {
        "path": "/dna/intent/api/v1/networkDeviceLicenses/summary",
        "method": "GET",
        "operationId": "retrievesSummaryOfNetworkDeviceLicenses",
        "summary": "Retrieves summary of network device licenses",
        "description": "Retrieves the summary of consumed network, DNA, and unified licenses, along with the counts of unregistered and out-of-compliance network devices, and expired and expiring network device licenses.",
        "tags": [
          "Licenses"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Appliance": {
    "Cisco IMC": [
      {
        "path": "/dna/system/api/v1/ciscoImcs/{id}",
        "method": "DELETE",
        "operationId": "deletesTheCiscoIMCConfigurationForACatalystCenterNode",
        "summary": "Deletes the Cisco IMC configuration for a Catalyst Center node",
        "description": "This API removes a specific Cisco Integrated Management Controller (IMC) configuration from a Catalyst Center node using the provided identifier.\n\nThe Cisco IMC configuration APIs enable the management of connections between Cisco IMC and Cisco Catalyst Center. By providing the Cisco IMC IP address and credentials to Catalyst Center, Catalyst Center can access and report the health status of hardware components within the Cisco appliance.\n    \nMore data about the Cisco IMC can be retrieved using the APIs exposed directly by Cisco IMC. Details are available in the Cisco IMC documentation - https://www.cisco.com/c/en/us/support/servers-unified-computing/ucs-c-series-integrated-management-controller/series.html#~tab-documents\n    \nThe Cisco IMC configuration is relevant only for Catalyst Center deployments based on UCS appliances. In cases where Cisco IMC configuration is not supported by the deployment, these APIs will respond with a `404 Not Found` status code.\n",
        "tags": [
          "Cisco IMC"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/ciscoImcs/{id}",
        "method": "PUT",
        "operationId": "updatesTheCiscoIMCConfigurationForACatalystCenterNode",
        "summary": "Updates the Cisco IMC configuration for a Catalyst Center node",
        "description": "This API updates the Cisco Integrated Management Controller (IMC) configuration for a Catalyst Center node, identified by the specified ID.\n\nThe Cisco IMC configuration APIs enable the management of connections between Cisco IMC and Cisco Catalyst Center. By providing the Cisco IMC IP address and credentials to Catalyst Center, Catalyst Center can access and report the health status of hardware components within the Cisco appliance.\n    \nMore data about the Cisco IMC can be retrieved using the APIs exposed directly by Cisco IMC. Details are available in the Cisco IMC documentation - https://www.cisco.com/c/en/us/support/servers-unified-computing/ucs-c-series-integrated-management-controller/series.html#~tab-documents\n    \nThe Cisco IMC configuration is relevant only for Catalyst Center deployments based on UCS appliances. In cases where Cisco IMC configuration is not supported by the deployment, these APIs will respond with a `404 Not Found` status code.\n\nWhen Cisco IMC configuration is supported, this API responds with the URL of a diagnostic task.",
        "tags": [
          "Cisco IMC"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/ciscoImcs/{id}",
        "method": "GET",
        "operationId": "retrievesTheCiscoIMCConfigurationForACatalystCenterNode",
        "summary": "Retrieves the Cisco IMC configuration for a Catalyst Center node",
        "description": "This API retrieves the Cisco Integrated Management Controller (IMC) configuration for a Catalyst Center node, identified by the specified ID.\n\nThe Cisco IMC configuration APIs enable the management of connections between Cisco IMC and Cisco Catalyst Center. By providing the Cisco IMC IP address and credentials to Catalyst Center, Catalyst Center can access and report the health status of hardware components within the Cisco appliance.\n    \nMore data about the Cisco IMC can be retrieved using the APIs exposed directly by Cisco IMC. Details are available in the Cisco IMC documentation - https://www.cisco.com/c/en/us/support/servers-unified-computing/ucs-c-series-integrated-management-controller/series.html#~tab-documents\n    \nThe Cisco IMC configuration is relevant only for Catalyst Center deployments based on UCS appliances. In cases where Cisco IMC configuration is not supported by the deployment, these APIs will respond with a `404 Not Found` status code.",
        "tags": [
          "Cisco IMC"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/ciscoImcs",
        "method": "GET",
        "operationId": "retrievesCiscoIMCConfigurationsForCatalystCenterNodes",
        "summary": "Retrieves Cisco IMC configurations for Catalyst Center nodes",
        "description": "This API retrieves the configurations of the Cisco Integrated Management Controller (IMC) that have been added to the Catalyst Center nodes.\n\nThe Cisco IMC configuration APIs enable the management of connections between Cisco IMC and Cisco Catalyst Center. By providing the Cisco IMC IP address and credentials to Catalyst Center, Catalyst Center can access and report the health status of hardware components within the Cisco appliance.\n    \nMore data about the Cisco IMC can be retrieved using the APIs exposed directly by Cisco IMC. Details are available in the Cisco IMC documentation - https://www.cisco.com/c/en/us/support/servers-unified-computing/ucs-c-series-integrated-management-controller/series.html#~tab-documents\n    \nThe Cisco IMC configuration is relevant only for Catalyst Center deployments based on UCS appliances. In cases where Cisco IMC configuration is not supported by the deployment, these APIs will respond with a `404 Not Found` status code.",
        "tags": [
          "Cisco IMC"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/ciscoImcs",
        "method": "POST",
        "operationId": "addsCiscoIMCConfigurationToACatalystCenterNode",
        "summary": "Adds Cisco IMC configuration to a Catalyst Center node",
        "description": "\nThis API adds a Cisco Integrated Management Controller (IMC) configuration to a Cisco Catalyst Center node, identified by its `nodeId`. Obtain the `nodeId` from the `id` attribute in the response of the `/dna/intent/api/v1/nodes-config` API.\n\nThe Cisco IMC configuration APIs enable the management of connections between Cisco IMC and Cisco Catalyst Center. By providing the Cisco IMC IP address and credentials to Catalyst Center, Catalyst Center can access and report the health status of hardware components within the Cisco appliance.\n    \nMore data about the Cisco IMC can be retrieved using the APIs exposed directly by Cisco IMC. Details are available in the Cisco IMC documentation - https://www.cisco.com/c/en/us/support/servers-unified-computing/ucs-c-series-integrated-management-controller/series.html#~tab-documents\n    \nThe Cisco IMC configuration is relevant only for Catalyst Center deployments based on UCS appliances. In cases where Cisco IMC configuration is not supported by the deployment, these APIs will respond with a `404 Not Found` status code.\n\nWhen Cisco IMC configuration is supported, this API responds with the URL of a diagnostic task.",
        "tags": [
          "Cisco IMC"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Integrations": {
    "ITSM Integration": [
      {
        "path": "/dna/intent/api/v1/integration-settings/instances/itsm",
        "method": "POST",
        "operationId": "createITSMIntegrationSetting",
        "summary": "Create ITSM Integration setting",
        "description": "Creates ITSM Integration setting",
        "tags": [
          "ITSM Integration"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/integration-settings/instances/itsm/{instanceId}",
        "method": "GET",
        "operationId": "getITSMIntegrationSettingById",
        "summary": "Get ITSM Integration setting by Id",
        "description": "Fetches ITSM Integration setting by ID",
        "tags": [
          "ITSM Integration"
        ],
        "parameters": [
          "instanceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/integration-settings/instances/itsm/{instanceId}",
        "method": "PUT",
        "operationId": "updateITSMIntegrationSetting",
        "summary": "Update ITSM Integration setting",
        "description": "Updates the ITSM Integration setting",
        "tags": [
          "ITSM Integration"
        ],
        "parameters": [
          "instanceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/integration-settings/instances/itsm/{instanceId}",
        "method": "DELETE",
        "operationId": "deleteITSMIntegrationSetting",
        "summary": "Delete ITSM Integration setting",
        "description": " Deletes the ITSM Integration setting",
        "tags": [
          "ITSM Integration"
        ],
        "parameters": [
          "instanceId"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/integration-settings/itsm/instances",
        "method": "GET",
        "operationId": "getAllITSMIntegrationSettings",
        "summary": "Get all ITSM Integration settings",
        "description": "Fetches all ITSM Integration settings",
        "tags": [
          "ITSM Integration"
        ],
        "parameters": [],
        "query_parameters": [
          "page_size",
          "page",
          "sortBy",
          "order"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/integration-settings/status",
        "method": "GET",
        "operationId": "getITSMIntegrationStatus",
        "summary": "Get ITSM Integration status",
        "description": "Fetches ITSM Integration status",
        "tags": [
          "ITSM Integration"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "System Settings": {
    "": [
      {
        "path": "/dna/intent/api/v1/authentication-policy-servers/{id}",
        "method": "DELETE",
        "operationId": "deleteAuthenticationAndPolicyServerAccessConfiguration",
        "summary": "Delete Authentication and Policy Server Access Configuration",
        "description": "API to delete AAA/ISE server access configuration.",
        "tags": [
          "System Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/authentication-policy-servers/{id}",
        "method": "PUT",
        "operationId": "editAuthenticationAndPolicyServerAccessConfiguration",
        "summary": "Edit Authentication and Policy Server Access Configuration",
        "description": "API to edit AAA/ISE server access configuration. After edit, use \u2018Cisco ISE Server Integration Status\u2019 Intent API to check the integration status.",
        "tags": [
          "System Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/custom-prompt",
        "method": "GET",
        "operationId": "custom-promptSupportGETAPI",
        "summary": "Custom-prompt support GET API",
        "description": "Returns supported custom prompts by Catalyst Center",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/network-device/custom-prompt",
        "method": "POST",
        "operationId": "customPromptPOSTAPI",
        "summary": "Custom Prompt POST API",
        "description": "Save custom prompt added by user in Catalyst Center. API will always override the existing prompts. User should provide all the custom prompt in case of any update",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/serverSetting",
        "method": "POST",
        "operationId": "createsConfigurationDetailsOfTheExternalIPAMServer.",
        "summary": "Creates configuration details of the external IPAM server.",
        "description": "Creates configuration details of the external IPAM server. You should only create one external IPAM server; delete any existing external server before creating a new one.",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/serverSetting",
        "method": "GET",
        "operationId": "retrievesConfigurationDetailsOfTheExternalIPAMServer.",
        "summary": "Retrieves configuration details of the external IPAM server.",
        "description": "Retrieves configuration details of the external IPAM server.  If an external IPAM server has not been created, this resource will return a `404` response.",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/serverSetting",
        "method": "PUT",
        "operationId": "updatesConfigurationDetailsOfTheExternalIPAMServer.",
        "summary": "Updates configuration details of the external IPAM server.",
        "description": "Updates configuration details of the external IPAM server.",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ipam/serverSetting",
        "method": "DELETE",
        "operationId": "deletesConfigurationDetailsOfTheExternalIPAMServer.",
        "summary": "Deletes configuration details of the external IPAM server.",
        "description": "Deletes configuration details of the external IPAM server.",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/authentication-policy-servers",
        "method": "POST",
        "operationId": "addAuthenticationAndPolicyServerAccessConfiguration",
        "summary": "Add Authentication and Policy Server Access Configuration",
        "description": "API to add AAA/ISE server access configuration. Protocol can be configured as either RADIUS OR TACACS OR RADIUS_TACACS. If configuring Cisco ISE server, after configuration, use \u2018Cisco ISE Server Integration Status\u2019 Intent API to check the integration status. Based on integration status, if require use 'Accept Cisco ISE Server Certificate for Cisco ISE Server Integration' Intent API to accept the Cisco ISE certificate for Cisco ISE server integration, then use again \u2018Cisco ISE Server Integration Status\u2019 Intent API to check the integration status.",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/authentication-policy-servers",
        "method": "GET",
        "operationId": "getAuthenticationAndPolicyServers",
        "summary": "Get Authentication and Policy Servers",
        "description": "API to get Authentication and Policy Servers",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [
          "isIseEnabled",
          "state",
          "role"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/provisioningSettings",
        "method": "GET",
        "operationId": "getProvisioningSettings",
        "summary": "Get provisioning settings",
        "description": "Returns provisioning settings",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/provisioningSettings",
        "method": "PUT",
        "operationId": "setProvisioningSettings",
        "summary": "Set provisioning settings",
        "description": "Sets provisioning settings",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/integrate-ise/{id}",
        "method": "PUT",
        "operationId": "acceptCiscoISEServerCertificateForCiscoISEServerIntegration",
        "summary": "Accept Cisco ISE Server Certificate for Cisco ISE Server Integration",
        "description": "API to accept Cisco ISE server certificate for Cisco ISE server integration. Use \u2018Cisco ISE Server Integration Status\u2019 Intent API to check the integration status. This API can be used to retry the failed integration.",
        "tags": [
          "System Settings"
        ],
        "parameters": [
          "id"
        ],
        "query_parameters": [],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/ise-integration-status",
        "method": "GET",
        "operationId": "ciscoISEServerIntegrationStatus",
        "summary": "Cisco ISE Server Integration Status",
        "description": "API to check Cisco ISE server integration status.",
        "tags": [
          "System Settings"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Authentication": {
    "": [
      {
        "path": "/dna/intent/api/v1/certificate",
        "method": "POST",
        "operationId": "importCertificate",
        "summary": "importCertificate",
        "description": "This API enables a user to import a PEM certificate and its key for the controller and/or disaster recovery.",
        "tags": [
          "Authentication"
        ],
        "parameters": [],
        "query_parameters": [
          "pkPassword",
          "listOfUsers"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/certificate-p12",
        "method": "POST",
        "operationId": "importCertificateP12",
        "summary": "importCertificateP12",
        "description": "This API enables a user to import a PKCS12 certificate bundle for the controller and/or disaster recovery.",
        "tags": [
          "Authentication"
        ],
        "parameters": [],
        "query_parameters": [
          "p12Password",
          "pkPassword",
          "listOfUsers"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/system/api/v1/auth/token",
        "method": "POST",
        "operationId": "authenticationAPI",
        "summary": "Authentication API",
        "description": "API to obtain an access token, which remains valid for 1 hour. The token obtained using this API is required to be set as value to the X-Auth-Token HTTP Header for all API calls to Cisco DNA Center.",
        "tags": [
          "Authentication"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  },
  "Ecosystem Integrations": {
    "ITSM": [
      {
        "path": "/dna/intent/api/v1/cmdb-sync/detail",
        "method": "GET",
        "operationId": "getCMDBSyncStatus",
        "summary": "Get CMDB Sync Status",
        "description": "This API allows to retrieve the detail of CMDB sync status.It accepts two query parameter \"status\",\"date\".The supported values for status field are \"Success\",\"Failed\",\"Unknown\" and date field should be in \"YYYY-MM-DD\" format. By default all the cmdb sync status will be send as response and based on the query parameter filtered detail will be send as response.",
        "tags": [
          "ITSM"
        ],
        "parameters": [],
        "query_parameters": [
          "status",
          "date"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/integration/events",
        "method": "GET",
        "operationId": "getFailedITSMEvents",
        "summary": "Get Failed ITSM Events",
        "description": "Used to retrieve the list of integration events that failed to create tickets in ITSM",
        "tags": [
          "ITSM"
        ],
        "parameters": [],
        "query_parameters": [
          "instanceId"
        ],
        "version": "1.0.0"
      },
      {
        "path": "/dna/intent/api/v1/integration/events",
        "method": "POST",
        "operationId": "retryIntegrationEvents",
        "summary": "Retry Integration Events",
        "description": "Allows retry of multiple failed ITSM event instances. The retry request payload can be given as a list of strings: [\"instance1\",\"instance2\",\"instance3\",..] A minimum of one instance Id is mandatory. The list of failed event instance Ids can be retrieved using the 'Get Failed ITSM Events' API in the 'instanceId' attribute.",
        "tags": [
          "ITSM"
        ],
        "parameters": [],
        "query_parameters": [],
        "version": "1.0.0"
      }
    ]
  }
}